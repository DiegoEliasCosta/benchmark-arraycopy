# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkByteArrayCopy.benchmarkArrayManualCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 0.00% complete, ETA 00:03:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1702752.565 ops/s
# Warmup Iteration   2: 1499310.076 ops/s
# Warmup Iteration   3: 1787672.747 ops/s
Iteration   1: 1832344.491 ops/s
Iteration   2: 1701151.494 ops/s
Iteration   3: 1765145.873 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy":
  1766213.952 ±(99.9%) 1196843.297 ops/s [Average]
  (min, avg, max) = (1701151.494, 1766213.952, 1832344.491), stdev = 65603.020
  CI (99.9%): [569370.656, 2963057.249] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 129758 total address lines.
Perf output processed (skipped 3.171 seconds):
 Column 1: cycles (5603 events)
 Column 2: instructions (5666 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7fdc411e9579:0x7fdc411e965b] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

                             0x00007fdc411e9579: mov    %r11b,0x10(%rsi,%rdx,1)  ;*bastore
                                                                           ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                                                                           ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                                                                           ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                             0x00007fdc411e957e: inc    %r9d               ;*iinc
                                                                           ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                                                                           ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                             0x00007fdc411e9581: cmp    %r8d,%r9d
                             0x00007fdc411e9584: jl     0x00007fdc411e9570  ;*invokevirtual benchmarkArrayManualCopy
                                                                           ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%  ↗       ↗  0x00007fdc411e9586: movzbl 0x94(%rax),%r11d   ;*getfield isDone
                  │       │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@24 (line 106)
  0.16%    0.16%  │       │  0x00007fdc411e958e: add    $0x1,%rbp          ; OopMap{rbx=Oop rdi=Oop rax=Oop off=370}
                  │       │                                                ;*ifeq
                  │       │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@27 (line 106)
                  │       │  0x00007fdc411e9592: test   %eax,0x178f0a68(%rip)        # 0x00007fdc58ada000
                  │       │                                                ;   {poll}
  0.14%    0.16%  │       │  0x00007fdc411e9598: test   %r11d,%r11d
                  │       │  0x00007fdc411e959b: jne    0x00007fdc411e954b  ;*aload_3
                  │       │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@13 (line 104)
                  │       │  0x00007fdc411e959d: mov    0x20(%rdi),%r8d    ;*getfield itemCount
                  │       │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@4 (line 69)
                  │       │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │       │  0x00007fdc411e95a1: test   %r8d,%r8d
                  ╰       │  0x00007fdc411e95a4: jle    0x00007fdc411e9586  ;*if_icmpge
                          │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                          │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                          │  0x00007fdc411e95a6: mov    0x28(%rdi),%r9d    ;*getfield byteSource
                          │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@6 (line 31)
                          │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                          │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%                   │  0x00007fdc411e95aa: mov    0xc(%r12,%r9,8),%edx  ;*baload
                          │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@10 (line 31)
                          │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                          │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                          │                                                ; implicit exception: dispatches to 0x00007fdc411e9646
  0.11%    0.16%          │  0x00007fdc411e95af: test   %edx,%edx
                   ╭      │  0x00007fdc411e95b1: jbe    0x00007fdc411e9646
  0.04%    0.05%   │      │  0x00007fdc411e95b7: mov    %r8d,%r11d
                   │      │  0x00007fdc411e95ba: dec    %r11d
                   │      │  0x00007fdc411e95bd: cmp    %edx,%r11d
  0.02%            │╭     │  0x00007fdc411e95c0: jae    0x00007fdc411e9646  ;*aload_0
                   ││     │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                   ││     │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.02%    0.02%   ││     │  0x00007fdc411e95c6: mov    0x2c(%rdi),%edx    ;*getfield byteTarget
                   ││     │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@1 (line 31)
                   ││     │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                   ││     │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   ││     │  0x00007fdc411e95c9: mov    0xc(%r12,%rdx,8),%ecx  ;*bastore
                   ││     │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                   ││     │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                   ││     │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   ││     │                                                ; implicit exception: dispatches to 0x00007fdc411e9646
                   ││     │  0x00007fdc411e95ce: test   %ecx,%ecx
                   ││╭    │  0x00007fdc411e95d0: jbe    0x00007fdc411e9646
                   │││    │  0x00007fdc411e95d2: cmp    %ecx,%r11d
                   │││╭   │  0x00007fdc411e95d5: jae    0x00007fdc411e9646
  0.05%            ││││   │  0x00007fdc411e95d7: cmp    %r10d,%r8d
                   ││││   │  0x00007fdc411e95da: mov    %r8d,%r11d
                   ││││   │  0x00007fdc411e95dd: cmovg  %r10d,%r11d
  0.02%            ││││   │  0x00007fdc411e95e1: lea    (%r12,%r9,8),%rcx
                   ││││   │  0x00007fdc411e95e5: lea    (%r12,%rdx,8),%rsi
  0.02%            ││││   │  0x00007fdc411e95e9: xor    %r9d,%r9d          ;*aload_0
                   ││││   │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                   ││││   │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%            ││││↗  │  0x00007fdc411e95ec: movslq %r9d,%r13          ;*baload
                   │││││  │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@10 (line 31)
                   │││││  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                   │││││  │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.14%    0.04%   │││││  │  0x00007fdc411e95ef: movsbl 0x10(%rcx,%r13,1),%edx
           0.02%   │││││  │  0x00007fdc411e95f5: mov    %dl,0x10(%rsi,%r13,1)  ;*bastore
                   │││││  │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                   │││││  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                   │││││  │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.21%    0.14%   │││││  │  0x00007fdc411e95fa: inc    %r9d               ;*iinc
                   │││││  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                   │││││  │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   │││││  │  0x00007fdc411e95fd: cmp    %r11d,%r9d
  0.18%    0.02%   ││││╰  │  0x00007fdc411e9600: jl     0x00007fdc411e95ec  ;*if_icmpge
                   ││││   │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                   ││││   │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   ││││   │  0x00007fdc411e9602: mov    %r8d,%r11d
                   ││││   │  0x00007fdc411e9605: add    $0xfffffffffffffff9,%r11d
                   ││││   │  0x00007fdc411e9609: cmp    %r11d,%r8d
  0.02%    0.02%   ││││   │  0x00007fdc411e960c: cmovl  %r14d,%r11d
  0.02%            ││││   │  0x00007fdc411e9610: cmp    %r11d,%r9d
                   ││││ ╭ │  0x00007fdc411e9613: jge    0x00007fdc411e9638
                   ││││ │ │  0x00007fdc411e9615: nopw   0x0(%rax,%rax,1)   ;*aload_0
                   ││││ │ │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                   ││││ │ │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 12.14%   11.98%   ││││ │↗│  0x00007fdc411e9620: movslq %r9d,%rdx          ;*baload
                   ││││ │││                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@10 (line 31)
                   ││││ │││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                   ││││ │││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 13.33%   12.74%   ││││ │││  0x00007fdc411e9623: vmovq  0x10(%rcx,%rdx,1),%xmm0
 14.62%   15.30%   ││││ │││  0x00007fdc411e9629: vmovq  %xmm0,0x10(%rsi,%rdx,1)  ;*bastore
                   ││││ │││                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                   ││││ │││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                   ││││ │││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 16.94%   17.40%   ││││ │││  0x00007fdc411e962f: add    $0x8,%r9d          ;*iinc
                   ││││ │││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                   ││││ │││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 12.37%   11.98%   ││││ │││  0x00007fdc411e9633: cmp    %r11d,%r9d
                   ││││ │╰│  0x00007fdc411e9636: jl     0x00007fdc411e9620  ;*if_icmpge
                   ││││ │ │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                   ││││ │ │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%    0.02%   ││││ ↘ │  0x00007fdc411e9638: cmp    %r8d,%r9d
                   ││││   │  0x00007fdc411e963b: jl     0x00007fdc411e9570
  0.23%    0.14%   ││││   ╰  0x00007fdc411e9641: jmpq   0x00007fdc411e9586
                   ↘↘↘↘      0x00007fdc411e9646: mov    $0xffffff86,%esi
                             0x00007fdc411e964b: mov    %rax,(%rsp)
                             0x00007fdc411e964f: mov    %rbx,0x8(%rsp)
                             0x00007fdc411e9654: mov    %rdi,0x18(%rsp)
                             0x00007fdc411e9659: xchg   %ax,%ax
                             0x00007fdc411e965b: callq  0x00007fdc410051a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop off=576}
                                                                           ;*aload_0
                                                                           ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                                                                           ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                                                                           ;   {runtime_call}
....................................................................................................
 70.93%   70.37%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7fdc411eb3d6:0x7fdc411eb4c0] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

                                                                        ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                                                                        ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                          0x00007fdc411eb3d6: inc    %edx               ;*iinc
                                                                        ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                                                                        ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                          0x00007fdc411eb3d8: cmp    %r8d,%edx
                          0x00007fdc411eb3db: jl     0x00007fdc411eb3c8  ;*invokevirtual benchmarkArrayManualCopy
                                                                        ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   ↗   ↗  0x00007fdc411eb3dd: movzbl 0x94(%rdi),%r8d    ;*getfield isDone
                   │   │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@24 (line 106)
  0.04%    0.04%   │   │  0x00007fdc411eb3e5: mov    0x10(%rsp),%r11
  0.05%            │   │  0x00007fdc411eb3ea: add    $0x1,%r11          ;*ladd
                   │   │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@20 (line 105)
                   │   │  0x00007fdc411eb3ee: mov    %r11,0x10(%rsp)    ; OopMap{rdi=Oop r13=Oop r14=Oop off=211}
                   │   │                                                ;*ifeq
                   │   │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@27 (line 106)
  0.02%            │   │  0x00007fdc411eb3f3: test   %eax,0x178eec07(%rip)        # 0x00007fdc58ada000
                   │   │                                                ;   {poll}
  0.05%            │   │  0x00007fdc411eb3f9: test   %r8d,%r8d
                  ╭│   │  0x00007fdc411eb3fc: jne    0x00007fdc411eb4a6  ;*aload_3
                  ││   │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@13 (line 104)
                  ││   │  0x00007fdc411eb402: mov    0x20(%r14),%r8d    ;*getfield itemCount
                  ││   │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@4 (line 69)
                  ││   │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%           ││   │  0x00007fdc411eb406: test   %r8d,%r8d
                  │╰   │  0x00007fdc411eb409: jle    0x00007fdc411eb3dd  ;*if_icmpge
                  │    │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                  │    │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │    │  0x00007fdc411eb40b: mov    0x28(%r14),%r11d   ;*getfield byteSource
                  │    │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@6 (line 31)
                  │    │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │    │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │    │  0x00007fdc411eb40f: mov    0xc(%r12,%r11,8),%r9d  ;*baload
                  │    │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@10 (line 31)
                  │    │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │    │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │    │                                                ; implicit exception: dispatches to 0x00007fdc411eb4d0
                  │    │  0x00007fdc411eb414: test   %r9d,%r9d
                  │    │  0x00007fdc411eb417: jbe    0x00007fdc411eb4d0
  0.02%           │    │  0x00007fdc411eb41d: mov    %r8d,%ecx
                  │    │  0x00007fdc411eb420: dec    %ecx
                  │    │  0x00007fdc411eb422: cmp    %r9d,%ecx
                  │    │  0x00007fdc411eb425: jae    0x00007fdc411eb4d0  ;*aload_0
                  │    │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                  │    │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │    │  0x00007fdc411eb42b: mov    0x2c(%r14),%r9d    ;*getfield byteTarget
                  │    │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@1 (line 31)
                  │    │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │    │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │    │  0x00007fdc411eb42f: mov    0xc(%r12,%r9,8),%edx  ;*bastore
                  │    │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                  │    │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │    │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │    │                                                ; implicit exception: dispatches to 0x00007fdc411eb4d0
                  │    │  0x00007fdc411eb434: test   %edx,%edx
                  │    │  0x00007fdc411eb436: jbe    0x00007fdc411eb4d0
  0.04%           │    │  0x00007fdc411eb43c: cmp    %edx,%ecx
                  │    │  0x00007fdc411eb43e: jae    0x00007fdc411eb4d0
                  │    │  0x00007fdc411eb444: cmp    %r10d,%r8d
                  │    │  0x00007fdc411eb447: mov    %r8d,%ecx
                  │    │  0x00007fdc411eb44a: cmovg  %r10d,%ecx
                  │    │  0x00007fdc411eb44e: shl    $0x3,%r9
                  │    │  0x00007fdc411eb452: lea    (%r12,%r11,8),%rsi
                  │    │  0x00007fdc411eb456: xor    %edx,%edx          ;*aload_0
                  │    │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                  │    │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
           0.02%  │ ↗  │  0x00007fdc411eb458: movslq %edx,%rbp          ;*baload
                  │ │  │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@10 (line 31)
                  │ │  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │ │  │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │ │  │  0x00007fdc411eb45b: movsbl 0x10(%rsi,%rbp,1),%r11d
  0.04%           │ │  │  0x00007fdc411eb461: mov    %r11b,0x10(%r9,%rbp,1)  ;*bastore
                  │ │  │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                  │ │  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │ │  │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%    0.04%  │ │  │  0x00007fdc411eb466: inc    %edx               ;*iinc
                  │ │  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  │ │  │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
           0.02%  │ │  │  0x00007fdc411eb468: cmp    %ecx,%edx
                  │ ╰  │  0x00007fdc411eb46a: jl     0x00007fdc411eb458  ;*if_icmpge
                  │    │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                  │    │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │    │  0x00007fdc411eb46c: mov    %r8d,%r11d
                  │    │  0x00007fdc411eb46f: add    $0xfffffffffffffff9,%r11d
                  │    │  0x00007fdc411eb473: cmp    %r11d,%r8d
                  │    │  0x00007fdc411eb476: cmovl  %eax,%r11d
                  │    │  0x00007fdc411eb47a: cmp    %r11d,%edx
                  │  ╭ │  0x00007fdc411eb47d: jge    0x00007fdc411eb498
                  │  │ │  0x00007fdc411eb47f: nop                       ;*aload_0
                  │  │ │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                  │  │ │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  2.57%    2.58%  │  │↗│  0x00007fdc411eb480: movslq %edx,%rcx          ;*baload
                  │  │││                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@10 (line 31)
                  │  │││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │  │││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  3.39%    3.04%  │  │││  0x00007fdc411eb483: vmovq  0x10(%rsi,%rcx,1),%xmm0
  3.44%    3.79%  │  │││  0x00007fdc411eb489: vmovq  %xmm0,0x10(%r9,%rcx,1)  ;*bastore
                  │  │││                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                  │  │││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │  │││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  4.52%    4.22%  │  │││  0x00007fdc411eb490: add    $0x8,%edx          ;*iinc
                  │  │││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  │  │││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  2.02%    2.65%  │  │││  0x00007fdc411eb493: cmp    %r11d,%edx
                  │  │╰│  0x00007fdc411eb496: jl     0x00007fdc411eb480  ;*if_icmpge
                  │  │ │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                  │  │ │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │  ↘ │  0x00007fdc411eb498: cmp    %r8d,%edx
                  │    │  0x00007fdc411eb49b: jl     0x00007fdc411eb3c8
  0.07%    0.04%  │    ╰  0x00007fdc411eb4a1: jmpq   0x00007fdc411eb3dd
                  ↘       0x00007fdc411eb4a6: mov    $0x7fdc577eee10,%r10
                          0x00007fdc411eb4b0: callq  *%r10              ;*invokestatic nanoTime
                                                                        ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@31 (line 107)
                          0x00007fdc411eb4b3: mov    %rax,0x30(%r13)    ;*putfield stopTime
                                                                        ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@34 (line 107)
                                                                        ; implicit exception: dispatches to 0x00007fdc411eb551
                          0x00007fdc411eb4b7: mov    %rbx,0x20(%r13)    ;*putfield realTime
                                                                        ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@40 (line 108)
                          0x00007fdc411eb4bb: mov    0x10(%rsp),%r10
                          0x00007fdc411eb4c0: mov    %r10,0x18(%r13)    ;*putfield measuredOps
....................................................................................................
 16.33%   16.41%  <total for region 2>

....[Hottest Regions]...............................................................................
 70.93%   70.37%  [0x7fdc411e9579:0x7fdc411e965b] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
 16.33%   16.41%  [0x7fdc411eb3d6:0x7fdc411eb4c0] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  5.57%    6.05%  [0x7fdc411e3906:0x7fdc411e3983] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  1.71%    1.68%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.68%    0.95%  [0x7fdc411e0944:0x7fdc411e0980] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.12%    0.07%  [0xffffffff810dd290:0xffffffff810dd2cc] in [unknown] ([unknown])
  0.11%    0.04%  [0xffffffff811ffe5e:0xffffffff811ffe78] in [unknown] ([unknown])
  0.11%    0.04%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.11%    0.02%  [0xffffffff817f1c10:0xffffffff817f1c37] in [unknown] ([unknown])
  0.07%    0.04%  [0xffffffff817f16b5:0xffffffff817f16bb] in [unknown] ([unknown])
  0.07%    0.02%  [0x7fdc554bf143:0x7fdc554bf15e] in print_insn (hsdis-amd64.so)
  0.07%    0.07%  [0x7fdc577fe590:0x7fdc577fe5a5] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.07%    0.11%  [0x7fdc57f342c9:0x7fdc57f34322] in _IO_default_xsputn (libc-2.21.so)
  0.07%    0.02%  [0x7fdc586a9bdf:0x7fdc586a9c03] in pthread_getspecific (libpthread-2.21.so)
  0.05%    0.07%  [0xffffffff81182a30:0xffffffff81182a43] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff811fff0b:0xffffffff811fff18] in [unknown] ([unknown])
  0.05%           [0xffffffff813d2dea:0xffffffff813d2dea] in [unknown] ([unknown])
  0.05%    0.07%  [0xffffffff813d3030:0xffffffff813d3037] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff817f1a00:0xffffffff817f1a26] in [unknown] ([unknown])
  0.05%    0.04%  [0x7fdc411e389a:0x7fdc411e38ee] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  3.64%    3.88%  <...other 293 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 92.88%   92.87%  net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  4.14%    3.62%  [unknown] ([unknown])
  0.70%    0.97%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.16%    0.05%  print_insn (hsdis-amd64.so)
  0.14%    0.09%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.12%    0.11%  _IO_default_xsputn (libc-2.21.so)
  0.11%    0.21%  vfprintf (libc-2.21.so)
  0.07%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.07%    0.19%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.02%  pthread_getspecific (libpthread-2.21.so)
  0.07%    0.14%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%    0.05%  _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.07%    0.07%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.14%  _IO_fwrite (libc-2.21.so)
  0.04%           jio_print (libjvm.so)
  0.04%    0.07%  _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.04%           _ZN13defaultStream4holdEl (libjvm.so)
  0.04%    0.07%  _ZN12outputStream12do_vsnprintfEPcmPKcP13__va_list_tagbRm (libjvm.so)
  0.04%           _ZN10decode_env17print_insn_labelsEv (libjvm.so)
  0.04%    0.02%  __GI___mempcpy (libc-2.21.so)
  1.04%    0.34%  <...other 58 warm methods...>
....................................................................................................
 99.98%   99.03%  <totals>

....[Distribution by Area]..........................................................................
 93.74%   93.84%  <generated code>
  4.14%    3.62%  <native code in ([unknown])>
  1.25%    1.41%  <native code in (libjvm.so)>
  0.54%    0.85%  <native code in (libc-2.21.so)>
  0.23%    0.16%  <native code in (hsdis-amd64.so)>
  0.09%    0.09%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.98%  100.00%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkByteArrayCopy.benchmarkArrayManualCopy_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 3.33% complete, ETA 00:05:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1792859.892 ops/s
# Warmup Iteration   2: 1899389.501 ops/s
# Warmup Iteration   3: 1701247.537 ops/s
Iteration   1: 1798834.208 ops/s
Iteration   2: 1820952.057 ops/s
Iteration   3: 1697305.468 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Dec":
  1772363.911 ±(99.9%) 1202927.940 ops/s [Average]
  (min, avg, max) = (1697305.468, 1772363.911, 1820952.057), stdev = 65936.539
  CI (99.9%): [569435.971, 2975291.851] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 135911 total address lines.
Perf output processed (skipped 3.199 seconds):
 Column 1: cycles (5693 events)
 Column 2: instructions (5656 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f2ebd1fa181:0x7f2ebd1fa25f] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                             0x00007f2ebd1fa181: mov    %r10b,0x10(%rsi,%r11,1)  ;*bastore
                                                                           ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                                                                           ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                           ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                             0x00007f2ebd1fa186: dec    %edi               ;*iinc
                                                                           ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                                                                           ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                             0x00007f2ebd1fa188: cmp    $0xffffffffffffffff,%edi
                             0x00007f2ebd1fa18b: jg     0x00007f2ebd1fa178  ;*invokevirtual benchmarkArrayManualCopy_Dec
                                                                           ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.04%    0.04%  ↗       ↗  0x00007f2ebd1fa18d: movzbl 0x94(%rax),%r10d   ;*getfield isDone
                  │       │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@24 (line 106)
  0.05%    0.09%  │       │  0x00007f2ebd1fa195: add    $0x1,%rbp          ; OopMap{rcx=Oop rbx=Oop rax=Oop off=377}
                  │       │                                                ;*ifeq
                  │       │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@27 (line 106)
                  │       │  0x00007f2ebd1fa199: test   %eax,0x17e07e61(%rip)        # 0x00007f2ed5002000
                  │       │                                                ;   {poll}
  0.04%    0.14%  │       │  0x00007f2ebd1fa19f: test   %r10d,%r10d
                  │       │  0x00007f2ebd1fa1a2: jne    0x00007f2ebd1fa150  ;*aload_3
                  │       │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                  │       │  0x00007f2ebd1fa1a4: mov    0x20(%rcx),%edx    ;*getfield itemCount
                  │       │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@1 (line 76)
                  │       │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │       │  0x00007f2ebd1fa1a7: mov    %edx,%edi
                  │       │  0x00007f2ebd1fa1a9: dec    %edi               ;*isub
                  │       │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@5 (line 76)
                  │       │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.04%  │       │  0x00007f2ebd1fa1ab: test   %edi,%edi
                  ╰       │  0x00007f2ebd1fa1ad: jl     0x00007f2ebd1fa18d  ;*iflt
                          │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                          │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                          │  0x00007f2ebd1fa1af: mov    0x28(%rcx),%r10d   ;*getfield byteSource
                          │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@6 (line 31)
                          │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                          │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                          │  0x00007f2ebd1fa1b3: mov    0xc(%r12,%r10,8),%r11d  ;*baload
                          │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@10 (line 31)
                          │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                          │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                          │                                                ; implicit exception: dispatches to 0x00007f2ebd1fa247
  0.07%    0.07%          │  0x00007f2ebd1fa1b8: test   %r11d,%r11d
                   ╭      │  0x00007f2ebd1fa1bb: jbe    0x00007f2ebd1fa247
  0.02%            │      │  0x00007f2ebd1fa1c1: cmp    %r11d,%edi
                   │╭     │  0x00007f2ebd1fa1c4: jae    0x00007f2ebd1fa247  ;*aload_0
                   ││     │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                   ││     │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   ││     │  0x00007f2ebd1fa1ca: mov    0x2c(%rcx),%r9d    ;*getfield byteTarget
                   ││     │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@1 (line 31)
                   ││     │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                   ││     │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   ││     │  0x00007f2ebd1fa1ce: mov    0xc(%r12,%r9,8),%r11d  ;*bastore
                   ││     │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                   ││     │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                   ││     │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   ││     │                                                ; implicit exception: dispatches to 0x00007f2ebd1fa247
  0.02%            ││     │  0x00007f2ebd1fa1d3: test   %r11d,%r11d
                   ││╭    │  0x00007f2ebd1fa1d6: jbe    0x00007f2ebd1fa247
  0.04%            │││    │  0x00007f2ebd1fa1d8: cmp    %r11d,%edi
                   │││╭   │  0x00007f2ebd1fa1db: jae    0x00007f2ebd1fa247
                   ││││   │  0x00007f2ebd1fa1dd: lea    (%r12,%r9,8),%rsi
                   ││││   │  0x00007f2ebd1fa1e1: mov    %edx,%r9d
                   ││││   │  0x00007f2ebd1fa1e4: add    $0x7,%r9d
                   ││││   │  0x00007f2ebd1fa1e8: lea    (%r12,%r10,8),%r13
  0.02%            ││││   │  0x00007f2ebd1fa1ec: and    $0x7,%r9d
                   ││││   │  0x00007f2ebd1fa1f0: sub    %r9d,%edx
                   ││││   │  0x00007f2ebd1fa1f3: add    $0xfffffffffffffffe,%edx
  0.02%            ││││   │  0x00007f2ebd1fa1f6: cmp    %r8d,%edx
           0.02%   ││││   │  0x00007f2ebd1fa1f9: cmovl  %r8d,%edx          ;*aload_0
                   ││││   │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                   ││││   │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.07%    0.02%   ││││↗  │  0x00007f2ebd1fa1fd: movslq %edi,%r10          ;*baload
                   │││││  │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@10 (line 31)
                   │││││  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                   │││││  │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%   │││││  │  0x00007f2ebd1fa200: movsbl 0x10(%r13,%r10,1),%r11d
  0.12%    0.02%   │││││  │  0x00007f2ebd1fa206: mov    %r11b,0x10(%rsi,%r10,1)  ;*bastore
                   │││││  │                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                   │││││  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                   │││││  │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.16%    0.04%   │││││  │  0x00007f2ebd1fa20b: dec    %edi               ;*iinc
                   │││││  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                   │││││  │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   │││││  │  0x00007f2ebd1fa20d: cmp    %edx,%edi
                   ││││╰  │  0x00007f2ebd1fa20f: jg     0x00007f2ebd1fa1fd  ;*iflt
                   ││││   │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                   ││││   │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   ││││   │  0x00007f2ebd1fa211: cmp    $0x6,%edi
                   ││││ ╭ │  0x00007f2ebd1fa214: jle    0x00007f2ebd1fa239
  0.05%            ││││ │ │  0x00007f2ebd1fa216: nopw   0x0(%rax,%rax,1)   ;*aload_0
                   ││││ │ │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                   ││││ │ │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
 11.79%   11.55%   ││││ │↗│  0x00007f2ebd1fa220: movslq %edi,%r10
 14.53%   13.51%   ││││ │││  0x00007f2ebd1fa223: vmovq  0x9(%r13,%r10,1),%xmm0
 15.28%   15.93%   ││││ │││  0x00007f2ebd1fa22a: vmovq  %xmm0,0x9(%rsi,%r10,1)  ;*bastore
                   ││││ │││                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                   ││││ │││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                   ││││ │││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
 17.11%   18.60%   ││││ │││  0x00007f2ebd1fa231: add    $0xfffffffffffffff8,%edi  ;*iinc
                   ││││ │││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                   ││││ │││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
 10.17%    9.74%   ││││ │││  0x00007f2ebd1fa234: cmp    $0x6,%edi
                   ││││ │╰│  0x00007f2ebd1fa237: jg     0x00007f2ebd1fa220  ;*iflt
                   ││││ │ │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                   ││││ │ │                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.14%    0.07%   ││││ ↘ │  0x00007f2ebd1fa239: cmp    $0xffffffffffffffff,%edi
                   ││││   │  0x00007f2ebd1fa23c: jg     0x00007f2ebd1fa178
  0.14%    0.19%   ││││   ╰  0x00007f2ebd1fa242: jmpq   0x00007f2ebd1fa18d
                   ↘↘↘↘      0x00007f2ebd1fa247: mov    $0xffffff86,%esi
                             0x00007f2ebd1fa24c: mov    %rax,(%rsp)
                             0x00007f2ebd1fa250: mov    %rbx,0x8(%rsp)
                             0x00007f2ebd1fa255: mov    %rcx,0x18(%rsp)
                             0x00007f2ebd1fa25a: mov    %edi,0x20(%rsp)
                             0x00007f2ebd1fa25e: nop    
                             0x00007f2ebd1fa25f: callq  0x00007f2ebd0051a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop off=580}
                                                                           ;*aload_0
                                                                           ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                           ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
....................................................................................................
 69.93%   70.07%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f2ebd1f6523:0x7f2ebd1f65a1] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                     ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                                                                     ; implicit exception: dispatches to 0x00007f2ebd1f65c1
                       0x00007f2ebd1f6523: test   %edi,%edi
                       0x00007f2ebd1f6525: jbe    0x00007f2ebd1f65c1
                       0x00007f2ebd1f652b: cmp    %edi,%ecx
                       0x00007f2ebd1f652d: jae    0x00007f2ebd1f65c1
                       0x00007f2ebd1f6533: lea    (%r12,%r8,8),%rdi
                       0x00007f2ebd1f6537: mov    %r11d,%r8d
                       0x00007f2ebd1f653a: add    $0x7,%r8d
  0.02%    0.02%       0x00007f2ebd1f653e: shl    $0x3,%r9
                       0x00007f2ebd1f6542: and    $0x7,%r8d
                       0x00007f2ebd1f6546: sub    %r8d,%r11d
                       0x00007f2ebd1f6549: add    $0xfffffffffffffffe,%r11d
           0.04%       0x00007f2ebd1f654d: cmp    %r10d,%r11d
                       0x00007f2ebd1f6550: cmovl  %r10d,%r11d        ;*aload_0
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                     ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.04%  ↗    0x00007f2ebd1f6554: movslq %ecx,%rsi          ;*baload
                  │                                                  ; - net.greypanther.BenchmarkByteArrayCopy::copy@10 (line 31)
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │                                                  ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.04%    0.04%  │    0x00007f2ebd1f6557: movsbl 0x10(%r9,%rsi,1),%r8d
  0.07%    0.02%  │    0x00007f2ebd1f655d: mov    %r8b,0x10(%rdi,%rsi,1)  ;*bastore
                  │                                                  ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │                                                  ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%           │    0x00007f2ebd1f6562: dec    %ecx               ;*iinc
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  │                                                  ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%           │    0x00007f2ebd1f6564: cmp    %r11d,%ecx
                  ╰    0x00007f2ebd1f6567: jg     0x00007f2ebd1f6554  ;*iflt
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                                                                     ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                       0x00007f2ebd1f6569: cmp    $0x6,%ecx
                   ╭   0x00007f2ebd1f656c: jle    0x00007f2ebd1f6589
                   │   0x00007f2ebd1f656e: xchg   %ax,%ax            ;*aload_0
                   │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                   │                                                 ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  3.37%    3.20%   │↗  0x00007f2ebd1f6570: movslq %ecx,%r11
  3.04%    3.43%   ││  0x00007f2ebd1f6573: vmovq  0x9(%r9,%r11,1),%xmm0
  2.97%    3.59%   ││  0x00007f2ebd1f657a: vmovq  %xmm0,0x9(%rdi,%r11,1)  ;*bastore
                   ││                                                ; - net.greypanther.BenchmarkByteArrayCopy::copy@11 (line 31)
                   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                   ││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  3.93%    3.20%   ││  0x00007f2ebd1f6581: add    $0xfffffffffffffff8,%ecx  ;*iinc
                   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                   ││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  3.23%    3.36%   ││  0x00007f2ebd1f6584: cmp    $0x6,%ecx
                   │╰  0x00007f2ebd1f6587: jg     0x00007f2ebd1f6570  ;*iflt
                   │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                   │                                                 ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   ↘   0x00007f2ebd1f6589: cmp    $0xffffffffffffffff,%ecx
                       0x00007f2ebd1f658c: jg     0x00007f2ebd1f64c4
                       0x00007f2ebd1f6592: jmpq   0x00007f2ebd1f64d9
                       0x00007f2ebd1f6597: mov    $0x7f2ed3d16e10,%r10
                       0x00007f2ebd1f65a1: callq  *%r10              ;*invokestatic nanoTime
....................................................................................................
 16.72%   16.92%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.93%   70.07%  [0x7f2ebd1fa181:0x7f2ebd1fa25f] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
 16.72%   16.92%  [0x7f2ebd1f6523:0x7f2ebd1f65a1] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  4.88%    4.84%  [0x7f2ebd1ee0c4:0x7f2ebd1ee11c] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  2.41%    2.40%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.77%    0.85%  [0x7f2ebd1ead34:0x7f2ebd1ead80] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.18%    0.12%  [0xffffffff810dd29c:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.14%    0.04%  [0xffffffff811ffe5e:0xffffffff811ffe78] in [unknown] ([unknown])
  0.14%    0.14%  [0x7f2ed3d29221:0x7f2ed3d29242] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.11%    0.04%  [0xffffffff81368586:0xffffffff813685de] in [unknown] ([unknown])
  0.09%    0.04%  [0xffffffff8121abe2:0xffffffff8121ac06] in [unknown] ([unknown])
  0.09%    0.04%  [0xffffffff817efbd0:0xffffffff817efbd3] in [unknown] ([unknown])
  0.09%    0.05%  [0xffffffff817f1a0b:0xffffffff817f1a26] in [unknown] ([unknown])
  0.09%    0.02%  [0xffffffff817f1c10:0xffffffff817f1c37] in [unknown] ([unknown])
  0.09%    0.04%  [0x7f2ed444fa90:0x7f2ed444faa2] in _IO_fwrite (libc-2.21.so)
  0.07%           [0xffffffff810ed825:0xffffffff810ed855] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff811fe696:0xffffffff811fe6cf] in [unknown] ([unknown])
  0.07%    0.05%  [0xffffffff817efb30:0xffffffff817efb49] in [unknown] ([unknown])
  0.07%    0.07%  [0x7f2ed3d2657b:0x7f2ed3d26598] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.07%    0.07%  [0x7f2ed3d9eb27:0x7f2ed3d9eb88] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.05%    0.05%  [0xffffffff8116eb10:0xffffffff8116eb10] in [unknown] ([unknown])
  3.86%    4.14%  <...other 310 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.62%   91.94%  net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  4.94%    4.60%  [unknown] ([unknown])
  0.77%    0.87%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.19%    0.14%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.16%    0.09%  _IO_fwrite (libc-2.21.so)
  0.16%    0.02%  print_insn (hsdis-amd64.so)
  0.14%    0.35%  vfprintf (libc-2.21.so)
  0.07%    0.04%  _IO_default_xsputn (libc-2.21.so)
  0.07%    0.09%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%    0.09%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.07%    0.07%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.05%  __strchr_sse2 (libc-2.21.so)
  0.05%    0.02%  _ZN7Monitor6unlockEv (libjvm.so)
  0.05%           __strcpy_sse2_unaligned (libc-2.21.so)
  0.05%    0.02%  _ZN7nmethod16reloc_string_forEPhS0_ (libjvm.so)
  0.05%           _IO_str_init_static_internal (libc-2.21.so)
  0.05%    0.05%  strlen (libc-2.21.so)
  0.04%    0.04%  [unknown] (libpthread-2.21.so)
  0.04%           strcpy@plt (hsdis-amd64.so)
  0.04%           decode_instructions (hsdis-amd64.so)
  1.30%    0.55%  <...other 70 warm methods...>
....................................................................................................
 99.98%   99.01%  <totals>

....[Distribution by Area]..........................................................................
 92.57%   92.82%  <generated code>
  4.94%    4.60%  <native code in ([unknown])>
  1.26%    1.40%  <native code in (libjvm.so)>
  0.77%    0.94%  <native code in (libc-2.21.so)>
  0.35%    0.07%  <native code in (hsdis-amd64.so)>
  0.09%    0.18%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.98%  100.00%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkByteArrayCopy.benchmarkArrayManualCopy_Overlap_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 6.67% complete, ETA 00:04:44
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 275173.930 ops/s
# Warmup Iteration   2: 264657.362 ops/s
# Warmup Iteration   3: 282728.501 ops/s
Iteration   1: 290681.708 ops/s
Iteration   2: 273346.138 ops/s
Iteration   3: 279596.237 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Overlap_Dec":
  281208.028 ±(99.9%) 160170.015 ops/s [Average]
  (min, avg, max) = (273346.138, 281208.028, 290681.708), stdev = 8779.459
  CI (99.9%): [121038.013, 441378.043] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 135943 total address lines.
Perf output processed (skipped 3.140 seconds):
 Column 1: cycles (6043 events)
 Column 2: instructions (6052 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f9d291f609d:0x7f9d291f6128] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                                                                    ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                      0x00007f9d291f609d: cmp    %r10d,%r9d
                      0x00007f9d291f60a0: jg     0x00007f9d291f608c  ;*ifle
                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                    ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                      0x00007f9d291f60a2: cmp    $0x7,%r9d
                  ╭   0x00007f9d291f60a6: jle    0x00007f9d291f6115
                  │   0x00007f9d291f60a8: nopl   0x0(%rax,%rax,1)   ;*aload_0
                  │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                  │                                                 ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  1.04%    0.84%  │↗  0x00007f9d291f60b0: movslq %r9d,%rdi
  0.05%    0.05%  ││  0x00007f9d291f60b3: movsbl 0xf(%r11,%rdi,1),%r10d
  6.26%    8.05%  ││  0x00007f9d291f60b9: mov    %r10b,0x10(%r11,%rdi,1)
  2.22%    3.97%  ││  0x00007f9d291f60be: movsbl 0xe(%r11,%rdi,1),%r10d
  1.26%    2.08%  ││  0x00007f9d291f60c4: mov    %r10b,0xf(%r11,%rdi,1)
  4.48%    5.14%  ││  0x00007f9d291f60c9: movsbl 0xd(%r11,%rdi,1),%r10d
  2.25%    2.10%  ││  0x00007f9d291f60cf: mov    %r10b,0xe(%r11,%rdi,1)
  6.34%    7.52%  ││  0x00007f9d291f60d4: movsbl 0xc(%r11,%rdi,1),%r10d
  0.17%    0.12%  ││  0x00007f9d291f60da: mov    %r10b,0xd(%r11,%rdi,1)
  6.45%    5.62%  ││  0x00007f9d291f60df: movsbl 0xb(%r11,%rdi,1),%r10d
  0.13%    0.20%  ││  0x00007f9d291f60e5: mov    %r10b,0xc(%r11,%rdi,1)
  7.94%    7.30%  ││  0x00007f9d291f60ea: movsbl 0xa(%r11,%rdi,1),%r10d
  0.12%    0.13%  ││  0x00007f9d291f60f0: mov    %r10b,0xb(%r11,%rdi,1)
  8.37%    7.14%  ││  0x00007f9d291f60f5: movsbl 0x9(%r11,%rdi,1),%r10d
  0.08%    0.08%  ││  0x00007f9d291f60fb: mov    %r10b,0xa(%r11,%rdi,1)
  8.64%    6.38%  ││  0x00007f9d291f6100: movsbl 0x8(%r11,%rdi,1),%r10d
  0.05%    0.07%  ││  0x00007f9d291f6106: mov    %r10b,0x9(%r11,%rdi,1)  ;*bastore
                  ││                                                ; - net.greypanther.BenchmarkByteArrayCopy::selfCopy@11 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
 10.11%    9.30%  ││  0x00007f9d291f610b: add    $0xfffffffffffffff8,%r9d  ;*isub
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.07%    0.03%  ││  0x00007f9d291f610f: cmp    $0x7,%r9d
                  │╰  0x00007f9d291f6113: jg     0x00007f9d291f60b0  ;*ifle
                  │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                  │                                                 ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  ↘   0x00007f9d291f6115: test   %r9d,%r9d
                      0x00007f9d291f6118: jg     0x00007f9d291f601c
                      0x00007f9d291f611e: jmpq   0x00007f9d291f6032
                      0x00007f9d291f6123: mov    $0xffffff86,%esi
                      0x00007f9d291f6128: mov    %rcx,(%rsp)
....................................................................................................
 66.03%   66.11%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f9d291f7e85:0x7f9d291f7f10] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                                                                    ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                      0x00007f9d291f7e85: cmp    %r9d,%r8d
                      0x00007f9d291f7e88: jg     0x00007f9d291f7e74  ;*ifle
                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                    ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                      0x00007f9d291f7e8a: cmp    $0x7,%r8d
                  ╭   0x00007f9d291f7e8e: jle    0x00007f9d291f7ef5  ;*aload_0
                  │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                  │                                                 ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.23%    0.18%  │↗  0x00007f9d291f7e90: movslq %r8d,%r9
  0.02%           ││  0x00007f9d291f7e93: movsbl 0xf(%r11,%r9,1),%r10d
  1.27%    1.49%  ││  0x00007f9d291f7e99: mov    %r10b,0x10(%r11,%r9,1)
  0.45%    1.02%  ││  0x00007f9d291f7e9e: movsbl 0xe(%r11,%r9,1),%r10d
  0.30%    0.28%  ││  0x00007f9d291f7ea4: mov    %r10b,0xf(%r11,%r9,1)
  1.08%    0.97%  ││  0x00007f9d291f7ea9: movsbl 0xd(%r11,%r9,1),%r10d
  0.30%    0.48%  ││  0x00007f9d291f7eaf: mov    %r10b,0xe(%r11,%r9,1)
  1.19%    1.35%  ││  0x00007f9d291f7eb4: movsbl 0xc(%r11,%r9,1),%r10d
  0.08%    0.02%  ││  0x00007f9d291f7eba: mov    %r10b,0xd(%r11,%r9,1)
  1.21%    1.34%  ││  0x00007f9d291f7ebf: movsbl 0xb(%r11,%r9,1),%r10d
  0.22%    0.05%  ││  0x00007f9d291f7ec5: mov    %r10b,0xc(%r11,%r9,1)
  1.42%    1.27%  ││  0x00007f9d291f7eca: movsbl 0xa(%r11,%r9,1),%r10d
  0.07%           ││  0x00007f9d291f7ed0: mov    %r10b,0xb(%r11,%r9,1)
  1.70%    1.55%  ││  0x00007f9d291f7ed5: movsbl 0x9(%r11,%r9,1),%r10d
  0.07%    0.05%  ││  0x00007f9d291f7edb: mov    %r10b,0xa(%r11,%r9,1)
  1.47%    1.14%  ││  0x00007f9d291f7ee0: movsbl 0x8(%r11,%r9,1),%r10d
  0.02%    0.02%  ││  0x00007f9d291f7ee6: mov    %r10b,0x9(%r11,%r9,1)  ;*bastore
                  ││                                                ; - net.greypanther.BenchmarkByteArrayCopy::selfCopy@11 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  1.87%    1.72%  ││  0x00007f9d291f7eeb: add    $0xfffffffffffffff8,%r8d  ;*isub
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.03%    0.02%  ││  0x00007f9d291f7eef: cmp    $0x7,%r8d
                  │╰  0x00007f9d291f7ef3: jg     0x00007f9d291f7e90  ;*ifle
                  │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                  │                                                 ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.02%           ↘   0x00007f9d291f7ef5: test   %r8d,%r8d
                      0x00007f9d291f7ef8: jg     0x00007f9d291f7e00
                      0x00007f9d291f7efe: jmpq   0x00007f9d291f7e16
                      0x00007f9d291f7f03: mov    $0x7f9d4033fe10,%r10
                      0x00007f9d291f7f0d: callq  *%r10              ;*invokestatic nanoTime
                                                                    ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@31 (line 107)
                      0x00007f9d291f7f10: mov    %rax,0x30(%r13)    ;*putfield stopTime
                                                                    ; - net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@34 (line 107)
                                                                    ; implicit exception: dispatches to 0x00007f9d291f7fb5
....................................................................................................
 13.01%   12.95%  <total for region 2>

....[Hottest Regions]...............................................................................
 66.03%   66.11%  [0x7f9d291f609d:0x7f9d291f6128] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
 13.01%   12.95%  [0x7f9d291f7e85:0x7f9d291f7f10] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  9.40%    9.39%  [0x7f9d291ead46:0x7f9d291eadb6] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  3.48%    3.52%  [0x7f9d291e7ba4:0x7f9d291e7c17] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  2.75%    2.71%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.18%    0.08%  [0xffffffff810dd298:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.13%    0.08%  [0x7f9d291f600c:0x7f9d291f609a] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  0.13%    0.15%  [0x7f9d40352230:0x7f9d4035223e] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.10%    0.08%  [0xffffffff817efb49:0xffffffff817efb4b] in [unknown] ([unknown])
  0.08%    0.08%  [0xffffffff8121b125:0xffffffff8121b127] in [unknown] ([unknown])
  0.08%    0.05%  [0xffffffff8123ebc0:0xffffffff8123ec00] in [unknown] ([unknown])
  0.07%    0.03%  [0xffffffff811ffe62:0xffffffff811ffe78] in [unknown] ([unknown])
  0.07%    0.03%  [0xffffffff81368580:0xffffffff813685c2] in [unknown] ([unknown])
  0.07%    0.02%  [0x7f9d40a852c7:0x7f9d40a852ea] in _IO_default_xsputn (libc-2.21.so)
  0.05%           [0xffffffff810c3b6e:0xffffffff810c3b87] in [unknown] ([unknown])
  0.05%    0.03%  [0xffffffff810ed82f:0xffffffff810ed84f] in [unknown] ([unknown])
  0.05%    0.03%  [0xffffffff812061c1:0xffffffff812061ea] in [unknown] ([unknown])
  0.05%    0.07%  [0xffffffff8121abc9:0xffffffff8121ac06] in [unknown] ([unknown])
  0.05%    0.07%  [0xffffffff813eebc6:0xffffffff813eebdd] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  4.12%    4.46%  <...other 335 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 88.57%   88.53%  net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  5.35%    5.20%  [unknown] ([unknown])
  3.48%    3.52%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  0.17%    0.28%  vfprintf (libc-2.21.so)
  0.17%    0.07%  print_insn (hsdis-amd64.so)
  0.15%    0.17%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.10%    0.10%  _IO_default_xsputn (libc-2.21.so)
  0.08%    0.02%  _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.08%    0.10%  _IO_fwrite (libc-2.21.so)
  0.08%    0.18%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.08%    0.23%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.07%    0.08%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.05%  __strchr_sse2 (libc-2.21.so)
  0.05%    0.02%  _ZN7Monitor6unlockEv (libjvm.so)
  0.05%    0.03%  _ZN13defaultStream4holdEl (libjvm.so)
  0.05%    0.03%  _IO_fflush (libc-2.21.so)
  0.05%    0.02%  strlen (libc-2.21.so)
  0.05%           <stub: method entry point (kind = native)>
  0.03%    0.02%  __strcpy_sse2_unaligned (libc-2.21.so)
  0.03%    0.05%  _ZN12outputStream12do_vsnprintfEPcmPKcP13__va_list_tagbRm (libjvm.so)
  1.26%    0.58%  <...other 73 warm methods...>
....................................................................................................
 99.98%   99.27%  <totals>

....[Distribution by Area]..........................................................................
 92.22%   92.07%  <generated code>
  5.35%    5.20%  <native code in ([unknown])>
  1.41%    1.59%  <native code in (libjvm.so)>
  0.71%    0.88%  <native code in (libc-2.21.so)>
  0.22%    0.18%  <native code in (hsdis-amd64.so)>
  0.05%    0.08%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libjava.so)>
  0.02%           <native code in (libzip.so)>
....................................................................................................
 99.98%  100.00%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkByteArrayCopy.benchmarkArraySystemArraycopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 10.00% complete, ETA 00:04:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4589289.961 ops/s
# Warmup Iteration   2: 4718696.912 ops/s
# Warmup Iteration   3: 4782038.991 ops/s
Iteration   1: 4500814.050 ops/s
Iteration   2: 4676567.208 ops/s
Iteration   3: 4767938.663 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy":
  4648439.974 ±(99.9%) 2476866.427 ops/s [Average]
  (min, avg, max) = (4500814.050, 4648439.974, 4767938.663), stdev = 135765.407
  CI (99.9%): [2171573.547, 7125306.401] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 135603 total address lines.
Perf output processed (skipped 3.206 seconds):
 Column 1: cycles (5550 events)
 Column 2: instructions (5541 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f45a90522e3:0x7f45a90523fd] in StubRoutines::jbyte_disjoint_arraycopy

                               0x00007f45a90522e3: mov    0x40(%rsp),%rdi
                               0x00007f45a90522e8: mov    0x48(%rsp),%rsi
                               0x00007f45a90522ed: mov    0x50(%rsp),%rbp
                               0x00007f45a90522f2: mov    0x60(%rsp),%rbx
                               0x00007f45a90522f7: mov    0x68(%rsp),%rdx
                               0x00007f45a90522fc: mov    0x70(%rsp),%rcx
                               0x00007f45a9052301: mov    0x78(%rsp),%rax
                               0x00007f45a9052306: add    $0x80,%rsp
                               0x00007f45a905230d: retq   $0x20
                             StubRoutines::jbyte_disjoint_arraycopy [0x00007f45a9052320, 0x00007f45a90523db[ (187 bytes)
  0.14%                        0x00007f45a9052320: push   %rbp
  0.04%                        0x00007f45a9052321: mov    %rsp,%rbp
  0.04%                    ↗↗  0x00007f45a9052324: mov    %rdx,%rcx
                           ││  0x00007f45a9052327: shr    $0x3,%rdx
  0.02%                    ││  0x00007f45a905232b: lea    -0x8(%rdi,%rdx,8),%rdi
  0.02%                    ││  0x00007f45a9052330: lea    -0x8(%rsi,%rdx,8),%rsi
  0.13%                    ││  0x00007f45a9052335: neg    %rdx
                  ╭        ││  0x00007f45a9052338: jmpq   Stub::jbyte_disjoint_arraycopy+136 0x0x7f45a90523a8
                  │↗     ↗ ││  0x00007f45a905233d: mov    0x8(%rdi,%rdx,8),%rax
                  ││     │ ││  0x00007f45a9052342: mov    %rax,0x8(%rsi,%rdx,8)
                  ││     │ ││  0x00007f45a9052347: inc    %rdx
                  │╰     │ ││  0x00007f45a905234a: jne    Stub::jbyte_disjoint_arraycopy+29 0x0x7f45a905233d
  0.13%    0.25%  │      │↗││  0x00007f45a905234c: test   $0x4,%ecx
                  │ ╭    ││││  0x00007f45a9052352: je     Stub::jbyte_disjoint_arraycopy+66 0x0x7f45a9052362
                  │ │    ││││  0x00007f45a9052354: mov    0x8(%rdi),%eax
                  │ │    ││││  0x00007f45a9052357: mov    %eax,0x8(%rsi)
                  │ │    ││││  0x00007f45a905235a: add    $0x4,%rdi
                  │ │    ││││  0x00007f45a905235e: add    $0x4,%rsi
  0.14%    0.49%  │ ↘    ││││  0x00007f45a9052362: test   $0x2,%ecx
                  │  ╭   ││││  0x00007f45a9052368: je     Stub::jbyte_disjoint_arraycopy+90 0x0x7f45a905237a
                  │  │   ││││  0x00007f45a905236a: mov    0x8(%rdi),%ax
                  │  │   ││││  0x00007f45a905236e: mov    %ax,0x8(%rsi)
                  │  │   ││││  0x00007f45a9052372: add    $0x2,%rdi
                  │  │   ││││  0x00007f45a9052376: add    $0x2,%rsi
  0.16%    0.42%  │  ↘   ││││  0x00007f45a905237a: test   $0x1,%ecx
  0.02%           │   ╭  ││││  0x00007f45a9052380: je     Stub::jbyte_disjoint_arraycopy+104 0x0x7f45a9052388
                  │   │  ││││  0x00007f45a9052382: mov    0x8(%rdi),%al
                  │   │  ││││  0x00007f45a9052385: mov    %al,0x8(%rsi)
  0.16%    0.47%  │   ↘  ││││  0x00007f45a9052388: xor    %rax,%rax
                  │      ││││  0x00007f45a905238b: leaveq 
  5.53%    6.12%  │      ││││  0x00007f45a905238c: retq   
                  │      ││││  0x00007f45a905238d: xchg   %ax,%ax
  4.29%    2.87%  │    ↗ ││││  0x00007f45a9052390: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 10.54%   10.21%  │    │ ││││  0x00007f45a9052396: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
 41.28%   53.89%  │    │ ││││  0x00007f45a905239c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
 25.55%   13.86%  │    │ ││││  0x00007f45a90523a2: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
  5.32%    5.59%  ↘    │ ││││  0x00007f45a90523a8: add    $0x8,%rdx
                       ╰ ││││  0x00007f45a90523ac: jle    Stub::jbyte_disjoint_arraycopy+112 0x0x7f45a9052390
  0.05%    0.16%         ││││  0x00007f45a90523ae: sub    $0x4,%rdx
                        ╭││││  0x00007f45a90523b2: jg     Stub::jbyte_disjoint_arraycopy+164 0x0x7f45a90523c4
                        │││││  0x00007f45a90523b4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                        │││││  0x00007f45a90523ba: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
                        │││││  0x00007f45a90523c0: add    $0x4,%rdx
  0.09%    0.22%        ↘││││  0x00007f45a90523c4: (bad)  
                         ││││  0x00007f45a90523c7: rol    $0xf5,%ch
                         ││││  0x00007f45a90523ca: out    %eax,(%dx)
                         ││││  0x00007f45a90523cb: leaveq 
                         ││││  0x00007f45a90523cc: sub    $0x4,%rdx
                         ╰│││  0x00007f45a90523d0: jl     Stub::jbyte_disjoint_arraycopy+29 0x0x7f45a905233d
  0.07%    0.18%          ╰││  0x00007f45a90523d6: jmpq   Stub::jbyte_disjoint_arraycopy+44 0x0x7f45a905234c
                           ││StubRoutines::jbyte_arraycopy [0x00007f45a90523e0, 0x00007f45a90524a3[ (195 bytes)
                           ││  0x00007f45a90523e0: push   %rbp
                           ││  0x00007f45a90523e1: mov    %rsp,%rbp
                           ││  0x00007f45a90523e4: cmp    %rdi,%rsi
                           ││  0x00007f45a90523e7: lea    (%rdi,%rdx,1),%rax
                           ╰│  0x00007f45a90523eb: jbe    Stub::jbyte_disjoint_arraycopy+4 0x0x7f45a9052324
                            │  0x00007f45a90523f1: cmp    %rax,%rsi
                            ╰  0x00007f45a90523f4: jae    Stub::jbyte_disjoint_arraycopy+4 0x0x7f45a9052324
                               0x00007f45a90523fa: mov    %rdx,%rcx
                               0x00007f45a90523fd: shr    $0x3,%rdx
....................................................................................................
 93.71%   94.73%  <total for region 1>

....[Hottest Regions]...............................................................................
 93.71%   94.73%  [0x7f45a90522e3:0x7f45a90523fd] in StubRoutines::jbyte_disjoint_arraycopy
  1.05%    0.97%  [0xffffffff810603fa:0xffffffff810603fd] in [unknown] ([unknown])
  0.68%    0.02%  [0x7f45a91f99c7:0x7f45a91f9a4a] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.18%    0.11%  [0xffffffff810dd2ab:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.11%    0.02%  [0xffffffff811ffef0:0xffffffff811fff2a] in [unknown] ([unknown])
  0.11%    0.18%  [0x7f45c037e230:0x7f45c037e251] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.09%    0.07%  [0xffffffff817efbc0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.09%    0.02%  [0x7f45be037290:0x7f45be0372a0] in oappend (hsdis-amd64.so)
  0.07%    0.07%  [0xffffffff817f1a15:0xffffffff817f1a2d] in [unknown] ([unknown])
  0.07%    0.02%  [0x7f45a91edce5:0x7f45a91edd5a] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.05%    0.02%  [0xffffffff811ffea0:0xffffffff811ffebd] in [unknown] ([unknown])
  0.05%           [0xffffffff8121b125:0xffffffff8121b127] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff813d3033:0xffffffff813d3037] in [unknown] ([unknown])
  0.05%    0.02%  [0x7f45a91fb6d4:0x7f45a91fb70f] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.05%    0.02%  [0x7f45c037f97f:0x7f45c037f9ad] in _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.05%    0.05%  [0x7f45c0532102:0x7f45c053212f] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.02%  [0x7f45c0aaf1e8:0x7f45c0aaf213] in _IO_file_xsputn@@GLIBC_2.2.5 (libc-2.21.so)
  0.05%    0.02%  [0x7f45c1226bf1:0x7f45c1226c0c] in pthread_getspecific (libpthread-2.21.so)
  0.04%    0.04%  [0xffffffff81038360:0xffffffff81038360] in [unknown] ([unknown])
  0.04%           [0xffffffff810bd36d:0xffffffff810bd384] in [unknown] ([unknown])
  3.32%    3.57%  <...other 270 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.71%   94.73%  StubRoutines::jbyte_disjoint_arraycopy
  3.03%    2.91%  [unknown] ([unknown])
  0.85%    0.07%  net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.18%    0.22%  vfprintf (libc-2.21.so)
  0.16%    0.04%  print_insn (hsdis-amd64.so)
  0.13%    0.09%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.11%    0.18%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.11%    0.02%  oappend (hsdis-amd64.so)
  0.07%    0.02%  pthread_getspecific (libpthread-2.21.so)
  0.05%           _ZN7Monitor6unlockEv (libjvm.so)
  0.05%           putop (hsdis-amd64.so)
  0.05%    0.02%  _IO_file_xsputn@@GLIBC_2.2.5 (libc-2.21.so)
  0.05%    0.04%  _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.04%           _ZN12stringStream5writeEPKcm (libjvm.so)
  0.04%           _IO_default_xsputn (libc-2.21.so)
  0.04%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.04%    0.02%  _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.04%    0.04%  _ZN13defaultStream4holdEl (libjvm.so)
  0.04%    0.11%  strlen (libc-2.21.so)
  0.04%    0.09%  _IO_fwrite (libc-2.21.so)
  1.17%    0.67%  <...other 59 warm methods...>
....................................................................................................
 99.98%   99.24%  <totals>

....[Distribution by Area]..........................................................................
 94.72%   94.91%  <generated code>
  3.03%    2.91%  <native code in ([unknown])>
  1.17%    1.16%  <native code in (libjvm.so)>
  0.56%    0.85%  <native code in (libc-2.21.so)>
  0.38%    0.11%  <native code in (hsdis-amd64.so)>
  0.11%    0.07%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libzip.so)>
....................................................................................................
 99.98%  100.00%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkByteArrayCopy.benchmarkArraySystemArraycopy_Overlap
# Parameters: (arraySizeInKb = 10)

# Run progress: 13.33% complete, ETA 00:04:19
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 3987643.062 ops/s
# Warmup Iteration   2: 3896669.119 ops/s
# Warmup Iteration   3: 3375395.405 ops/s
Iteration   1: 3078141.005 ops/s
Iteration   2: 3840548.626 ops/s
Iteration   3: 3890153.610 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy_Overlap":
  3602947.747 ±(99.9%) 8304035.769 ops/s [Average]
  (min, avg, max) = (3078141.005, 3602947.747, 3890153.610), stdev = 455172.221
  CI (99.9%): [≈ 0, 11906983.516] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 127898 total address lines.
Perf output processed (skipped 3.217 seconds):
 Column 1: cycles (5508 events)
 Column 2: instructions (5452 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f27fd0522ed:0x7f27fd05241e] in StubRoutines::jbyte_disjoint_arraycopy; StubRoutines::jbyte_arraycopy

                                0x00007f27fd0522ed: mov    0x50(%rsp),%rbp
                                0x00007f27fd0522f2: mov    0x60(%rsp),%rbx
                                0x00007f27fd0522f7: mov    0x68(%rsp),%rdx
                                0x00007f27fd0522fc: mov    0x70(%rsp),%rcx
                                0x00007f27fd052301: mov    0x78(%rsp),%rax
                                0x00007f27fd052306: add    $0x80,%rsp
                                0x00007f27fd05230d: retq   $0x20
                              StubRoutines::jbyte_disjoint_arraycopy [0x00007f27fd052320, 0x00007f27fd0523db[ (187 bytes)
                                0x00007f27fd052320: push   %rbp
                                0x00007f27fd052321: mov    %rsp,%rbp
  0.02%    0.06%           ↗↗   0x00007f27fd052324: mov    %rdx,%rcx
  0.02%    0.18%           ││   0x00007f27fd052327: shr    $0x3,%rdx
  0.04%    0.04%           ││   0x00007f27fd05232b: lea    -0x8(%rdi,%rdx,8),%rdi
  0.04%    0.04%           ││   0x00007f27fd052330: lea    -0x8(%rsi,%rdx,8),%rsi
  0.02%                    ││   0x00007f27fd052335: neg    %rdx
  0.05%    0.28%  ╭        ││   0x00007f27fd052338: jmpq   Stub::jbyte_disjoint_arraycopy+136 0x0x7f27fd0523a8
  0.25%    0.95%  │↗     ↗ ││   0x00007f27fd05233d: mov    0x8(%rdi,%rdx,8),%rax
  0.02%    0.06%  ││     │ ││   0x00007f27fd052342: mov    %rax,0x8(%rsi,%rdx,8)
  0.33%    0.26%  ││     │ ││   0x00007f27fd052347: inc    %rdx
                  │╰     │ ││   0x00007f27fd05234a: jne    Stub::jbyte_disjoint_arraycopy+29 0x0x7f27fd05233d
                  │      │↗││   0x00007f27fd05234c: test   $0x4,%ecx
                  │ ╭    ││││   0x00007f27fd052352: je     Stub::jbyte_disjoint_arraycopy+66 0x0x7f27fd052362
  0.07%    0.11%  │ │    ││││   0x00007f27fd052354: mov    0x8(%rdi),%eax
                  │ │    ││││   0x00007f27fd052357: mov    %eax,0x8(%rsi)
  0.04%    0.06%  │ │    ││││   0x00007f27fd05235a: add    $0x4,%rdi
                  │ │    ││││   0x00007f27fd05235e: add    $0x4,%rsi
  0.02%    0.20%  │ ↘    ││││   0x00007f27fd052362: test   $0x2,%ecx
                  │  ╭   ││││   0x00007f27fd052368: je     Stub::jbyte_disjoint_arraycopy+90 0x0x7f27fd05237a
                  │  │   ││││   0x00007f27fd05236a: mov    0x8(%rdi),%ax
  0.20%    0.09%  │  │   ││││   0x00007f27fd05236e: mov    %ax,0x8(%rsi)
                  │  │   ││││   0x00007f27fd052372: add    $0x2,%rdi
  0.11%    0.18%  │  │   ││││   0x00007f27fd052376: add    $0x2,%rsi
                  │  ↘   ││││   0x00007f27fd05237a: test   $0x1,%ecx
  0.07%    0.06%  │   ╭  ││││   0x00007f27fd052380: je     Stub::jbyte_disjoint_arraycopy+104 0x0x7f27fd052388
  0.04%    0.02%  │   │  ││││   0x00007f27fd052382: mov    0x8(%rdi),%al
  0.07%    0.17%  │   │  ││││   0x00007f27fd052385: mov    %al,0x8(%rsi)
  0.02%    0.04%  │   ↘  ││││   0x00007f27fd052388: xor    %rax,%rax
  0.04%    0.07%  │      ││││   0x00007f27fd05238b: leaveq 
  0.16%    0.40%  │      ││││   0x00007f27fd05238c: retq   
                  │      ││││   0x00007f27fd05238d: xchg   %ax,%ax
  3.45%    1.98%  │    ↗ ││││   0x00007f27fd052390: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 25.89%   19.55%  │    │ ││││   0x00007f27fd052396: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
  9.10%    8.13%  │    │ ││││   0x00007f27fd05239c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  8.88%    7.65%  │    │ ││││   0x00007f27fd0523a2: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
 42.14%   49.78%  ↘    │ ││││   0x00007f27fd0523a8: add    $0x8,%rdx
  0.02%                ╰ ││││   0x00007f27fd0523ac: jle    Stub::jbyte_disjoint_arraycopy+112 0x0x7f27fd052390
  0.04%                  ││││   0x00007f27fd0523ae: sub    $0x4,%rdx
                        ╭││││   0x00007f27fd0523b2: jg     Stub::jbyte_disjoint_arraycopy+164 0x0x7f27fd0523c4
  0.16%    0.13%        │││││   0x00007f27fd0523b4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
  0.47%    0.42%        │││││   0x00007f27fd0523ba: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
  0.15%    0.28%        │││││   0x00007f27fd0523c0: add    $0x4,%rdx
                        ↘││││   0x00007f27fd0523c4: (bad)  
                         ││││   0x00007f27fd0523c7: rol    $0xf5,%ch
                         ││││   0x00007f27fd0523ca: out    %eax,(%dx)
                         ││││   0x00007f27fd0523cb: leaveq 
                         ││││   0x00007f27fd0523cc: sub    $0x4,%rdx
                         ╰│││   0x00007f27fd0523d0: jl     Stub::jbyte_disjoint_arraycopy+29 0x0x7f27fd05233d
                          ╰││   0x00007f27fd0523d6: jmpq   Stub::jbyte_disjoint_arraycopy+44 0x0x7f27fd05234c
                           ││ StubRoutines::jbyte_arraycopy [0x00007f27fd0523e0, 0x00007f27fd0524a3[ (195 bytes)
  0.15%    0.29%           ││   0x00007f27fd0523e0: push   %rbp
  0.09%    0.09%           ││   0x00007f27fd0523e1: mov    %rsp,%rbp
           0.06%           ││   0x00007f27fd0523e4: cmp    %rdi,%rsi
  0.07%    0.13%           ││   0x00007f27fd0523e7: lea    (%rdi,%rdx,1),%rax
  0.02%    0.02%           ╰│   0x00007f27fd0523eb: jbe    Stub::jbyte_disjoint_arraycopy+4 0x0x7f27fd052324
  0.04%    0.06%            │   0x00007f27fd0523f1: cmp    %rax,%rsi
                            ╰   0x00007f27fd0523f4: jae    Stub::jbyte_disjoint_arraycopy+4 0x0x7f27fd052324
                                0x00007f27fd0523fa: mov    %rdx,%rcx
                                0x00007f27fd0523fd: shr    $0x3,%rdx
                                0x00007f27fd052401: test   $0x1,%ecx
                             ╭  0x00007f27fd052407: je     Stub::jbyte_arraycopy+56 0x0x7f27fd052418
                             │  0x00007f27fd05240d: mov    -0x1(%rdi,%rcx,1),%al
                             │  0x00007f27fd052411: mov    %al,-0x1(%rsi,%rcx,1)
                             │  0x00007f27fd052415: dec    %rcx
                             ↘  0x00007f27fd052418: test   $0x2,%ecx
                                0x00007f27fd05241e: je     Stub::jbyte_arraycopy+78 0x0x7f27fd05242e
....................................................................................................
 92.27%   91.80%  <total for region 1>

....[Hottest Regions]...............................................................................
 92.27%   91.80%  [0x7f27fd0522ed:0x7f27fd05241e] in StubRoutines::jbyte_disjoint_arraycopy; StubRoutines::jbyte_arraycopy
  1.02%    1.69%  [0x7f27fd1e80a8:0x7f27fd1e8134] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.78%    0.75%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.38%    0.79%  [0x7f27fd1e9e46:0x7f27fd1e9eeb] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.15%    0.02%  [0xffffffff817f19e4:0xffffffff817f1a26] in [unknown] ([unknown])
  0.13%    0.11%  [0xffffffff810dd29f:0xffffffff810dd2cc] in [unknown] ([unknown])
  0.13%    0.17%  [0x7f28129a3230:0x7f28129a3242] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.11%    0.07%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.09%    0.04%  [0xffffffff817f1c10:0xffffffff817f1c40] in [unknown] ([unknown])
  0.09%    0.02%  [0x7f28129a0574:0x7f28129a0598] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.09%    0.09%  [0x7f2812b5708d:0x7f2812b570dd] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.09%    0.02%  [0x7f28130a3c20:0x7f28130a3c3e] in vfprintf (libc-2.21.so)
  0.07%    0.02%  [0xffffffff811ffe78:0xffffffff811ffe7f] in [unknown] ([unknown])
  0.07%    0.07%  [0xffffffff817efb3a:0xffffffff817efb49] in [unknown] ([unknown])
  0.07%    0.02%  [0x7f28129a47a6:0x7f28129a47cb] in _ZN13defaultStream4holdEl (libjvm.so)
  0.05%    0.06%  [0xffffffff811754a6:0xffffffff811754a6] in [unknown] ([unknown])
  0.05%           [0xffffffff811fe69b:0xffffffff811fe6b3] in [unknown] ([unknown])
  0.05%    0.06%  [0xffffffff811ffef6:0xffffffff811fff0b] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff81288819:0xffffffff8128883e] in [unknown] ([unknown])
  0.05%    0.13%  [0xffffffff81368592:0xffffffff813685de] in [unknown] ([unknown])
  4.14%    4.05%  <...other 306 warm regions...>
....................................................................................................
 99.95%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 92.27%   91.80%  StubRoutines::jbyte_disjoint_arraycopy; StubRoutines::jbyte_arraycopy
  3.38%    2.93%  [unknown] ([unknown])
  1.47%    2.62%  net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.24%    0.15%  vfprintf (libc-2.21.so)
  0.16%    0.17%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.15%    0.13%  print_insn (hsdis-amd64.so)
  0.13%    0.11%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.11%    0.13%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.09%    0.06%  _ZN13defaultStream4holdEl (libjvm.so)
  0.09%    0.13%  _IO_fwrite (libc-2.21.so)
  0.09%    0.02%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.02%  _ZN13defaultStream5flushEv (libjvm.so)
  0.05%    0.02%  _IO_fflush (libc-2.21.so)
  0.05%    0.02%  __pthread_disable_asynccancel (libpthread-2.21.so)
  0.05%    0.02%  _IO_file_xsputn@@GLIBC_2.2.5 (libc-2.21.so)
  0.04%    0.06%  _ZN12stringStream5writeEPKcm (libjvm.so)
  0.04%           fwrite@plt (libjvm.so)
  0.04%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.04%    0.04%  _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.04%    0.02%  _ZN7Monitor6unlockEv (libjvm.so)
  1.38%    0.90%  <...other 71 warm methods...>
....................................................................................................
 99.95%   99.32%  <totals>

....[Distribution by Area]..........................................................................
 93.79%   94.44%  <generated code>
  3.38%    2.93%  <native code in ([unknown])>
  1.69%    1.28%  <native code in (libjvm.so)>
  0.74%    1.01%  <native code in (libc-2.21.so)>
  0.24%    0.22%  <native code in (hsdis-amd64.so)>
  0.09%    0.09%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libzip.so)>
....................................................................................................
 99.95%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkByteArrayCopy.benchmarkArrayUnsafeCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 16.67% complete, ETA 00:04:09
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4514881.146 ops/s
# Warmup Iteration   2: 4274114.682 ops/s
# Warmup Iteration   3: 4612061.199 ops/s
Iteration   1: 4472958.307 ops/s
Iteration   2: 4524931.625 ops/s
Iteration   3: 4700822.444 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayUnsafeCopy":
  4566237.459 ±(99.9%) 2178589.645 ops/s [Average]
  (min, avg, max) = (4472958.307, 4566237.459, 4700822.444), stdev = 119415.850
  CI (99.9%): [2387647.813, 6744827.104] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 130586 total address lines.
Perf output processed (skipped 3.172 seconds):
 Column 1: cycles (5996 events)
 Column 2: instructions (5966 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f9d4105278e:0x7f9d41052833] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy

                          0x00007f9d4105278e: neg    %rdx
                  ╭       0x00007f9d41052791: jmpq   Stub::jlong_disjoint_arraycopy+72 0x0x7f9d410527c8
                  │↗  ↗   0x00007f9d41052796: mov    0x8(%rdi,%rdx,8),%rax
                  ││  │   0x00007f9d4105279b: mov    %rax,0x8(%rcx,%rdx,8)
                  ││  │   0x00007f9d410527a0: inc    %rdx
                  │╰  │   0x00007f9d410527a3: jne    Stub::jlong_disjoint_arraycopy+22 0x0x7f9d41052796
                  │   │   0x00007f9d410527a5: xor    %rax,%rax
                  │   │   0x00007f9d410527a8: leaveq 
                  │   │   0x00007f9d410527a9: retq   
                  │   │   0x00007f9d410527aa: nopw   0x0(%rax,%rax,1)
  1.88%    1.02%  │ ↗ │   0x00007f9d410527b0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 19.86%    8.72%  │ │ │   0x00007f9d410527b6: vmovdqu %ymm0,-0x38(%rcx,%rdx,8)
 67.93%   81.39%  │ │ │   0x00007f9d410527bc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  1.07%    0.54%  │ │ │   0x00007f9d410527c2: vmovdqu %ymm1,-0x18(%rcx,%rdx,8)
  1.78%    1.36%  ↘ │ │   0x00007f9d410527c8: add    $0x8,%rdx
  0.02%             ╰ │   0x00007f9d410527cc: jle    Stub::jlong_disjoint_arraycopy+48 0x0x7f9d410527b0
  0.10%               │   0x00007f9d410527ce: sub    $0x4,%rdx
                     ╭│   0x00007f9d410527d2: jg     Stub::jlong_disjoint_arraycopy+100 0x0x7f9d410527e4
                     ││   0x00007f9d410527d4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                     ││   0x00007f9d410527da: vmovdqu %ymm0,-0x18(%rcx,%rdx,8)
                     ││   0x00007f9d410527e0: add    $0x4,%rdx
  0.15%    0.05%     ↘│   0x00007f9d410527e4: (bad)  
                      │   0x00007f9d410527e7: rol    $0xf5,%ch
                      │   0x00007f9d410527ea: out    %eax,(%dx)
                      │   0x00007f9d410527eb: leaveq 
                      │   0x00007f9d410527ec: sub    $0x4,%rdx
                      ╰   0x00007f9d410527f0: jl     Stub::jlong_disjoint_arraycopy+22 0x0x7f9d41052796
  0.07%    0.08%          0x00007f9d410527f2: xor    %rax,%rax
  0.08%    0.30%          0x00007f9d410527f5: leaveq 
  0.08%    0.10%          0x00007f9d410527f6: retq   
                        StubRoutines::jlong_arraycopy [0x00007f9d41052800, 0x00007f9d41052883[ (131 bytes)
                          0x00007f9d41052800: push   %rbp
                          0x00007f9d41052801: mov    %rsp,%rbp
  0.12%    0.32%          0x00007f9d41052804: cmp    %rdi,%rsi
                          0x00007f9d41052807: lea    (%rdi,%rdx,8),%rax
                          0x00007f9d4105280b: jbe    Stub::jlong_disjoint_arraycopy+4 0x0x7f9d41052784
  0.02%                   0x00007f9d41052811: cmp    %rax,%rsi
                          0x00007f9d41052814: jae    Stub::jlong_disjoint_arraycopy+4 0x0x7f9d41052784
                          0x00007f9d4105281a: jmpq   Stub::jlong_arraycopy+86 0x0x7f9d41052856
                       ↗  0x00007f9d4105281f: mov    -0x8(%rdi,%rdx,8),%rax
                       │  0x00007f9d41052824: mov    %rax,-0x8(%rsi,%rdx,8)
                       │  0x00007f9d41052829: dec    %rdx
                       ╰  0x00007f9d4105282c: jne    Stub::jlong_arraycopy+31 0x0x7f9d4105281f
                          0x00007f9d4105282e: xor    %rax,%rax
                          0x00007f9d41052831: leaveq 
                          0x00007f9d41052832: retq   
                          0x00007f9d41052833: nopw   0x0(%rax,%rax,1)
....................................................................................................
 93.16%   93.88%  <total for region 1>

....[Hottest Regions]...............................................................................
 93.16%   93.88%  [0x7f9d4105278e:0x7f9d41052833] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  0.63%    0.60%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.55%    0.49%  [0x7f9d411efb25:0x7f9d411efb9a] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.55%    0.62%  [0x7f9d56acacd5:0x7f9d56acad02] in acl_CopyRight (libjvm.so)
  0.33%    0.13%  [0x7f9d41052d71:0x7f9d41052dd2] in StubRoutines::unsafe_arraycopy
  0.17%    0.07%  [0xffffffff810dd298:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.17%    0.27%  [0x7f9d411ef51b:0x7f9d411ef5a7] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.13%    0.07%  [0x7f9d41052766:0x7f9d410527a9] in StubRoutines::jlong_disjoint_arraycopy
  0.13%    0.10%  [0x7f9d411e3f9b:0x7f9d411e4017] in net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.12%    0.12%  [0x7f9d56bfc230:0x7f9d56bfc24d] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.08%           [0xffffffff811ffe78:0xffffffff811ffe78] in [unknown] ([unknown])
  0.08%    0.08%  [0xffffffff811ffef6:0xffffffff811fff35] in [unknown] ([unknown])
  0.08%    0.05%  [0xffffffff817f1a0b:0xffffffff817f1a26] in [unknown] ([unknown])
  0.08%           [0xffffffff817f1c10:0xffffffff817f1c27] in [unknown] ([unknown])
  0.08%    0.05%  [0x7f9d56db00c0:0x7f9d56db00da] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%           [0x7f9d548b5290:0x7f9d548b52a0] in oappend (hsdis-amd64.so)
  0.07%    0.18%  [0x7f9d56c71b14:0x7f9d56c71b6b] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.05%    0.03%  [0xffffffff811fd9b7:0xffffffff811fd9d7] in [unknown] ([unknown])
  0.05%           [0xffffffff811fe6dc:0xffffffff811fe704] in [unknown] ([unknown])
  0.05%           [0xffffffff81283638:0xffffffff81283655] in [unknown] ([unknown])
  3.30%    3.23%  <...other 271 warm regions...>
....................................................................................................
 99.95%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.16%   93.88%  StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  2.87%    2.40%  [unknown] ([unknown])
  0.87%    0.85%  net.greypanther.generated.BenchmarkByteArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.55%    0.62%  acl_CopyRight (libjvm.so)
  0.33%    0.13%  StubRoutines::unsafe_arraycopy
  0.18%    0.05%  print_insn (hsdis-amd64.so)
  0.17%    0.17%  vfprintf (libc-2.21.so)
  0.13%    0.07%  StubRoutines::jlong_disjoint_arraycopy
  0.13%    0.05%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.12%    0.12%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.08%    0.20%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.07%    0.02%  oappend (hsdis-amd64.so)
  0.05%    0.02%  __strchr_sse2 (libc-2.21.so)
  0.05%           _IO_fflush (libc-2.21.so)
  0.05%    0.10%  _IO_fwrite (libc-2.21.so)
  0.05%           __strchrnul (libc-2.21.so)
  0.05%    0.03%  __GI___mempcpy (libc-2.21.so)
  0.03%    0.03%  __strncpy_sse2_unaligned (libc-2.21.so)
  0.03%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.03%    0.05%  pthread_getspecific (libpthread-2.21.so)
  0.93%    0.47%  <...other 52 warm methods...>
....................................................................................................
 99.95%   99.26%  <totals>

....[Distribution by Area]..........................................................................
 94.56%   94.94%  <generated code>
  2.87%    2.40%  <native code in ([unknown])>
  1.58%    1.68%  <native code in (libjvm.so)>
  0.58%    0.75%  <native code in (libc-2.21.so)>
  0.27%    0.10%  <native code in (hsdis-amd64.so)>
  0.08%    0.12%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.95%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkIntArrayCopy.benchmarkArrayManualCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 20.00% complete, ETA 00:03:58
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5756624.230 ops/s
# Warmup Iteration   2: 5564634.960 ops/s
# Warmup Iteration   3: 6404631.262 ops/s
Iteration   1: 6510427.565 ops/s
Iteration   2: 6347402.610 ops/s
Iteration   3: 6702173.339 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy":
  6520001.172 ±(99.9%) 3239702.370 ops/s [Average]
  (min, avg, max) = (6347402.610, 6520001.172, 6702173.339), stdev = 177579.019
  CI (99.9%): [3280298.802, 9759703.541] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 130614 total address lines.
Perf output processed (skipped 3.147 seconds):
 Column 1: cycles (5694 events)
 Column 2: instructions (5673 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7fd6391ed02e:0x7fd6391ed13b] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

                                                                             ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@40 (line 108)
                               0x00007fd6391ed02e: vzeroupper 
                               0x00007fd6391ed031: add    $0x30,%rsp
                               0x00007fd6391ed035: pop    %rbp
                               0x00007fd6391ed036: test   %eax,0x16492fc4(%rip)        # 0x00007fd64f680000
                                                                             ;   {poll_return}
                               0x00007fd6391ed03c: retq   
                               0x00007fd6391ed03d: xchg   %ax,%ax            ;*aload_0
                                                                             ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                                                                             ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.11%    0.05%  ↗        ↗   0x00007fd6391ed040: mov    0x10(%rsi,%r11,4),%r8d
  0.68%    0.85%  │        │   0x00007fd6391ed045: mov    %r8d,0x10(%r9,%r11,4)  ;*iastore
                  │        │                                                 ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.76%    1.13%  │        │   0x00007fd6391ed04a: inc    %r11d              ;*iinc
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │        │   0x00007fd6391ed04d: cmp    %r10d,%r11d
                  ╰        │   0x00007fd6391ed050: jl     0x00007fd6391ed040  ;*invokevirtual benchmarkArrayManualCopy
                           │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   ↗       │↗  0x00007fd6391ed052: movzbl 0x94(%rdx),%r10d   ;*getfield isDone
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@24 (line 106)
                   │       ││  0x00007fd6391ed05a: add    $0x1,%rbp          ; OopMap{rbx=Oop rdi=Oop rdx=Oop off=382}
                   │       ││                                                ;*ifeq
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@27 (line 106)
  0.19%    0.26%   │       ││  0x00007fd6391ed05e: test   %eax,0x16492f9c(%rip)        # 0x00007fd64f680000
                   │       ││                                                ;   {poll}
  0.11%    0.05%   │       ││  0x00007fd6391ed064: test   %r10d,%r10d
                   │       ││  0x00007fd6391ed067: jne    0x00007fd6391ed012  ;*aload_3
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@13 (line 104)
                   │       ││  0x00007fd6391ed069: mov    0x20(%rdi),%r10d   ;*getfield itemCount
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@4 (line 69)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   │       ││  0x00007fd6391ed06d: test   %r10d,%r10d
                   ╰       ││  0x00007fd6391ed070: jle    0x00007fd6391ed052  ;*if_icmpge
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                           ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.07%    0.16%           ││  0x00007fd6391ed072: mov    0x28(%rdi),%r8d    ;*getfield intSource
                           ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@6 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                           ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                           ││  0x00007fd6391ed076: mov    0xc(%r12,%r8,8),%ecx  ;*iaload
                           ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@10 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                           ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                           ││                                                ; implicit exception: dispatches to 0x00007fd6391ed125
  0.60%    0.65%           ││  0x00007fd6391ed07b: test   %ecx,%ecx
                    ╭      ││  0x00007fd6391ed07d: jbe    0x00007fd6391ed125
  0.11%    0.14%    │      ││  0x00007fd6391ed083: mov    %r10d,%r11d
                    │      ││  0x00007fd6391ed086: dec    %r11d
  0.02%             │      ││  0x00007fd6391ed089: cmp    %ecx,%r11d
                    │╭     ││  0x00007fd6391ed08c: jae    0x00007fd6391ed125  ;*aload_0
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.14%    0.07%    ││     ││  0x00007fd6391ed092: mov    0x2c(%rdi),%r9d    ;*getfield intTarget
                    ││     ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@1 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││     ││  0x00007fd6391ed096: mov    0xc(%r12,%r9,8),%ecx  ;*iastore
                    ││     ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││     ││                                                ; implicit exception: dispatches to 0x00007fd6391ed125
                    ││     ││  0x00007fd6391ed09b: test   %ecx,%ecx
                    ││╭    ││  0x00007fd6391ed09d: jbe    0x00007fd6391ed125
  0.12%    0.07%    │││    ││  0x00007fd6391ed0a3: cmp    %ecx,%r11d
                    │││╭   ││  0x00007fd6391ed0a6: jae    0x00007fd6391ed125
  0.12%    0.02%    ││││   ││  0x00007fd6391ed0ac: lea    (%r12,%r8,8),%rsi
                    ││││   ││  0x00007fd6391ed0b0: shl    $0x3,%r9
                    ││││   ││  0x00007fd6391ed0b4: mov    %r9d,%r11d
                    ││││   ││  0x00007fd6391ed0b7: shr    $0x2,%r11d
  0.14%    0.07%    ││││   ││  0x00007fd6391ed0bb: and    $0x7,%r11d
                    ││││   ││  0x00007fd6391ed0bf: mov    $0x3,%r8d
                    ││││   ││  0x00007fd6391ed0c5: sub    %r11d,%r8d
  0.05%             ││││   ││  0x00007fd6391ed0c8: and    $0x7,%r8d
  0.07%    0.12%    ││││   ││  0x00007fd6391ed0cc: inc    %r8d
                    ││││   ││  0x00007fd6391ed0cf: cmp    %r10d,%r8d
  0.02%             ││││   ││  0x00007fd6391ed0d2: cmovg  %r10d,%r8d
  0.09%    0.07%    ││││   ││  0x00007fd6391ed0d6: xor    %r11d,%r11d        ;*aload_0
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││││↗  ││  0x00007fd6391ed0d9: mov    0x10(%rsi,%r11,4),%ecx
  0.19%    0.18%    │││││  ││  0x00007fd6391ed0de: mov    %ecx,0x10(%r9,%r11,4)  ;*iastore
                    │││││  ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.28%    0.25%    │││││  ││  0x00007fd6391ed0e3: inc    %r11d              ;*iinc
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.35%    0.25%    │││││  ││  0x00007fd6391ed0e6: cmp    %r8d,%r11d
                    ││││╰  ││  0x00007fd6391ed0e9: jl     0x00007fd6391ed0d9  ;*if_icmpge
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││││   ││  0x00007fd6391ed0eb: mov    %r10d,%r8d
                    ││││   ││  0x00007fd6391ed0ee: add    $0xfffffffffffffff9,%r8d
  0.16%    0.07%    ││││   ││  0x00007fd6391ed0f2: cmp    %r8d,%r10d
  0.07%    0.07%    ││││   ││  0x00007fd6391ed0f5: cmovl  %r13d,%r8d
                    ││││   ││  0x00007fd6391ed0f9: cmp    %r8d,%r11d
                    ││││ ╭ ││  0x00007fd6391ed0fc: jge    0x00007fd6391ed117
  0.14%    0.05%    ││││ │ ││  0x00007fd6391ed0fe: xchg   %ax,%ax            ;*aload_0
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.11%    0.12%    ││││ │↗││  0x00007fd6391ed100: vmovdqu 0x10(%rsi,%r11,4),%ymm0
 12.70%    7.02%    ││││ ││││  0x00007fd6391ed107: vmovdqu %ymm0,0x10(%r9,%r11,4)  ;*iastore
                    ││││ ││││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 52.46%   58.63%    ││││ ││││  0x00007fd6391ed10e: add    $0x8,%r11d         ;*iinc
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.09%    0.04%    ││││ ││││  0x00007fd6391ed112: cmp    %r8d,%r11d
                    ││││ │╰││  0x00007fd6391ed115: jl     0x00007fd6391ed100  ;*if_icmpge
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%    0.02%    ││││ ↘ ││  0x00007fd6391ed117: cmp    %r10d,%r11d
                    ││││   ╰│  0x00007fd6391ed11a: jl     0x00007fd6391ed040
                    ││││    ╰  0x00007fd6391ed120: jmpq   0x00007fd6391ed052
                    ↘↘↘↘       0x00007fd6391ed125: mov    $0xffffff86,%esi
                               0x00007fd6391ed12a: mov    %rdx,(%rsp)
                               0x00007fd6391ed12e: mov    %rbx,0x8(%rsp)
                               0x00007fd6391ed133: mov    %rdi,0x18(%rsp)
                               0x00007fd6391ed138: vzeroupper 
                               0x00007fd6391ed13b: callq  0x00007fd6390051a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop off=608}
....................................................................................................
 69.97%   70.40%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7fd6391eeeb1:0x7fd6391eef38] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

  0.09%    0.05%       0x00007fd6391eeeb1: cmp    %r8d,%r11d
                       0x00007fd6391eeeb4: jae    0x00007fd6391eef65
                       0x00007fd6391eeeba: lea    (%r12,%r9,8),%rdx
                       0x00007fd6391eeebe: lea    (%r12,%rdi,8),%rsi
                       0x00007fd6391eeec2: mov    %edx,%edi
                       0x00007fd6391eeec4: shr    $0x2,%edi
                       0x00007fd6391eeec7: and    $0x7,%edi
                       0x00007fd6391eeeca: mov    $0x3,%r11d
                       0x00007fd6391eeed0: sub    %edi,%r11d
                       0x00007fd6391eeed3: and    $0x7,%r11d
  0.02%    0.02%       0x00007fd6391eeed7: inc    %r11d
                       0x00007fd6391eeeda: cmp    %r10d,%r11d
                       0x00007fd6391eeedd: cmovg  %r10d,%r11d
  0.02%    0.05%       0x00007fd6391eeee1: xor    %r9d,%r9d          ;*aload_0
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                                                                     ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  ↗    0x00007fd6391eeee4: mov    0x10(%rsi,%r9,4),%r8d
  0.04%           │    0x00007fd6391eeee9: mov    %r8d,0x10(%rdx,%r9,4)  ;*iastore
                  │                                                  ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │                                                  ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.05%    0.07%  │    0x00007fd6391eeeee: inc    %r9d               ;*iinc
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  │                                                  ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.02%    0.02%  │    0x00007fd6391eeef1: cmp    %r11d,%r9d
                  ╰    0x00007fd6391eeef4: jl     0x00007fd6391eeee4  ;*if_icmpge
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                                                                     ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                       0x00007fd6391eeef6: mov    %r10d,%edi
                       0x00007fd6391eeef9: add    $0xfffffffffffffff9,%edi
                       0x00007fd6391eeefc: cmp    %edi,%r10d
                       0x00007fd6391eeeff: cmovl  %ebp,%edi
                       0x00007fd6391eef02: cmp    %edi,%r9d
                   ╭   0x00007fd6391eef05: jge    0x00007fd6391eef27
  0.04%    0.05%   │   0x00007fd6391eef07: nopw   0x0(%rax,%rax,1)   ;*aload_0
                   │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                   │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%    0.04%   │↗  0x00007fd6391eef10: vmovdqu 0x10(%rsi,%r9,4),%ymm0
  3.88%    2.47%   ││  0x00007fd6391eef17: vmovdqu %ymm0,0x10(%rdx,%r9,4)  ;*iastore
                   ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 12.26%   13.52%   ││  0x00007fd6391eef1e: add    $0x8,%r9d          ;*iinc
                   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.02%            ││  0x00007fd6391eef22: cmp    %edi,%r9d
                   │╰  0x00007fd6391eef25: jl     0x00007fd6391eef10  ;*if_icmpge
                   │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                   │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   ↘   0x00007fd6391eef27: cmp    %r10d,%r9d
                       0x00007fd6391eef2a: jl     0x00007fd6391eee48
                       0x00007fd6391eef30: jmpq   0x00007fd6391eee5a
                       0x00007fd6391eef35: vzeroupper 
                       0x00007fd6391eef38: mov    $0x7fd64e394e10,%r10
....................................................................................................
 16.37%   16.23%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.97%   70.40%  [0x7fd6391ed02e:0x7fd6391ed13b] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
 16.37%   16.23%  [0x7fd6391eeeb1:0x7fd6391eef38] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  6.02%    6.05%  [0x7fd6391e5bab:0x7fd6391e5ca7] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  2.41%    2.40%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.67%    0.88%  [0x7fd6391eee28:0x7fd6391eeed7] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  0.47%    0.60%  [0x7fd6391e8dcc:0x7fd6391e8e0a] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.25%    0.11%  [0x7fd64e3a7230:0x7fd64e3a724d] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.12%    0.11%  [0xffffffff810dd299:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.12%    0.02%  [0xffffffff817f19e4:0xffffffff817f1a26] in [unknown] ([unknown])
  0.09%    0.09%  [0xffffffff811ffed8:0xffffffff811fff0b] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff813d9a78:0xffffffff813d9a9c] in [unknown] ([unknown])
  0.07%    0.14%  [0x7fd64e3a457b:0x7fd64e3a45bb] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.05%  [0xffffffff81124c11:0xffffffff81124c11] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff8121abe2:0xffffffff8121ac06] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff8128865d:0xffffffff81288673] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff813d3037:0xffffffff813d303c] in [unknown] ([unknown])
  0.05%    0.02%  [0x7fd638d44290:0x7fd638d44292] in oappend (hsdis-amd64.so)
  0.05%    0.02%  [0x7fd63902108f:0x7fd6390210f4] in <stub: invokevirtual  182 invokevirtual>
  0.05%    0.04%  [0x7fd64e41cb27:0x7fd64e41cb59] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.04%           [0xffffffff81182166:0xffffffff81182177] in [unknown] ([unknown])
  2.97%    2.75%  <...other 250 warm regions...>
....................................................................................................
100.00%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.03%   93.58%  net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  4.37%    3.86%  [unknown] ([unknown])
  0.47%    0.62%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.25%    0.11%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.12%    0.18%  vfprintf (libc-2.21.so)
  0.09%    0.02%  _ZN13defaultStream4holdEl (libjvm.so)
  0.09%    0.07%  print_insn (hsdis-amd64.so)
  0.07%    0.07%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.07%    0.14%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.07%    0.02%  <stub: invokevirtual  182 invokevirtual>
  0.05%    0.02%  oappend (hsdis-amd64.so)
  0.05%    0.09%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.04%  _ZN12outputStream5printEPKcz (libjvm.so)
  0.04%    0.02%  _IO_default_xsputn (libc-2.21.so)
  0.04%           _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.04%           _ZN7Monitor6unlockEv (libjvm.so)
  0.04%           pthread_getspecific (libpthread-2.21.so)
  0.04%    0.05%  strlen (libc-2.21.so)
  0.04%    0.05%  _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.04%           <stub: method entry point (kind = zerolocals)>
  0.97%    0.19%  <...other 55 warm methods...>
....................................................................................................
100.00%   99.12%  <totals>

....[Distribution by Area]..........................................................................
 93.64%   94.24%  <generated code>
  4.37%    3.86%  <native code in ([unknown])>
  1.39%    1.15%  <native code in (libjvm.so)>
  0.32%    0.62%  <native code in (libc-2.21.so)>
  0.18%    0.09%  <native code in (hsdis-amd64.so)>
  0.07%    0.04%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libzip.so)>
  0.02%           <native code in (perf-14923.map)>
....................................................................................................
100.00%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkIntArrayCopy.benchmarkArrayManualCopy_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 23.33% complete, ETA 00:03:47
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5983301.064 ops/s
# Warmup Iteration   2: 6557762.440 ops/s
# Warmup Iteration   3: 6664638.022 ops/s
Iteration   1: 6208316.346 ops/s
Iteration   2: 6409261.964 ops/s
Iteration   3: 6584182.260 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Dec":
  6400586.857 ±(99.9%) 3431335.275 ops/s [Average]
  (min, avg, max) = (6208316.346, 6400586.857, 6584182.260), stdev = 188083.065
  CI (99.9%): [2969251.581, 9831922.132] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 126514 total address lines.
Perf output processed (skipped 3.182 seconds):
 Column 1: cycles (5934 events)
 Column 2: instructions (5936 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7fb5cd1e3334:0x7fb5cd1e342a] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                                                                             ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@40 (line 108)
                               0x00007fb5cd1e3334: vzeroupper 
                               0x00007fb5cd1e3337: add    $0x40,%rsp
                               0x00007fb5cd1e333b: pop    %rbp
                               0x00007fb5cd1e333c: test   %eax,0x172accbe(%rip)        # 0x00007fb5e4490000
                                                                             ;   {poll_return}
                               0x00007fb5cd1e3342: retq   
                               0x00007fb5cd1e3343: nop                       ;*aload_0
                                                                             ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                             ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.07%    0.12%  ↗        ↗   0x00007fb5cd1e3344: mov    0x10(%rax,%rdi,4),%r10d
  0.99%    1.18%  │        │   0x00007fb5cd1e3349: mov    %r10d,0x10(%r9,%rdi,4)  ;*iastore
                  │        │                                                 ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  1.21%    1.92%  │        │   0x00007fb5cd1e334e: dec    %edi               ;*iinc
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │        │   0x00007fb5cd1e3350: cmp    $0xffffffffffffffff,%edi
                  ╰        │   0x00007fb5cd1e3353: jg     0x00007fb5cd1e3344  ;*invokevirtual benchmarkArrayManualCopy_Dec
                           │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   ↗       │↗  0x00007fb5cd1e3355: movzbl 0x94(%rdx),%r11d   ;*getfield isDone
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@24 (line 106)
                   │       ││  0x00007fb5cd1e335d: add    $0x1,%rbp          ; OopMap{rcx=Oop rbx=Oop rdx=Oop off=385}
                   │       ││                                                ;*ifeq
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@27 (line 106)
  0.12%    0.17%   │       ││  0x00007fb5cd1e3361: test   %eax,0x172acc99(%rip)        # 0x00007fb5e4490000
                   │       ││                                                ;   {poll}
  0.15%    0.25%   │       ││  0x00007fb5cd1e3367: test   %r11d,%r11d
                   │       ││  0x00007fb5cd1e336a: jne    0x00007fb5cd1e3318  ;*aload_3
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                   │       ││  0x00007fb5cd1e336c: mov    0x20(%rcx),%esi    ;*getfield itemCount
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@1 (line 76)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   │       ││  0x00007fb5cd1e336f: mov    %esi,%edi
  0.07%    0.07%   │       ││  0x00007fb5cd1e3371: dec    %edi               ;*isub
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@5 (line 76)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.07%    0.12%   │       ││  0x00007fb5cd1e3373: test   %edi,%edi
                   ╰       ││  0x00007fb5cd1e3375: jl     0x00007fb5cd1e3355  ;*iflt
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                           ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007fb5cd1e3377: mov    0x28(%rcx),%r10d   ;*getfield intSource
                           ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@6 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                           ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007fb5cd1e337b: mov    0xc(%r12,%r10,8),%r11d  ;*iaload
                           ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@10 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                           ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                           ││                                                ; implicit exception: dispatches to 0x00007fb5cd1e3413
  0.46%    0.24%           ││  0x00007fb5cd1e3380: test   %r11d,%r11d
                    ╭      ││  0x00007fb5cd1e3383: jbe    0x00007fb5cd1e3413
  0.15%    0.03%    │      ││  0x00007fb5cd1e3389: cmp    %r11d,%edi
                    │╭     ││  0x00007fb5cd1e338c: jae    0x00007fb5cd1e3413  ;*aload_0
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.15%    0.08%    ││     ││  0x00007fb5cd1e3392: mov    0x2c(%rcx),%r9d    ;*getfield intTarget
                    ││     ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@1 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││     ││  0x00007fb5cd1e3396: mov    0xc(%r12,%r9,8),%r11d  ;*iastore
                    ││     ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││     ││                                                ; implicit exception: dispatches to 0x00007fb5cd1e3413
  0.02%             ││     ││  0x00007fb5cd1e339b: test   %r11d,%r11d
                    ││╭    ││  0x00007fb5cd1e339e: jbe    0x00007fb5cd1e3413
  0.17%    0.02%    │││    ││  0x00007fb5cd1e33a0: cmp    %r11d,%edi
                    │││╭   ││  0x00007fb5cd1e33a3: jae    0x00007fb5cd1e3413
  0.12%    0.12%    ││││   ││  0x00007fb5cd1e33a5: shl    $0x3,%r9
                    ││││   ││  0x00007fb5cd1e33a9: lea    (%r12,%r10,8),%rax
                    ││││   ││  0x00007fb5cd1e33ad: mov    %r9d,%r11d
                    ││││   ││  0x00007fb5cd1e33b0: shr    $0x2,%r11d
  0.12%    0.12%    ││││   ││  0x00007fb5cd1e33b4: and    $0x7,%r11d
                    ││││   ││  0x00007fb5cd1e33b8: add    %esi,%r11d
                    ││││   ││  0x00007fb5cd1e33bb: add    $0xfffffffffffffffb,%r11d
                    ││││   ││  0x00007fb5cd1e33bf: and    $0x7,%r11d
  0.17%    0.20%    ││││   ││  0x00007fb5cd1e33c3: sub    %r11d,%esi
                    ││││   ││  0x00007fb5cd1e33c6: add    $0xfffffffffffffffe,%esi
  0.02%             ││││   ││  0x00007fb5cd1e33c9: cmp    %r8d,%esi
           0.02%    ││││   ││  0x00007fb5cd1e33cc: cmovl  %r8d,%esi          ;*aload_0
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.10%    ││││↗  ││  0x00007fb5cd1e33d0: mov    0x10(%rax,%rdi,4),%r10d
                    │││││  ││  0x00007fb5cd1e33d5: mov    %r10d,0x10(%r9,%rdi,4)  ;*iastore
                    │││││  ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.13%    0.10%    │││││  ││  0x00007fb5cd1e33da: dec    %edi               ;*iinc
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.20%    0.17%    │││││  ││  0x00007fb5cd1e33dc: cmp    %esi,%edi
                    ││││╰  ││  0x00007fb5cd1e33de: jg     0x00007fb5cd1e33d0  ;*iflt
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││││   ││  0x00007fb5cd1e33e0: cmp    $0x6,%edi
                    ││││ ╭ ││  0x00007fb5cd1e33e3: jle    0x00007fb5cd1e3405
                    ││││ │ ││  0x00007fb5cd1e33e5: nopw   0x0(%rax,%rax,1)   ;*aload_0
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.10%    0.03%    ││││ │↗││  0x00007fb5cd1e33f0: vmovdqu -0xc(%rax,%rdi,4),%ymm0
 13.18%    7.83%    ││││ ││││  0x00007fb5cd1e33f6: vmovdqu %ymm0,-0xc(%r9,%rdi,4)  ;*iastore
                    ││││ ││││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
 49.51%   54.31%    ││││ ││││  0x00007fb5cd1e33fd: add    $0xfffffffffffffff8,%edi  ;*iinc
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││││ ││││  0x00007fb5cd1e3400: cmp    $0x6,%edi
                    ││││ │╰││  0x00007fb5cd1e3403: jg     0x00007fb5cd1e33f0  ;*iflt
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%    ││││ ↘ ││  0x00007fb5cd1e3405: cmp    $0xffffffffffffffff,%edi
                    ││││   ╰│  0x00007fb5cd1e3408: jg     0x00007fb5cd1e3344
                    ││││    ╰  0x00007fb5cd1e340e: jmpq   0x00007fb5cd1e3355
                    ↘↘↘↘       0x00007fb5cd1e3413: mov    $0xffffff86,%esi
                               0x00007fb5cd1e3418: mov    %rdx,(%rsp)
                               0x00007fb5cd1e341c: mov    %rbx,0x8(%rsp)
                               0x00007fb5cd1e3421: mov    %rcx,0x18(%rsp)
                               0x00007fb5cd1e3426: mov    %edi,0x20(%rsp)
                               0x00007fb5cd1e342a: xchg   %ax,%ax
....................................................................................................
 67.27%   67.22%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7fb5cd1e5428:0x7fb5cd1e5514] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                         0x00007fb5cd1e5428: cmp    $0xf8010f91,%r11d  ;   {metadata(&apos;net/greypanther/generated/BenchmarkIntArrayCopy_jmhType&apos;)}
                         0x00007fb5cd1e542f: jne    0x00007fb5cd1e55b1
                         0x00007fb5cd1e5435: test   %rdi,%rdi
                         0x00007fb5cd1e5438: je     0x00007fb5cd1e558e  ;*aload_3
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                         0x00007fb5cd1e543e: mov    $0xffffffff,%r10d
                  ╭      0x00007fb5cd1e5444: jmp    0x00007fb5cd1e5474
                  │      0x00007fb5cd1e5446: xchg   %ax,%ax            ;*aload_0
                  │                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                  │                                                    ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.02%  │↗     0x00007fb5cd1e5448: mov    0x10(%rsi,%rdx,4),%r8d
  0.25%    0.32%  ││     0x00007fb5cd1e544d: mov    %r8d,0x10(%rcx,%rdx,4)  ;*iastore
                  ││                                                   ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                  ││                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  ││                                                   ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.30%    0.44%  ││     0x00007fb5cd1e5452: dec    %edx               ;*iinc
                  ││                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  ││                                                   ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  ││     0x00007fb5cd1e5454: cmp    $0xffffffffffffffff,%edx
                  │╰     0x00007fb5cd1e5457: jg     0x00007fb5cd1e5448  ;*invokevirtual benchmarkArrayManualCopy_Dec
                  │                                                    ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │ ↗    0x00007fb5cd1e5459: movzbl 0x94(%rdi),%r8d    ;*getfield isDone
                  │ │                                                  ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@24 (line 106)
                  │ │    0x00007fb5cd1e5461: add    $0x1,%rbx          ; OopMap{rdi=Oop r13=Oop r14=Oop off=197}
                  │ │                                                  ;*ifeq
                  │ │                                                  ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@27 (line 106)
  0.02%    0.02%  │ │    0x00007fb5cd1e5465: test   %eax,0x172aab95(%rip)        # 0x00007fb5e4490000
                  │ │                                                  ;   {poll}
  0.02%    0.02%  │ │    0x00007fb5cd1e546b: test   %r8d,%r8d
                  │ │    0x00007fb5cd1e546e: jne    0x00007fb5cd1e5522  ;*aload_3
                  │ │                                                  ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                  ↘ │    0x00007fb5cd1e5474: mov    0x20(%r14),%r8d    ;*getfield itemCount
                    │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@1 (line 76)
                    │                                                  ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │    0x00007fb5cd1e5478: mov    %r8d,%edx
                    │    0x00007fb5cd1e547b: dec    %edx               ;*isub
                    │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@5 (line 76)
                    │                                                  ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.05%    │    0x00007fb5cd1e547d: test   %edx,%edx
                    ╰    0x00007fb5cd1e547f: jl     0x00007fb5cd1e5459  ;*iflt
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fb5cd1e5481: mov    0x28(%r14),%r11d   ;*getfield intSource
                                                                       ; - net.greypanther.BenchmarkIntArrayCopy::copy@6 (line 31)
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fb5cd1e5485: mov    0xc(%r12,%r11,8),%ecx  ;*iaload
                                                                       ; - net.greypanther.BenchmarkIntArrayCopy::copy@10 (line 31)
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                                                                       ; implicit exception: dispatches to 0x00007fb5cd1e5552
  0.07%                  0x00007fb5cd1e548a: test   %ecx,%ecx
                         0x00007fb5cd1e548c: jbe    0x00007fb5cd1e5552
  0.08%                  0x00007fb5cd1e5492: cmp    %ecx,%edx
                         0x00007fb5cd1e5494: jae    0x00007fb5cd1e5552  ;*aload_0
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fb5cd1e549a: mov    0x2c(%r14),%ecx    ;*getfield intTarget
                                                                       ; - net.greypanther.BenchmarkIntArrayCopy::copy@1 (line 31)
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fb5cd1e549e: mov    0xc(%r12,%rcx,8),%r9d  ;*iastore
                                                                       ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                                                                       ; implicit exception: dispatches to 0x00007fb5cd1e5552
                         0x00007fb5cd1e54a3: test   %r9d,%r9d
                         0x00007fb5cd1e54a6: jbe    0x00007fb5cd1e5552
  0.05%    0.07%         0x00007fb5cd1e54ac: cmp    %r9d,%edx
                         0x00007fb5cd1e54af: jae    0x00007fb5cd1e5552
                         0x00007fb5cd1e54b5: shl    $0x3,%rcx
                         0x00007fb5cd1e54b9: lea    (%r12,%r11,8),%rsi
  0.02%                  0x00007fb5cd1e54bd: mov    %ecx,%r9d
  0.02%                  0x00007fb5cd1e54c0: shr    $0x2,%r9d
                         0x00007fb5cd1e54c4: and    $0x7,%r9d
                         0x00007fb5cd1e54c8: add    %r8d,%r9d
                         0x00007fb5cd1e54cb: add    $0xfffffffffffffffb,%r9d
  0.02%                  0x00007fb5cd1e54cf: and    $0x7,%r9d
                         0x00007fb5cd1e54d3: sub    %r9d,%r8d
                         0x00007fb5cd1e54d6: add    $0xfffffffffffffffe,%r8d
                         0x00007fb5cd1e54da: cmp    %r10d,%r8d
  0.02%    0.05%         0x00007fb5cd1e54dd: cmovl  %r10d,%r8d         ;*aload_0
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ↗   0x00007fb5cd1e54e1: mov    0x10(%rsi,%rdx,4),%r11d
                     │   0x00007fb5cd1e54e6: mov    %r11d,0x10(%rcx,%rdx,4)  ;*iastore
                     │                                                 ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                     │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.10%    0.07%     │   0x00007fb5cd1e54eb: dec    %edx               ;*iinc
                     │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                     │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     │   0x00007fb5cd1e54ed: cmp    %r8d,%edx
                     ╰   0x00007fb5cd1e54f0: jg     0x00007fb5cd1e54e1  ;*iflt
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fb5cd1e54f2: cmp    $0x6,%edx
                         0x00007fb5cd1e54f5: jle    0x00007fb5cd1e5514
                         0x00007fb5cd1e54f7: nopw   0x0(%rax,%rax,1)   ;*aload_0
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.07%    0.02%      ↗  0x00007fb5cd1e5500: vmovdqu -0xc(%rsi,%rdx,4),%ymm0
  2.98%    1.74%      │  0x00007fb5cd1e5506: vmovdqu %ymm0,-0xc(%rcx,%rdx,4)  ;*iastore
                      │                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                      │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                      │                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
 12.20%   13.49%      │  0x00007fb5cd1e550c: add    $0xfffffffffffffff8,%edx  ;*iinc
                      │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                      │                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                      │  0x00007fb5cd1e550f: cmp    $0x6,%edx
                      ╰  0x00007fb5cd1e5512: jg     0x00007fb5cd1e5500  ;*iflt
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                                                                       ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fb5cd1e5514: cmp    $0xffffffffffffffff,%edx
....................................................................................................
 16.25%   16.29%  <total for region 2>

....[Hottest Region 3]..............................................................................
 [0x7fb5cd1d55eb:0x7fb5cd1d56e8] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                                0x00007fb5cd1d55eb: cmp    $0xf8010f91,%r10d  ;   {metadata(&apos;net/greypanther/generated/BenchmarkIntArrayCopy_jmhType&apos;)}
                                0x00007fb5cd1d55f2: jne    0x00007fb5cd1d577d
                                0x00007fb5cd1d55f8: test   %rdi,%rdi
                                0x00007fb5cd1d55fb: je     0x00007fb5cd1d5755  ;*aload_3
                                                                              ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                                0x00007fb5cd1d5601: mov    $0xffffffff,%r10d
                  ╭             0x00007fb5cd1d5607: jmp    0x00007fb5cd1d5638
                  │             0x00007fb5cd1d5609: xchg   %ax,%ax            ;*aload_0
                  │                                                           ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                  │                                                           ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%           │↗        ↗   0x00007fb5cd1d560c: mov    0x10(%r9,%rdx,4),%r8d
  0.17%    0.12%  ││        │   0x00007fb5cd1d5611: mov    %r8d,0x10(%rcx,%rdx,4)  ;*iastore
                  ││        │                                                 ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                  ││        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  ││        │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.29%    0.29%  ││        │   0x00007fb5cd1d5616: dec    %edx               ;*iinc
                  ││        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  ││        │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  ││        │   0x00007fb5cd1d5618: cmp    $0xffffffffffffffff,%edx
                  │╰        │   0x00007fb5cd1d561b: jg     0x00007fb5cd1d560c  ;*invokevirtual benchmarkArrayManualCopy_Dec
                  │         │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │ ↗       │↗  0x00007fb5cd1d561d: movzbl 0x94(%rdi),%r11d   ;*getfield isDone
                  │ │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@24 (line 106)
                  │ │       ││  0x00007fb5cd1d5625: add    $0x1,%rbx          ; OopMap{rdi=Oop rax=Oop r13=Oop off=201}
                  │ │       ││                                                ;*ifeq
                  │ │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@27 (line 106)
  0.03%           │ │       ││  0x00007fb5cd1d5629: test   %eax,0x172ba9d1(%rip)        # 0x00007fb5e4490000
                  │ │       ││                                                ;   {poll}
  0.05%           │ │       ││  0x00007fb5cd1d562f: test   %r11d,%r11d
                  │ │       ││  0x00007fb5cd1d5632: jne    0x00007fb5cd1d5711  ;*aload_3
                  │ │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                  ↘ │       ││  0x00007fb5cd1d5638: mov    0x20(%r13),%r8d    ;*getfield itemCount
                    │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@1 (line 76)
                    │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │       ││  0x00007fb5cd1d563c: mov    %r8d,%edx
  0.02%             │       ││  0x00007fb5cd1d563f: dec    %edx               ;*isub
                    │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@5 (line 76)
                    │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%             │       ││  0x00007fb5cd1d5641: test   %edx,%edx
                    ╰       ││  0x00007fb5cd1d5643: jl     0x00007fb5cd1d561d  ;*iflt
                            ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                            ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                            ││  0x00007fb5cd1d5645: mov    0x28(%r13),%r11d   ;*getfield intSource
                            ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@6 (line 31)
                            ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                            ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                            ││  0x00007fb5cd1d5649: mov    0xc(%r12,%r11,8),%ecx  ;*iaload
                            ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@10 (line 31)
                            ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                            ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                            ││                                                ; implicit exception: dispatches to 0x00007fb5cd1d56e3
  0.05%    0.03%            ││  0x00007fb5cd1d564e: test   %ecx,%ecx
                     ╭      ││  0x00007fb5cd1d5650: jbe    0x00007fb5cd1d56e3
                     │      ││  0x00007fb5cd1d5656: cmp    %ecx,%edx
                     │╭     ││  0x00007fb5cd1d5658: jae    0x00007fb5cd1d56e3  ;*aload_0
                     ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                     ││     ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││     ││  0x00007fb5cd1d565e: mov    0x2c(%r13),%ecx    ;*getfield intTarget
                     ││     ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@1 (line 31)
                     ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     ││     ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││     ││  0x00007fb5cd1d5662: mov    0xc(%r12,%rcx,8),%r9d  ;*iastore
                     ││     ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                     ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     ││     ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││     ││                                                ; implicit exception: dispatches to 0x00007fb5cd1d56e3
                     ││     ││  0x00007fb5cd1d5667: test   %r9d,%r9d
                     ││╭    ││  0x00007fb5cd1d566a: jbe    0x00007fb5cd1d56e3
  0.02%    0.02%     │││    ││  0x00007fb5cd1d566c: cmp    %r9d,%edx
                     │││╭   ││  0x00007fb5cd1d566f: jae    0x00007fb5cd1d56e3
  0.03%    0.02%     ││││   ││  0x00007fb5cd1d5671: lea    (%r12,%r11,8),%r9
                     ││││   ││  0x00007fb5cd1d5675: shl    $0x3,%rcx
  0.02%              ││││   ││  0x00007fb5cd1d5679: mov    %ecx,%r11d
                     ││││   ││  0x00007fb5cd1d567c: shr    $0x2,%r11d
  0.03%              ││││   ││  0x00007fb5cd1d5680: and    $0x7,%r11d
                     ││││   ││  0x00007fb5cd1d5684: add    %r8d,%r11d
                     ││││   ││  0x00007fb5cd1d5687: add    $0xfffffffffffffffb,%r11d
           0.02%     ││││   ││  0x00007fb5cd1d568b: and    $0x7,%r11d
                     ││││   ││  0x00007fb5cd1d568f: sub    %r11d,%r8d
                     ││││   ││  0x00007fb5cd1d5692: add    $0xfffffffffffffffe,%r8d
                     ││││   ││  0x00007fb5cd1d5696: cmp    %r10d,%r8d
                     ││││   ││  0x00007fb5cd1d5699: cmovl  %r10d,%r8d         ;*aload_0
                     ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                     ││││   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%              ││││↗  ││  0x00007fb5cd1d569d: mov    0x10(%r9,%rdx,4),%r11d
  0.02%              │││││  ││  0x00007fb5cd1d56a2: mov    %r11d,0x10(%rcx,%rdx,4)  ;*iastore
                     │││││  ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                     │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     │││││  ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.03%              │││││  ││  0x00007fb5cd1d56a7: dec    %edx               ;*iinc
                     │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                     │││││  ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.03%    0.03%     │││││  ││  0x00007fb5cd1d56a9: cmp    %r8d,%edx
                     ││││╰  ││  0x00007fb5cd1d56ac: jg     0x00007fb5cd1d569d  ;*iflt
                     ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                     ││││   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││││   ││  0x00007fb5cd1d56ae: cmp    $0x6,%edx
                     ││││ ╭ ││  0x00007fb5cd1d56b1: jle    0x00007fb5cd1d56d5
                     ││││ │ ││  0x00007fb5cd1d56b3: nopw   0x0(%rax,%rax,1)
                     ││││ │ ││  0x00007fb5cd1d56bc: xchg   %ax,%ax            ;*aload_0
                     ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                     ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││││ │↗││  0x00007fb5cd1d56c0: vmovdqu -0xc(%r9,%rdx,4),%ymm0
  2.07%    1.55%     ││││ ││││  0x00007fb5cd1d56c7: vmovdqu %ymm0,-0xc(%rcx,%rdx,4)  ;*iastore
                     ││││ ││││                                                ; - net.greypanther.BenchmarkIntArrayCopy::copy@11 (line 31)
                     ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     ││││ ││││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  7.72%    8.46%     ││││ ││││  0x00007fb5cd1d56cd: add    $0xfffffffffffffff8,%edx  ;*iinc
                     ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                     ││││ ││││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
           0.02%     ││││ ││││  0x00007fb5cd1d56d0: cmp    $0x6,%edx
                     ││││ │╰││  0x00007fb5cd1d56d3: jg     0x00007fb5cd1d56c0  ;*iflt
                     ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                     ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││││ ↘ ││  0x00007fb5cd1d56d5: cmp    $0xffffffffffffffff,%edx
                     ││││   ╰│  0x00007fb5cd1d56d8: jg     0x00007fb5cd1d560c
                     ││││    ╰  0x00007fb5cd1d56de: jmpq   0x00007fb5cd1d561d
                     ↘↘↘↘       0x00007fb5cd1d56e3: mov    $0xffffff86,%esi
                                0x00007fb5cd1d56e8: mov    %rdi,%rbp
....................................................................................................
 10.63%   10.55%  <total for region 3>

....[Hottest Regions]...............................................................................
 67.27%   67.22%  [0x7fb5cd1e3334:0x7fb5cd1e342a] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
 16.25%   16.29%  [0x7fb5cd1e5428:0x7fb5cd1e5514] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
 10.63%   10.55%  [0x7fb5cd1d55eb:0x7fb5cd1d56e8] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  0.66%    0.64%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.25%    0.30%  [0xffffffff811aa504:0xffffffff811aa50f] in [unknown] ([unknown])
  0.17%    0.45%  [0x7fb5cd1d8b8f:0x7fb5cd1d8beb] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.15%    0.03%  [0xffffffff813d3030:0xffffffff813d3037] in [unknown] ([unknown])
  0.15%    0.03%  [0xffffffff817f1c10:0xffffffff817f1c37] in [unknown] ([unknown])
  0.12%    0.17%  [0xffffffff810dd29c:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.10%    0.03%  [0xffffffff817efb41:0xffffffff817efb49] in [unknown] ([unknown])
  0.10%    0.08%  [0x7fb5e38dda90:0x7fb5e38ddaa2] in _IO_fwrite (libc-2.21.so)
  0.08%    0.05%  [0xffffffff817efbc0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.08%    0.22%  [0x7fb5e31b7230:0x7fb5e31b724d] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.08%  [0xffffffff8121abd8:0xffffffff8121ac06] in [unknown] ([unknown])
  0.07%           [0xffffffff8163249f:0xffffffff816324b3] in [unknown] ([unknown])
  0.07%    0.05%  [0xffffffff817f1a26:0xffffffff817f1a26] in [unknown] ([unknown])
  0.05%           [0xffffffff813d2dea:0xffffffff813d2dea] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff817f19e4:0xffffffff817f1a00] in [unknown] ([unknown])
  0.05%           [0x7fb5e0e74aaa:0x7fb5e0e74acc] in print_insn (hsdis-amd64.so)
  0.05%    0.03%  [0x7fb5e336b0c0:0x7fb5e336b0da] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  3.57%    3.69%  <...other 304 warm regions...>
....................................................................................................
100.00%   99.95%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 94.17%   94.10%  net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  3.44%    2.88%  [unknown] ([unknown])
  0.19%    0.47%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.12%    0.25%  _IO_fwrite (libc-2.21.so)
  0.12%    0.19%  vfprintf (libc-2.21.so)
  0.10%    0.05%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.10%    0.03%  print_insn (hsdis-amd64.so)
  0.08%    0.22%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.08%    0.03%  _IO_vsnprintf (libc-2.21.so)
  0.07%    0.05%  strlen (libc-2.21.so)
  0.05%    0.02%  __strncpy_sse2_unaligned (libc-2.21.so)
  0.05%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.05%    0.02%  _ZN13defaultStream4holdEl (libjvm.so)
  0.05%           __pthread_enable_asynccancel (libpthread-2.21.so)
  0.05%           _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.05%    0.08%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.03%    0.10%  _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.03%    0.03%  pthread_getspecific (libpthread-2.21.so)
  0.03%           _ZNK8CodeHeap10find_startEPv (libjvm.so)
  0.03%    0.02%  oappend (hsdis-amd64.so)
  1.10%    0.49%  <...other 62 warm methods...>
....................................................................................................
100.00%   99.04%  <totals>

....[Distribution by Area]..........................................................................
 94.44%   94.61%  <generated code>
  3.44%    2.88%  <native code in ([unknown])>
  1.15%    1.36%  <native code in (libjvm.so)>
  0.61%    0.94%  <native code in (libc-2.21.so)>
  0.25%    0.10%  <native code in (hsdis-amd64.so)>
  0.12%    0.03%  <native code in (libpthread-2.21.so)>
....................................................................................................
100.00%   99.95%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkIntArrayCopy.benchmarkArrayManualCopy_Overlap_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 26.67% complete, ETA 00:03:37
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 968021.987 ops/s
# Warmup Iteration   2: 1143579.784 ops/s
# Warmup Iteration   3: 1183634.981 ops/s
Iteration   1: 1227736.194 ops/s
Iteration   2: 1250940.187 ops/s
Iteration   3: 1159993.496 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Overlap_Dec":
  1212889.959 ±(99.9%) 862126.057 ops/s [Average]
  (min, avg, max) = (1159993.496, 1212889.959, 1250940.187), stdev = 47256.038
  CI (99.9%): [350763.902, 2075016.016] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 131384 total address lines.
Perf output processed (skipped 3.185 seconds):
 Column 1: cycles (5736 events)
 Column 2: instructions (5750 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f8b991ed724:0x7f8b991ed835] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                                                                             ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@34 (line 107)
                               0x00007f8b991ed724: mov    %r12,0x20(%rbx)    ;*putfield realTime
                                                                             ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@40 (line 108)
                               0x00007f8b991ed728: add    $0x40,%rsp
                               0x00007f8b991ed72c: pop    %rbp
                               0x00007f8b991ed72d: test   %eax,0x172908cd(%rip)        # 0x00007f8bb047e000
                                                                             ;   {poll_return}
                               0x00007f8b991ed733: retq                      ;*aload_0
                                                                             ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                                                                             ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.03%  ↗        ↗   0x00007f8b991ed734: mov    0xc(%r11,%r9,4),%r10d
  0.05%    0.05%  │        │   0x00007f8b991ed739: mov    %r10d,0x10(%r11,%r9,4)  ;*iastore
                  │        │                                                 ; - net.greypanther.BenchmarkIntArrayCopy::selfCopy@11 (line 36)
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.21%    0.23%  │        │   0x00007f8b991ed73e: dec    %r9d               ;*isub
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │        │   0x00007f8b991ed741: test   %r9d,%r9d
                  ╰        │   0x00007f8b991ed744: jg     0x00007f8b991ed734  ;*invokevirtual benchmarkArrayManualCopy_Overlap_Dec
                           │                                                 ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                   ↗       │↗  0x00007f8b991ed746: movzbl 0x94(%rcx),%r11d   ;*getfield isDone
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@24 (line 106)
  0.03%            │       ││  0x00007f8b991ed74e: add    $0x1,%rbp          ; OopMap{r8=Oop rcx=Oop rbx=Oop off=370}
                   │       ││                                                ;*ifeq
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@27 (line 106)
           0.02%   │       ││  0x00007f8b991ed752: test   %eax,0x172908a8(%rip)        # 0x00007f8bb047e000
                   │       ││                                                ;   {poll}
           0.02%   │       ││  0x00007f8b991ed758: test   %r11d,%r11d
                   │       ││  0x00007f8b991ed75b: jne    0x00007f8b991ed70f  ;*aload_3
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@13 (line 104)
           0.02%   │       ││  0x00007f8b991ed75d: mov    0x20(%r8),%edx     ;*getfield itemCount
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@1 (line 88)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                   │       ││  0x00007f8b991ed761: mov    %edx,%r9d
           0.02%   │       ││  0x00007f8b991ed764: dec    %r9d               ;*isub
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@5 (line 88)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
           0.02%   │       ││  0x00007f8b991ed767: test   %r9d,%r9d
                   ╰       ││  0x00007f8b991ed76a: jle    0x00007f8b991ed746  ;*ifle
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                           ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007f8b991ed76c: mov    0x28(%r8),%r10d    ;*getfield intSource
                           ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::selfCopy@1 (line 36)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                           ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007f8b991ed770: mov    0xc(%r12,%r10,8),%r11d  ;*iaload
                           ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::selfCopy@10 (line 36)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                           ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                           ││                                                ; implicit exception: dispatches to 0x00007f8b991ed81d
  0.07%    0.05%           ││  0x00007f8b991ed775: test   %r11d,%r11d
                    ╭      ││  0x00007f8b991ed778: jbe    0x00007f8b991ed81d
  0.07%             │      ││  0x00007f8b991ed77e: add    $0xfffffffffffffffe,%edx
                    │      ││  0x00007f8b991ed781: cmp    %r11d,%edx
                    │╭     ││  0x00007f8b991ed784: jae    0x00007f8b991ed81d
           0.02%    ││     ││  0x00007f8b991ed78a: cmp    $0x1,%r11d
                    ││╭    ││  0x00007f8b991ed78e: jbe    0x00007f8b991ed81d
  0.02%             │││    ││  0x00007f8b991ed794: cmp    %r11d,%r9d
                    │││╭   ││  0x00007f8b991ed797: jae    0x00007f8b991ed81d
  0.05%    0.09%    ││││   ││  0x00007f8b991ed79d: lea    (%r12,%r10,8),%r11  ;*aload_0
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    ││││↗  ││  0x00007f8b991ed7a1: mov    0xc(%r11,%r9,4),%edi
                    │││││  ││  0x00007f8b991ed7a6: mov    %edi,0x10(%r11,%r9,4)  ;*iastore
                    │││││  ││                                                ; - net.greypanther.BenchmarkIntArrayCopy::selfCopy@11 (line 36)
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    │││││  ││  0x00007f8b991ed7ab: dec    %r9d               ;*isub
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
           0.03%    │││││  ││  0x00007f8b991ed7ae: cmp    %edx,%r9d
                    ││││╰  ││  0x00007f8b991ed7b1: jg     0x00007f8b991ed7a1  ;*ifle
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    ││││   ││  0x00007f8b991ed7b3: cmp    $0x7,%r9d
                    ││││ ╭ ││  0x00007f8b991ed7b7: jle    0x00007f8b991ed80f
                    ││││ │ ││  0x00007f8b991ed7b9: nopl   0x0(%rax)          ;*aload_0
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.26%    0.12%    ││││ │↗││  0x00007f8b991ed7c0: movslq %r9d,%r10
  0.02%    0.03%    ││││ ││││  0x00007f8b991ed7c3: lea    (%r11,%r10,4),%rdi
  8.18%    7.06%    ││││ ││││  0x00007f8b991ed7c7: mov    0xc(%rdi),%r10d
  0.14%    0.19%    ││││ ││││  0x00007f8b991ed7cb: mov    %r10d,0x10(%rdi)
  0.54%    0.54%    ││││ ││││  0x00007f8b991ed7cf: mov    0x8(%rdi),%r10d
  0.10%    0.21%    ││││ ││││  0x00007f8b991ed7d3: mov    %r10d,0xc(%rdi)
  8.87%   16.70%    ││││ ││││  0x00007f8b991ed7d7: mov    0x4(%rdi),%r10d
  0.12%    0.09%    ││││ ││││  0x00007f8b991ed7db: mov    %r10d,0x8(%rdi)
  7.97%   10.85%    ││││ ││││  0x00007f8b991ed7df: mov    (%rdi),%r10d
  0.09%    0.09%    ││││ ││││  0x00007f8b991ed7e2: mov    %r10d,0x4(%rdi)
  9.24%    6.64%    ││││ ││││  0x00007f8b991ed7e6: mov    -0x4(%rdi),%r10d
  0.09%    0.21%    ││││ ││││  0x00007f8b991ed7ea: mov    %r10d,(%rdi)
  7.20%    6.30%    ││││ ││││  0x00007f8b991ed7ed: mov    -0x8(%rdi),%r10d
  0.09%    0.12%    ││││ ││││  0x00007f8b991ed7f1: mov    %r10d,-0x4(%rdi)
  9.85%    6.89%    ││││ ││││  0x00007f8b991ed7f5: mov    -0xc(%rdi),%r10d
  0.14%    0.09%    ││││ ││││  0x00007f8b991ed7f9: mov    %r10d,-0x8(%rdi)
  7.18%    6.70%    ││││ ││││  0x00007f8b991ed7fd: mov    -0x10(%rdi),%r10d
  0.07%    0.03%    ││││ ││││  0x00007f8b991ed801: mov    %r10d,-0xc(%rdi)   ;*iastore
                    ││││ ││││                                                ; - net.greypanther.BenchmarkIntArrayCopy::selfCopy@11 (line 36)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  8.53%    6.10%    ││││ ││││  0x00007f8b991ed805: add    $0xfffffffffffffff8,%r9d  ;*isub
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.05%             ││││ ││││  0x00007f8b991ed809: cmp    $0x7,%r9d
                    ││││ │╰││  0x00007f8b991ed80d: jg     0x00007f8b991ed7c0  ;*ifle
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
           0.02%    ││││ ↘ ││  0x00007f8b991ed80f: test   %r9d,%r9d
                    ││││   ╰│  0x00007f8b991ed812: jg     0x00007f8b991ed734
                    ││││    ╰  0x00007f8b991ed818: jmpq   0x00007f8b991ed746
                    ↘↘↘↘       0x00007f8b991ed81d: mov    $0xffffff86,%esi
                               0x00007f8b991ed822: mov    %rcx,(%rsp)
                               0x00007f8b991ed826: mov    %rbx,0x8(%rsp)
                               0x00007f8b991ed82b: mov    %r8,0x18(%rsp)
                               0x00007f8b991ed830: mov    %r9d,0x20(%rsp)
                               0x00007f8b991ed835: xchg   %ax,%ax
....................................................................................................
 69.25%   69.57%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f8b991ef57d:0x7f8b991ef5df] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                                                                   ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                     0x00007f8b991ef57d: cmp    %r9d,%r8d
                     0x00007f8b991ef580: jg     0x00007f8b991ef570  ;*ifle
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                   ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                     0x00007f8b991ef582: cmp    $0x7,%r8d
                     0x00007f8b991ef586: jle    0x00007f8b991ef5df
                     0x00007f8b991ef588: nopl   0x0(%rax,%rax,1)   ;*aload_0
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                                                                   ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.03%           ↗  0x00007f8b991ef590: movslq %r8d,%r10
                  │  0x00007f8b991ef593: lea    (%r11,%r10,4),%r9
  1.90%    1.51%  │  0x00007f8b991ef597: mov    0xc(%r9),%r10d
  0.02%           │  0x00007f8b991ef59b: mov    %r10d,0x10(%r9)
  0.03%    0.05%  │  0x00007f8b991ef59f: mov    0x8(%r9),%r10d
                  │  0x00007f8b991ef5a3: mov    %r10d,0xc(%r9)
  2.30%    3.83%  │  0x00007f8b991ef5a7: mov    0x4(%r9),%r10d
  0.02%           │  0x00007f8b991ef5ab: mov    %r10d,0x8(%r9)
  1.39%    2.38%  │  0x00007f8b991ef5af: mov    (%r9),%r10d
                  │  0x00007f8b991ef5b2: mov    %r10d,0x4(%r9)
  2.41%    1.36%  │  0x00007f8b991ef5b6: mov    -0x4(%r9),%r10d
  0.02%    0.02%  │  0x00007f8b991ef5ba: mov    %r10d,(%r9)
  1.62%    1.41%  │  0x00007f8b991ef5bd: mov    -0x8(%r9),%r10d
           0.03%  │  0x00007f8b991ef5c1: mov    %r10d,-0x4(%r9)
  2.16%    1.62%  │  0x00007f8b991ef5c5: mov    -0xc(%r9),%r10d
                  │  0x00007f8b991ef5c9: mov    %r10d,-0x8(%r9)
  1.39%    1.51%  │  0x00007f8b991ef5cd: mov    -0x10(%r9),%r10d
           0.02%  │  0x00007f8b991ef5d1: mov    %r10d,-0xc(%r9)    ;*iastore
                  │                                                ; - net.greypanther.BenchmarkIntArrayCopy::selfCopy@11 (line 36)
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  │                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  1.88%    1.41%  │  0x00007f8b991ef5d5: add    $0xfffffffffffffff8,%r8d  ;*isub
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  │                                                ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │  0x00007f8b991ef5d9: cmp    $0x7,%r8d
                  ╰  0x00007f8b991ef5dd: jg     0x00007f8b991ef590  ;*ifle
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                   ; - net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                     0x00007f8b991ef5df: test   %r8d,%r8d
....................................................................................................
 15.18%   15.15%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.25%   69.57%  [0x7f8b991ed724:0x7f8b991ed835] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
 15.18%   15.15%  [0x7f8b991ef57d:0x7f8b991ef5df] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  7.37%    7.18%  [0x7f8b991e15fe:0x7f8b991e1672] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  1.73%    1.76%  [0x7f8b991e47a0:0x7f8b991e4809] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  0.85%    0.83%  [0xffffffff810603f0:0xffffffff810603fa] in [unknown] ([unknown])
  0.23%    0.21%  [0xffffffff811aa504:0xffffffff811aa50f] in [unknown] ([unknown])
  0.16%    0.09%  [0xffffffff817efb3a:0xffffffff817efb49] in [unknown] ([unknown])
  0.16%           [0xffffffff817f1c10:0xffffffff817f1c37] in [unknown] ([unknown])
  0.12%    0.10%  [0xffffffff810dd298:0xffffffff810dd2cc] in [unknown] ([unknown])
  0.12%           [0xffffffff813d3035:0xffffffff813d3037] in [unknown] ([unknown])
  0.12%    0.05%  [0xffffffff817efbc0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.12%    0.14%  [0x7f8baf1a5230:0x7f8baf1a524d] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.10%    0.07%  [0x7f8b991ef4e5:0x7f8b991ef512] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  0.09%    0.12%  [0xffffffff811ffe40:0xffffffff811ffe78] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff811ff4ba:0xffffffff811ff4ba] in [unknown] ([unknown])
  0.07%    0.07%  [0xffffffff817f16a6:0xffffffff817f16bb] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff817f1a09:0xffffffff817f1a26] in [unknown] ([unknown])
  0.07%    0.10%  [0x7f8b991e1561:0x7f8b991e15b4] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  0.07%    0.09%  [0x7f8baf8d82c0:0x7f8baf8d830b] in _IO_default_xsputn (libc-2.21.so)
  0.05%    0.05%  [0xffffffff8102c3c1:0xffffffff8102c3c1] in [unknown] ([unknown])
  3.96%    4.35%  <...other 317 warm regions...>
....................................................................................................
 99.97%   99.97%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 92.00%   92.16%  net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  3.73%    3.39%  [unknown] ([unknown])
  1.73%    1.76%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  0.14%    0.14%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.14%    0.09%  print_insn (hsdis-amd64.so)
  0.07%    0.09%  _IO_default_xsputn (libc-2.21.so)
  0.07%    0.05%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%           <stub: method entry point (kind = zerolocals)>
  0.07%    0.24%  vfprintf (libc-2.21.so)
  0.07%    0.02%  _ZL13printf_to_envPvPKcz (libjvm.so)
  0.05%    0.02%  pthread_getspecific (libpthread-2.21.so)
  0.05%    0.09%  strlen (libc-2.21.so)
  0.05%    0.14%  _IO_fwrite (libc-2.21.so)
  0.05%    0.09%  _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.05%    0.02%  _ZN12outputStream5printEPKcz (libjvm.so)
  0.03%           _ZN13defaultStream5flushEv (libjvm.so)
  0.03%    0.03%  _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.03%           _ZN7Monitor6unlockEv (libjvm.so)
  0.03%    0.03%  __strcpy_sse2_unaligned (libc-2.21.so)
  0.03%    0.03%  _ZN13defaultStream4holdEl (libjvm.so)
  1.45%    0.78%  <...other 76 warm methods...>
....................................................................................................
 99.97%   99.17%  <totals>

....[Distribution by Area]..........................................................................
 93.93%   93.97%  <generated code>
  3.73%    3.39%  <native code in ([unknown])>
  1.45%    1.41%  <native code in (libjvm.so)>
  0.58%    1.04%  <native code in (libc-2.21.so)>
  0.21%    0.12%  <native code in (hsdis-amd64.so)>
  0.07%    0.03%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.97%   99.97%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkIntArrayCopy.benchmarkArraySystemArraycopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 30.00% complete, ETA 00:03:27
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6935243.706 ops/s
# Warmup Iteration   2: 7095993.545 ops/s
# Warmup Iteration   3: 6664391.916 ops/s
Iteration   1: 7051560.241 ops/s
Iteration   2: 7159891.049 ops/s
Iteration   3: 6764959.077 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy":
  6992136.789 ±(99.9%) 3722844.977 ops/s [Average]
  (min, avg, max) = (6764959.077, 6992136.789, 7159891.049), stdev = 204061.695
  CI (99.9%): [3269291.812, 10714981.766] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 130373 total address lines.
Perf output processed (skipped 3.154 seconds):
 Column 1: cycles (5503 events)
 Column 2: instructions (5489 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7fef9d052610:0x7fef9d0526fa] in StubRoutines::jint_disjoint_arraycopy

                             0x00007fef9d052610: (bad)  
                             0x00007fef9d052613: rol    $0xf5,%ch
                             0x00007fef9d052616: out    %eax,(%dx)
                             0x00007fef9d052617: leaveq 
                             0x00007fef9d052618: add    $0x4,%rdx
                             0x00007fef9d05261c: jg     Stub::jshort_arraycopy+74 0x0x7fef9d0525ca
                             0x00007fef9d05261e: xor    %rax,%rax
                             0x00007fef9d052621: leaveq 
                             0x00007fef9d052622: retq   
                           StubRoutines::jint_disjoint_arraycopy [0x00007fef9d052640, 0x00007fef9d0526c4[ (132 bytes)
  0.04%    0.07%             0x00007fef9d052640: push   %rbp
                             0x00007fef9d052641: mov    %rsp,%rbp
  0.11%    0.22%         ↗↗  0x00007fef9d052644: mov    %rdx,%rcx
  0.02%    0.04%         ││  0x00007fef9d052647: shr    $0x1,%rdx
                         ││  0x00007fef9d05264b: lea    -0x8(%rdi,%rdx,8),%rdi
  0.18%    0.27%         ││  0x00007fef9d052650: lea    -0x8(%rsi,%rdx,8),%rsi
                         ││  0x00007fef9d052655: neg    %rdx
  0.07%    0.13%  ╭      ││  0x00007fef9d052658: jmpq   Stub::jint_disjoint_arraycopy+88 0x0x7fef9d052698
                  │↗   ↗ ││  0x00007fef9d05265d: mov    0x8(%rdi,%rdx,8),%rax
                  ││   │ ││  0x00007fef9d052662: mov    %rax,0x8(%rsi,%rdx,8)
                  ││   │ ││  0x00007fef9d052667: inc    %rdx
                  │╰   │ ││  0x00007fef9d05266a: jne    Stub::jint_disjoint_arraycopy+29 0x0x7fef9d05265d
           0.02%  │    │↗││  0x00007fef9d05266c: test   $0x1,%ecx
                  │ ╭  ││││  0x00007fef9d052672: je     Stub::jint_disjoint_arraycopy+58 0x0x7fef9d05267a
                  │ │  ││││  0x00007fef9d052674: mov    0x8(%rdi),%eax
                  │ │  ││││  0x00007fef9d052677: mov    %eax,0x8(%rsi)
  0.13%    0.47%  │ ↘  ││││  0x00007fef9d05267a: xor    %rax,%rax
                  │    ││││  0x00007fef9d05267d: leaveq 
  0.24%    0.66%  │    ││││  0x00007fef9d05267e: retq   
                  │    ││││  0x00007fef9d05267f: nop    
  3.36%    4.15%  │  ↗ ││││  0x00007fef9d052680: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  6.43%    7.03%  │  │ ││││  0x00007fef9d052686: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
 15.30%   16.12%  │  │ ││││  0x00007fef9d05268c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
 38.96%   27.64%  │  │ ││││  0x00007fef9d052692: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
 25.99%   32.81%  ↘  │ ││││  0x00007fef9d052698: add    $0x8,%rdx
                     ╰ ││││  0x00007fef9d05269c: jle    Stub::jint_disjoint_arraycopy+64 0x0x7fef9d052680
  0.18%    0.33%       ││││  0x00007fef9d05269e: sub    $0x4,%rdx
                      ╭││││  0x00007fef9d0526a2: jg     Stub::jint_disjoint_arraycopy+116 0x0x7fef9d0526b4
                      │││││  0x00007fef9d0526a4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                      │││││  0x00007fef9d0526aa: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
                      │││││  0x00007fef9d0526b0: add    $0x4,%rdx
  0.07%    0.05%      ↘││││  0x00007fef9d0526b4: (bad)  
                       ││││  0x00007fef9d0526b7: rol    $0xf5,%ch
                       ││││  0x00007fef9d0526ba: out    %eax,(%dx)
                       ││││  0x00007fef9d0526bb: leaveq 
                       ││││  0x00007fef9d0526bc: sub    $0x4,%rdx
  0.18%    0.60%       ╰│││  0x00007fef9d0526c0: jl     Stub::jint_disjoint_arraycopy+29 0x0x7fef9d05265d
                        ╰││  0x00007fef9d0526c2: jmp    Stub::jint_disjoint_arraycopy+44 0x0x7fef9d05266c
                         ││StubRoutines::jint_arraycopy [0x00007fef9d0526e0, 0x00007fef9d052773[ (147 bytes)
                         ││  0x00007fef9d0526e0: push   %rbp
                         ││  0x00007fef9d0526e1: mov    %rsp,%rbp
                         ││  0x00007fef9d0526e4: cmp    %rdi,%rsi
                         ││  0x00007fef9d0526e7: lea    (%rdi,%rdx,4),%rax
                         ╰│  0x00007fef9d0526eb: jbe    Stub::jint_disjoint_arraycopy+4 0x0x7fef9d052644
                          │  0x00007fef9d0526f1: cmp    %rax,%rsi
                          ╰  0x00007fef9d0526f4: jae    Stub::jint_disjoint_arraycopy+4 0x0x7fef9d052644
                             0x00007fef9d0526fa: mov    %rdx,%rcx
....................................................................................................
 91.26%   90.62%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.26%   90.62%  [0x7fef9d052610:0x7fef9d0526fa] in StubRoutines::jint_disjoint_arraycopy
  1.98%    1.97%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  1.02%    1.80%  [0x7fef9d1ecbb5:0x7fef9d1ecc52] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.20%    0.35%  [0x7fef9d1ee8c6:0x7fef9d1ee962] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.16%    0.18%  [0x7fefb3b2c590:0x7fefb3b2c5cb] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.16%    0.18%  [0x7fefb3b2f230:0x7fefb3b2f24d] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.15%    0.13%  [0xffffffff810dd2ae:0xffffffff810dd2cc] in [unknown] ([unknown])
  0.09%    0.04%  [0xffffffff811ffe78:0xffffffff811ffe7f] in [unknown] ([unknown])
  0.09%           [0xffffffff817f1c10:0xffffffff817f1c10] in [unknown] ([unknown])
  0.09%    0.16%  [0x7fefb3ba4b14:0x7fefb3ba4b5f] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.09%    0.05%  [0x7fefb4255a9c:0x7fefb4255aa2] in _IO_fwrite (libc-2.21.so)
  0.07%           [0xffffffff8163249f:0xffffffff816324b3] in [unknown] ([unknown])
  0.07%    0.04%  [0xffffffff817efbcd:0xffffffff817efbd0] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff811fcf70:0xffffffff811fcf8d] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff811fcfe7:0xffffffff811fd020] in [unknown] ([unknown])
  0.05%    0.07%  [0xffffffff8121abe2:0xffffffff8121ac0c] in [unknown] ([unknown])
  0.05%    0.09%  [0xffffffff813eebc8:0xffffffff813eebe0] in [unknown] ([unknown])
  0.05%           [0x7fefb3b30ae7:0x7fefb3b30b01] in _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.05%    0.04%  [0x7fefb49d7bd0:0x7fefb49d7bf1] in pthread_getspecific (libpthread-2.21.so)
  0.04%           [0xffffffff810af0f9:0xffffffff810af105] in [unknown] ([unknown])
  4.20%    4.19%  <...other 334 warm regions...>
....................................................................................................
100.00%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.26%   90.62%  StubRoutines::jint_disjoint_arraycopy
  4.22%    4.30%  [unknown] ([unknown])
  1.27%    2.26%  net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.20%    0.13%  vfprintf (libc-2.21.so)
  0.16%    0.20%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.16%    0.18%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.13%    0.13%  _IO_fwrite (libc-2.21.so)
  0.11%    0.18%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.11%    0.07%  print_insn (hsdis-amd64.so)
  0.11%           _ZN12outputStream5printEPKcz (libjvm.so)
  0.07%    0.15%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.04%  pthread_getspecific (libpthread-2.21.so)
  0.05%    0.04%  _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.05%    0.04%  _ZN12outputStream12do_vsnprintfEPcmPKcP13__va_list_tagbRm (libjvm.so)
  0.04%           <stub: invoke return entry points>
  0.04%    0.05%  strlen (libc-2.21.so)
  0.04%           _ZN9Metaspace8allocateEP15ClassLoaderDatambN12MetaspaceObj4TypeEP6Thread (libjvm.so)
  0.04%    0.04%  _IO_file_xsputn@@GLIBC_2.2.5 (libc-2.21.so)
  0.04%           _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ (libjvm.so)
  0.04%    0.05%  __pthread_enable_asynccancel (libpthread-2.21.so)
  1.82%    0.56%  <...other 85 warm methods...>
....................................................................................................
100.00%   99.03%  <totals>

....[Distribution by Area]..........................................................................
 92.75%   92.95%  <generated code>
  4.22%    4.30%  <native code in ([unknown])>
  1.82%    1.58%  <native code in (libjvm.so)>
  0.78%    0.87%  <native code in (libc-2.21.so)>
  0.27%    0.15%  <native code in (hsdis-amd64.so)>
  0.11%    0.13%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libzip.so)>
  0.02%           <native code in (perf-15106.map)>
  0.02%           <native code in (ld-2.21.so)>
....................................................................................................
100.00%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkIntArrayCopy.benchmarkArraySystemArraycopy_Overlap
# Parameters: (arraySizeInKb = 10)

# Run progress: 33.33% complete, ETA 00:03:15
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4805100.663 ops/s
# Warmup Iteration   2: 4909643.519 ops/s
# Warmup Iteration   3: 4747864.387 ops/s
Iteration   1: 4919432.888 ops/s
Iteration   2: 4987673.776 ops/s
Iteration   3: 4765852.451 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy_Overlap":
  4890986.372 ±(99.9%) 2072737.266 ops/s [Average]
  (min, avg, max) = (4765852.451, 4890986.372, 4987673.776), stdev = 113613.724
  CI (99.9%): [2818249.106, 6963723.638] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 133928 total address lines.
Perf output processed (skipped 3.136 seconds):
 Column 1: cycles (5766 events)
 Column 2: instructions (5777 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f4261052617:0x7f4261052715] in StubRoutines::jint_disjoint_arraycopy; StubRoutines::jint_arraycopy

                             0x00007f4261052617: leaveq 
                             0x00007f4261052618: add    $0x4,%rdx
                             0x00007f426105261c: jg     Stub::jshort_arraycopy+74 0x0x7f42610525ca
                             0x00007f426105261e: xor    %rax,%rax
                             0x00007f4261052621: leaveq 
                             0x00007f4261052622: retq   
                           StubRoutines::jint_disjoint_arraycopy [0x00007f4261052640, 0x00007f42610526c4[ (132 bytes)
                             0x00007f4261052640: push   %rbp
                             0x00007f4261052641: mov    %rsp,%rbp
                         ↗↗  0x00007f4261052644: mov    %rdx,%rcx
  0.17%    0.28%         ││  0x00007f4261052647: shr    $0x1,%rdx
                         ││  0x00007f426105264b: lea    -0x8(%rdi,%rdx,8),%rdi
                         ││  0x00007f4261052650: lea    -0x8(%rsi,%rdx,8),%rsi
                         ││  0x00007f4261052655: neg    %rdx
  0.14%    0.35%  ╭      ││  0x00007f4261052658: jmpq   Stub::jint_disjoint_arraycopy+88 0x0x7f4261052698
  0.29%           │↗   ↗ ││  0x00007f426105265d: mov    0x8(%rdi,%rdx,8),%rax
                  ││   │ ││  0x00007f4261052662: mov    %rax,0x8(%rsi,%rdx,8)
  0.02%    0.03%  ││   │ ││  0x00007f4261052667: inc    %rdx
                  │╰   │ ││  0x00007f426105266a: jne    Stub::jint_disjoint_arraycopy+29 0x0x7f426105265d
                  │    │↗││  0x00007f426105266c: test   $0x1,%ecx
                  │ ╭  ││││  0x00007f4261052672: je     Stub::jint_disjoint_arraycopy+58 0x0x7f426105267a
  0.09%           │ │  ││││  0x00007f4261052674: mov    0x8(%rdi),%eax
                  │ │  ││││  0x00007f4261052677: mov    %eax,0x8(%rsi)
                  │ ↘  ││││  0x00007f426105267a: xor    %rax,%rax
                  │    ││││  0x00007f426105267d: leaveq 
  0.09%    0.42%  │    ││││  0x00007f426105267e: retq   
                  │    ││││  0x00007f426105267f: nop    
  1.27%    0.71%  │  ↗ ││││  0x00007f4261052680: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  1.56%    0.55%  │  │ ││││  0x00007f4261052686: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
  1.56%    1.61%  │  │ ││││  0x00007f426105268c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
 19.49%    4.05%  │  │ ││││  0x00007f4261052692: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
 66.20%   81.48%  ↘  │ ││││  0x00007f4261052698: add    $0x8,%rdx
                     ╰ ││││  0x00007f426105269c: jle    Stub::jint_disjoint_arraycopy+64 0x0x7f4261052680
                       ││││  0x00007f426105269e: sub    $0x4,%rdx
                      ╭││││  0x00007f42610526a2: jg     Stub::jint_disjoint_arraycopy+116 0x0x7f42610526b4
                      │││││  0x00007f42610526a4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
           0.02%      │││││  0x00007f42610526aa: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
  0.17%    0.02%      │││││  0x00007f42610526b0: add    $0x4,%rdx
                      ↘││││  0x00007f42610526b4: (bad)  
                       ││││  0x00007f42610526b7: rol    $0xf5,%ch
                       ││││  0x00007f42610526ba: out    %eax,(%dx)
                       ││││  0x00007f42610526bb: leaveq 
                       ││││  0x00007f42610526bc: sub    $0x4,%rdx
  0.23%    0.02%       ╰│││  0x00007f42610526c0: jl     Stub::jint_disjoint_arraycopy+29 0x0x7f426105265d
                        ╰││  0x00007f42610526c2: jmp    Stub::jint_disjoint_arraycopy+44 0x0x7f426105266c
                         ││StubRoutines::jint_arraycopy [0x00007f42610526e0, 0x00007f4261052773[ (147 bytes)
  0.10%    0.43%         ││  0x00007f42610526e0: push   %rbp
                         ││  0x00007f42610526e1: mov    %rsp,%rbp
                         ││  0x00007f42610526e4: cmp    %rdi,%rsi
  0.10%    0.31%         ││  0x00007f42610526e7: lea    (%rdi,%rdx,4),%rax
                         ╰│  0x00007f42610526eb: jbe    Stub::jint_disjoint_arraycopy+4 0x0x7f4261052644
                          │  0x00007f42610526f1: cmp    %rax,%rsi
                          ╰  0x00007f42610526f4: jae    Stub::jint_disjoint_arraycopy+4 0x0x7f4261052644
                             0x00007f42610526fa: mov    %rdx,%rcx
                             0x00007f42610526fd: shr    $0x1,%rdx
                             0x00007f4261052701: test   $0x1,%ecx
                             0x00007f4261052707: je     Stub::jint_arraycopy+102 0x0x7f4261052746
                             0x00007f426105270d: mov    -0x4(%rdi,%rcx,4),%eax
                             0x00007f4261052711: mov    %eax,-0x4(%rsi,%rcx,4)
                             0x00007f4261052715: jmpq   Stub::jint_arraycopy+102 0x0x7f4261052746
....................................................................................................
 91.48%   90.27%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.48%   90.27%  [0x7f4261052617:0x7f4261052715] in StubRoutines::jint_disjoint_arraycopy; StubRoutines::jint_arraycopy
  2.45%    2.41%  [0xffffffff810603fa:0xffffffff810603fd] in [unknown] ([unknown])
  1.75%    2.37%  [0x7f42611f5d28:0x7f42611f5db4] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.33%    0.62%  [0x7f42611f7ae5:0x7f42611f7b6f] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.17%    0.14%  [0xffffffff810dd298:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.14%           [0xffffffff817f1c10:0xffffffff817f1c37] in [unknown] ([unknown])
  0.14%    0.12%  [0x7f42611ee6f3:0x7f42611ee732] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.10%    0.16%  [0x7f427600c230:0x7f427600c25c] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.02%  [0xffffffff811ffef0:0xffffffff811fff0b] in [unknown] ([unknown])
  0.07%    0.05%  [0xffffffff8121abd8:0xffffffff8121ac0c] in [unknown] ([unknown])
  0.07%    0.09%  [0xffffffff813d3035:0xffffffff813d3037] in [unknown] ([unknown])
  0.07%    0.03%  [0xffffffff817efb49:0xffffffff817efb49] in [unknown] ([unknown])
  0.05%    0.07%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.05%    0.03%  [0x7f4260984290:0x7f4260984292] in oappend (hsdis-amd64.so)
  0.05%    0.03%  [0x7f4275fbafec:0x7f4275fbb005] in _ZN7Monitor6unlockEv (libjvm.so)
  0.05%           [0x7f4276009598:0x7f4276009598] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%           [0x7f427600ad20:0x7f427600ad37] in _ZN12outputStream12do_vsnprintfEPcmPKcP13__va_list_tagbRm (libjvm.so)
  0.03%           [0xffffffff810bd029:0xffffffff810bd044] in [unknown] ([unknown])
  0.03%    0.02%  [0xffffffff810ed82f:0xffffffff810ed849] in [unknown] ([unknown])
  0.03%    0.03%  [0xffffffff811fcfef:0xffffffff811fd020] in [unknown] ([unknown])
  2.79%    3.51%  <...other 265 warm regions...>
....................................................................................................
100.00%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.48%   90.27%  StubRoutines::jint_disjoint_arraycopy; StubRoutines::jint_arraycopy
  4.25%    4.43%  [unknown] ([unknown])
  2.25%    3.20%  net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.23%    0.26%  vfprintf (libc-2.21.so)
  0.10%    0.16%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.10%    0.07%  print_insn (hsdis-amd64.so)
  0.09%    0.09%  _IO_fwrite (libc-2.21.so)
  0.09%           _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.03%  _ZN7Monitor6unlockEv (libjvm.so)
  0.05%           _ZN12outputStream12do_vsnprintfEPcmPKcP13__va_list_tagbRm (libjvm.so)
  0.05%    0.03%  oappend (hsdis-amd64.so)
  0.03%    0.02%  _IO_fflush (libc-2.21.so)
  0.03%    0.02%  __pthread_disable_asynccancel (libpthread-2.21.so)
  0.03%    0.07%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.03%           __strchrnul (libc-2.21.so)
  0.03%    0.10%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.03%    0.02%  _IO_old_init (libc-2.21.so)
  0.03%    0.02%  <stub: method entry point (kind = zerolocals)>
  0.02%    0.02%  _ZN12stringStream5writeEPKcm (libjvm.so)
  0.02%           [unknown] (perf-15165.map)
  0.97%    0.42%  <...other 56 warm methods...>
....................................................................................................
100.00%   99.22%  <totals>

....[Distribution by Area]..........................................................................
 93.93%   93.58%  <generated code>
  4.25%    4.43%  <native code in ([unknown])>
  0.94%    1.11%  <native code in (libjvm.so)>
  0.55%    0.66%  <native code in (libc-2.21.so)>
  0.23%    0.10%  <native code in (hsdis-amd64.so)>
  0.09%    0.09%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (perf-15165.map)>
....................................................................................................
100.00%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkIntArrayCopy.benchmarkArrayUnsafeCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 36.67% complete, ETA 00:03:05
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4869333.093 ops/s
# Warmup Iteration   2: 4542274.716 ops/s
# Warmup Iteration   3: 4855340.139 ops/s
Iteration   1: 4943994.802 ops/s
Iteration   2: 4691281.019 ops/s
Iteration   3: 4846093.850 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayUnsafeCopy":
  4827123.223 ±(99.9%) 2324623.813 ops/s [Average]
  (min, avg, max) = (4691281.019, 4827123.223, 4943994.802), stdev = 127420.475
  CI (99.9%): [2502499.410, 7151747.037] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 131916 total address lines.
Perf output processed (skipped 3.130 seconds):
 Column 1: cycles (5515 events)
 Column 2: instructions (5598 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7faa64a1e766:0x7faa64a1e833] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy

                            0x00007faa64a1e766: out    %eax,(%dx)
                            0x00007faa64a1e767: leaveq 
                            0x00007faa64a1e768: add    $0x4,%rdx
                            0x00007faa64a1e76c: jg     Stub::jint_arraycopy+58 0x0x7faa64a1e71a
                            0x00007faa64a1e76e: xor    %rax,%rax
                            0x00007faa64a1e771: leaveq 
                            0x00007faa64a1e772: retq   
                          StubRoutines::jlong_disjoint_arraycopy [0x00007faa64a1e780, 0x00007faa64a1e7f7[ (119 bytes)
                            0x00007faa64a1e780: push   %rbp
                            0x00007faa64a1e781: mov    %rsp,%rbp
  0.05%    0.05%       ↗↗   0x00007faa64a1e784: lea    -0x8(%rdi,%rdx,8),%rdi
                       ││   0x00007faa64a1e789: lea    -0x8(%rsi,%rdx,8),%rcx
                       ││   0x00007faa64a1e78e: neg    %rdx
  0.05%    0.30%  ╭    ││   0x00007faa64a1e791: jmpq   Stub::jlong_disjoint_arraycopy+72 0x0x7faa64a1e7c8
                  │↗  ↗││   0x00007faa64a1e796: mov    0x8(%rdi,%rdx,8),%rax
                  ││  │││   0x00007faa64a1e79b: mov    %rax,0x8(%rcx,%rdx,8)
                  ││  │││   0x00007faa64a1e7a0: inc    %rdx
                  │╰  │││   0x00007faa64a1e7a3: jne    Stub::jlong_disjoint_arraycopy+22 0x0x7faa64a1e796
                  │   │││   0x00007faa64a1e7a5: xor    %rax,%rax
                  │   │││   0x00007faa64a1e7a8: leaveq 
                  │   │││   0x00007faa64a1e7a9: retq   
                  │   │││   0x00007faa64a1e7aa: nopw   0x0(%rax,%rax,1)
  3.08%    1.38%  │ ↗ │││   0x00007faa64a1e7b0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 18.26%    9.93%  │ │ │││   0x00007faa64a1e7b6: vmovdqu %ymm0,-0x38(%rcx,%rdx,8)
  4.50%    2.43%  │ │ │││   0x00007faa64a1e7bc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
 13.73%    9.79%  │ │ │││   0x00007faa64a1e7c2: vmovdqu %ymm1,-0x18(%rcx,%rdx,8)
 53.18%   66.97%  ↘ │ │││   0x00007faa64a1e7c8: add    $0x8,%rdx
                    ╰ │││   0x00007faa64a1e7cc: jle    Stub::jlong_disjoint_arraycopy+48 0x0x7faa64a1e7b0
  0.04%               │││   0x00007faa64a1e7ce: sub    $0x4,%rdx
                     ╭│││   0x00007faa64a1e7d2: jg     Stub::jlong_disjoint_arraycopy+100 0x0x7faa64a1e7e4
                     ││││   0x00007faa64a1e7d4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                     ││││   0x00007faa64a1e7da: vmovdqu %ymm0,-0x18(%rcx,%rdx,8)
                     ││││   0x00007faa64a1e7e0: add    $0x4,%rdx
           0.05%     ↘│││   0x00007faa64a1e7e4: (bad)  
                      │││   0x00007faa64a1e7e7: rol    $0xf5,%ch
                      │││   0x00007faa64a1e7ea: out    %eax,(%dx)
                      │││   0x00007faa64a1e7eb: leaveq 
  0.15%    0.14%      │││   0x00007faa64a1e7ec: sub    $0x4,%rdx
                      ╰││   0x00007faa64a1e7f0: jl     Stub::jlong_disjoint_arraycopy+22 0x0x7faa64a1e796
  0.04%                ││   0x00007faa64a1e7f2: xor    %rax,%rax
                       ││   0x00007faa64a1e7f5: leaveq 
  0.16%    0.09%       ││   0x00007faa64a1e7f6: retq   
                       ││ StubRoutines::jlong_arraycopy [0x00007faa64a1e800, 0x00007faa64a1e883[ (131 bytes)
                       ││   0x00007faa64a1e800: push   %rbp
                       ││   0x00007faa64a1e801: mov    %rsp,%rbp
           0.04%       ││   0x00007faa64a1e804: cmp    %rdi,%rsi
                       ││   0x00007faa64a1e807: lea    (%rdi,%rdx,8),%rax
                       ╰│   0x00007faa64a1e80b: jbe    Stub::jlong_disjoint_arraycopy+4 0x0x7faa64a1e784
  0.09%    0.27%        │   0x00007faa64a1e811: cmp    %rax,%rsi
                        ╰   0x00007faa64a1e814: jae    Stub::jlong_disjoint_arraycopy+4 0x0x7faa64a1e784
                            0x00007faa64a1e81a: jmpq   Stub::jlong_arraycopy+86 0x0x7faa64a1e856
                         ↗  0x00007faa64a1e81f: mov    -0x8(%rdi,%rdx,8),%rax
                         │  0x00007faa64a1e824: mov    %rax,-0x8(%rsi,%rdx,8)
                         │  0x00007faa64a1e829: dec    %rdx
                         ╰  0x00007faa64a1e82c: jne    Stub::jlong_arraycopy+31 0x0x7faa64a1e81f
                            0x00007faa64a1e82e: xor    %rax,%rax
                            0x00007faa64a1e831: leaveq 
                            0x00007faa64a1e832: retq   
                            0x00007faa64a1e833: nopw   0x0(%rax,%rax,1)
....................................................................................................
 93.33%   91.44%  <total for region 1>

....[Hottest Regions]...............................................................................
 93.33%   91.44%  [0x7faa64a1e766:0x7faa64a1e833] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  0.91%    0.84%  [0xffffffff810603e1:0xffffffff810603fa] in [unknown] ([unknown])
  0.63%    0.66%  [0x7faa795f5cd5:0x7faa795f5cf6] in acl_CopyRight (libjvm.so)
  0.58%    1.61%  [0x7faa64bbed2d:0x7faa64bbed9e] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.36%    0.89%  [0x7faa64a1ed71:0x7faa64a1edcd] in StubRoutines::unsafe_arraycopy
  0.18%    0.46%  [0x7faa64bbe740:0x7faa64bbe7a7] in net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.16%    0.11%  [0x7faa7972723a:0x7faa7972723e] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.11%    0.05%  [0xffffffff810dd2ae:0xffffffff810dd2cc] in [unknown] ([unknown])
  0.09%    0.09%  [0xffffffff8121abec:0xffffffff8121ac06] in [unknown] ([unknown])
  0.09%    0.05%  [0xffffffff817efbcd:0xffffffff817efbd0] in [unknown] ([unknown])
  0.07%           [0xffffffff817f1c10:0xffffffff817f1c47] in [unknown] ([unknown])
  0.07%    0.23%  [0x7faa64a1edb0:0x7faa64a1edf0] in StubRoutines::unsafe_arraycopy
  0.07%           [0x7faa796d6000:0x7faa796d6005] in _ZN7Monitor6unlockEv (libjvm.so)
  0.05%           [0xffffffff817f1a0b:0xffffffff817f1a26] in [unknown] ([unknown])
  0.05%    0.04%  [0x7faa79e4db74:0x7faa79e4db74] in _IO_fwrite (libc-2.21.so)
  0.04%           [0xffffffff810c3b87:0xffffffff810c3b87] in [unknown] ([unknown])
  0.04%           [0xffffffff810c412b:0xffffffff810c412b] in [unknown] ([unknown])
  0.04%    0.11%  [0xffffffff811ff4ba:0xffffffff811ff4ba] in [unknown] ([unknown])
  0.04%           [0xffffffff81232910:0xffffffff81232910] in [unknown] ([unknown])
  0.04%    0.02%  [0xffffffff81286e41:0xffffffff81286e63] in [unknown] ([unknown])
  3.05%    3.38%  <...other 253 warm regions...>
....................................................................................................
100.00%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.33%   91.44%  StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  2.52%    2.39%  [unknown] ([unknown])
  0.80%    2.14%  net.greypanther.generated.BenchmarkIntArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.63%    0.66%  acl_CopyRight (libjvm.so)
  0.44%    1.13%  StubRoutines::unsafe_arraycopy
  0.18%    0.13%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.09%           _ZN7Monitor6unlockEv (libjvm.so)
  0.09%    0.07%  _IO_fwrite (libc-2.21.so)
  0.07%    0.29%  vfprintf (libc-2.21.so)
  0.05%    0.02%  jio_print (libjvm.so)
  0.05%    0.02%  _ZN13defaultStream4holdEl (libjvm.so)
  0.05%    0.05%  _IO_vsnprintf (libc-2.21.so)
  0.05%    0.07%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%           _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.05%           <stub: method entry point (kind = zerolocals)>
  0.05%    0.04%  _ZN12outputStream5printEPKcz (libjvm.so)
  0.04%    0.02%  __strncpy_sse2_unaligned (libc-2.21.so)
  0.04%    0.04%  _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.04%           [unknown] (libpthread-2.21.so)
  0.04%           _Z23resource_allocate_bytesmN17AllocFailStrategy13AllocFailEnumE (libjvm.so)
  1.32%    0.82%  <...other 64 warm methods...>
....................................................................................................
100.00%   99.32%  <totals>

....[Distribution by Area]..........................................................................
 94.76%   94.73%  <generated code>
  2.52%    2.39%  <native code in ([unknown])>
  1.98%    1.79%  <native code in (libjvm.so)>
  0.56%    0.88%  <native code in (libc-2.21.so)>
  0.11%    0.11%  <native code in (libpthread-2.21.so)>
  0.07%    0.09%  <native code in (hsdis-amd64.so)>
....................................................................................................
100.00%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkLongArrayCopy.benchmarkArrayManualCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 40.00% complete, ETA 00:02:55
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6881888.060 ops/s
# Warmup Iteration   2: 6670404.269 ops/s
# Warmup Iteration   3: 6941440.936 ops/s
Iteration   1: 7053152.815 ops/s
Iteration   2: 6696181.730 ops/s
Iteration   3: 6911284.829 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy":
  6886873.125 ±(99.9%) 3279003.376 ops/s [Average]
  (min, avg, max) = (6696181.730, 6886873.125, 7053152.815), stdev = 179733.240
  CI (99.9%): [3607869.748, 10165876.501] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 131980 total address lines.
Perf output processed (skipped 3.127 seconds):
 Column 1: cycles (5701 events)
 Column 2: instructions (5713 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7feb8cbbe73f:0x7feb8cbbe858] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

                                                                             ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@40 (line 108)
                               0x00007feb8cbbe73f: vzeroupper 
                               0x00007feb8cbbe742: add    $0x30,%rsp
                               0x00007feb8cbbe746: pop    %rbp
                               0x00007feb8cbbe747: test   %eax,0x15e678b3(%rip)        # 0x00007feba2a26000
                                                                             ;   {poll_return}
                               0x00007feb8cbbe74d: retq   
                               0x00007feb8cbbe74e: xchg   %ax,%ax            ;*aload_0
                                                                             ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                                                                             ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%    0.11%  ↗        ↗   0x00007feb8cbbe750: mov    0x10(%rdi,%r11,8),%r8
  0.82%    0.98%  │        │   0x00007feb8cbbe755: mov    %r8,0x10(%rsi,%r11,8)  ;*lastore
                  │        │                                                 ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  1.05%    1.00%  │        │   0x00007feb8cbbe75a: inc    %r11d              ;*iinc
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │        │   0x00007feb8cbbe75d: cmp    %edx,%r11d
                  ╰        │   0x00007feb8cbbe760: jl     0x00007feb8cbbe750  ;*invokevirtual benchmarkArrayManualCopy
                           │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.02%            ↗       │↗  0x00007feb8cbbe762: movzbl 0x94(%rax),%r11d   ;*getfield isDone
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@24 (line 106)
  0.05%            │       ││  0x00007feb8cbbe76a: add    $0x1,%rbp          ; OopMap{r9=Oop rbx=Oop rax=Oop off=398}
                   │       ││                                                ;*ifeq
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@27 (line 106)
  0.07%    0.18%   │       ││  0x00007feb8cbbe76e: test   %eax,0x15e6788c(%rip)        # 0x00007feba2a26000
                   │       ││                                                ;   {poll}
  0.19%    0.26%   │       ││  0x00007feb8cbbe774: test   %r11d,%r11d
                   │       ││  0x00007feb8cbbe777: jne    0x00007feb8cbbe723  ;*aload_3
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@13 (line 104)
                   │       ││  0x00007feb8cbbe779: mov    0x20(%r9),%edx     ;*getfield itemCount
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@4 (line 69)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   │       ││  0x00007feb8cbbe77d: test   %edx,%edx
                   ╰       ││  0x00007feb8cbbe77f: jle    0x00007feb8cbbe762  ;*if_icmpge
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                           ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%                    ││  0x00007feb8cbbe781: mov    0x28(%r9),%r8d     ;*getfield longSource
                           ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@6 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                           ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.05%    0.33%           ││  0x00007feb8cbbe785: mov    0xc(%r12,%r8,8),%edi  ;*laload
                           ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                           ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                           ││                                                ; implicit exception: dispatches to 0x00007feb8cbbe844
  1.46%    0.95%           ││  0x00007feb8cbbe78a: test   %edi,%edi
                    ╭      ││  0x00007feb8cbbe78c: jbe    0x00007feb8cbbe844
  0.16%    0.07%    │      ││  0x00007feb8cbbe792: mov    %edx,%r11d
                    │      ││  0x00007feb8cbbe795: dec    %r11d
                    │      ││  0x00007feb8cbbe798: cmp    %edi,%r11d
                    │╭     ││  0x00007feb8cbbe79b: jae    0x00007feb8cbbe844  ;*aload_0
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.12%    0.04%    ││     ││  0x00007feb8cbbe7a1: mov    0x2c(%r9),%ecx     ;*getfield longTarget
                    ││     ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@1 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││     ││  0x00007feb8cbbe7a5: mov    0xc(%r12,%rcx,8),%edi  ;*lastore
                    ││     ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││     ││                                                ; implicit exception: dispatches to 0x00007feb8cbbe844
                    ││     ││  0x00007feb8cbbe7aa: test   %edi,%edi
                    ││╭    ││  0x00007feb8cbbe7ac: jbe    0x00007feb8cbbe844
  0.04%    0.05%    │││    ││  0x00007feb8cbbe7b2: cmp    %edi,%r11d
                    │││╭   ││  0x00007feb8cbbe7b5: jae    0x00007feb8cbbe844
  0.07%    0.23%    ││││   ││  0x00007feb8cbbe7bb: lea    (%r12,%r8,8),%rdi
                    ││││   ││  0x00007feb8cbbe7bf: lea    (%r12,%rcx,8),%rsi
                    ││││   ││  0x00007feb8cbbe7c3: mov    %esi,%r8d
  0.11%    0.02%    ││││   ││  0x00007feb8cbbe7c6: shr    $0x3,%r8d
  0.16%    0.02%    ││││   ││  0x00007feb8cbbe7ca: and    $0x3,%r8d
                    ││││   ││  0x00007feb8cbbe7ce: mov    $0x1,%ecx
                    ││││   ││  0x00007feb8cbbe7d3: sub    %r8d,%ecx
  0.02%             ││││   ││  0x00007feb8cbbe7d6: and    $0x3,%ecx
  0.11%    0.19%    ││││   ││  0x00007feb8cbbe7d9: inc    %ecx
                    ││││   ││  0x00007feb8cbbe7db: cmp    %edx,%ecx
                    ││││   ││  0x00007feb8cbbe7dd: cmovg  %edx,%ecx
  0.21%    0.09%    ││││   ││  0x00007feb8cbbe7e0: xor    %r11d,%r11d        ;*aload_0
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││││↗  ││  0x00007feb8cbbe7e3: mov    0x10(%rdi,%r11,8),%r8
  0.05%    0.07%    │││││  ││  0x00007feb8cbbe7e8: mov    %r8,0x10(%rsi,%r11,8)  ;*lastore
                    │││││  ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.14%    0.11%    │││││  ││  0x00007feb8cbbe7ed: inc    %r11d              ;*iinc
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.46%    0.28%    │││││  ││  0x00007feb8cbbe7f0: cmp    %ecx,%r11d
                    ││││╰  ││  0x00007feb8cbbe7f3: jl     0x00007feb8cbbe7e3  ;*if_icmpge
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││││   ││  0x00007feb8cbbe7f5: mov    %edx,%r8d
                    ││││   ││  0x00007feb8cbbe7f8: add    $0xfffffffffffffff9,%r8d
  0.04%    0.04%    ││││   ││  0x00007feb8cbbe7fc: cmp    %r8d,%edx
  0.09%             ││││   ││  0x00007feb8cbbe7ff: cmovl  %r10d,%r8d
           0.02%    ││││   ││  0x00007feb8cbbe803: cmp    %r8d,%r11d
                    ││││ ╭ ││  0x00007feb8cbbe806: jge    0x00007feb8cbbe836
                    ││││ │ ││  0x00007feb8cbbe808: nopl   0x0(%rax,%rax,1)   ;*aload_0
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  4.63%    5.20%    ││││ │↗││  0x00007feb8cbbe810: vmovdqu 0x10(%rdi,%r11,8),%ymm0
  4.67%    5.41%    ││││ ││││  0x00007feb8cbbe817: movslq %r11d,%rcx
  9.86%   11.66%    ││││ ││││  0x00007feb8cbbe81a: vmovdqu 0x30(%rdi,%rcx,8),%ymm1  ;*laload
                    ││││ ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 19.19%   13.53%    ││││ ││││  0x00007feb8cbbe820: vmovdqu %ymm0,0x10(%rsi,%r11,8)
  5.67%    5.74%    ││││ ││││  0x00007feb8cbbe827: vmovdqu %ymm1,0x30(%rsi,%rcx,8)  ;*lastore
                    ││││ ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 14.59%   16.86%    ││││ ││││  0x00007feb8cbbe82d: add    $0x8,%r11d         ;*iinc
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  5.74%    6.18%    ││││ ││││  0x00007feb8cbbe831: cmp    %r8d,%r11d
                    ││││ │╰││  0x00007feb8cbbe834: jl     0x00007feb8cbbe810  ;*if_icmpge
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%    ││││ ↘ ││  0x00007feb8cbbe836: cmp    %edx,%r11d
                    ││││   ╰│  0x00007feb8cbbe839: jl     0x00007feb8cbbe750
                    ││││    ╰  0x00007feb8cbbe83f: jmpq   0x00007feb8cbbe762
                    ↘↘↘↘       0x00007feb8cbbe844: mov    $0xffffff86,%esi
                               0x00007feb8cbbe849: mov    %rax,(%rsp)
                               0x00007feb8cbbe84d: mov    %rbx,0x8(%rsp)
                               0x00007feb8cbbe852: mov    %r9,0x18(%rsp)
                               0x00007feb8cbbe857: nop    
                               0x00007feb8cbbe858: vzeroupper 
....................................................................................................
 69.94%   69.60%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7feb8cbbf068:0x7feb8cbbf186] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

                             0x00007feb8cbbf068: cmp    $0xf8010f91,%r11d  ;   {metadata(&apos;net/greypanther/generated/BenchmarkLongArrayCopy_jmhType&apos;)}
                             0x00007feb8cbbf06f: jne    0x00007feb8cbbf211
                             0x00007feb8cbbf075: test   %rdx,%rdx
                             0x00007feb8cbbf078: je     0x00007feb8cbbf1ee  ;*aload_3
                                                                           ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@13 (line 104)
                             0x00007feb8cbbf07e: mov    $0x80000000,%r10d
                  ╭          0x00007feb8cbbf084: jmp    0x00007feb8cbbf0b4
                  │          0x00007feb8cbbf086: xchg   %ax,%ax            ;*aload_0
                  │                                                        ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                  │                                                        ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.04%    0.04%  │↗     ↗   0x00007feb8cbbf088: mov    0x10(%rsi,%rcx,8),%r8
  0.11%    0.21%  ││     │   0x00007feb8cbbf08d: mov    %r8,0x10(%rdi,%rcx,8)  ;*lastore
                  ││     │                                                 ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                  ││     │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  ││     │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.14%    0.25%  ││     │   0x00007feb8cbbf092: inc    %ecx               ;*iinc
                  ││     │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  ││     │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  ││     │   0x00007feb8cbbf094: cmp    %r11d,%ecx
                  │╰     │   0x00007feb8cbbf097: jl     0x00007feb8cbbf088  ;*invokevirtual benchmarkArrayManualCopy
                  │      │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │  ↗   │↗  0x00007feb8cbbf099: movzbl 0x94(%rdx),%r11d   ;*getfield isDone
                  │  │   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@24 (line 106)
  0.05%    0.04%  │  │   ││  0x00007feb8cbbf0a1: add    $0x1,%rbx          ; OopMap{rdx=Oop r13=Oop r14=Oop off=197}
                  │  │   ││                                                ;*ifeq
                  │  │   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@27 (line 106)
                  │  │   ││  0x00007feb8cbbf0a5: test   %eax,0x15e66f55(%rip)        # 0x00007feba2a26000
                  │  │   ││                                                ;   {poll}
           0.02%  │  │   ││  0x00007feb8cbbf0ab: test   %r11d,%r11d
                  │ ╭│   ││  0x00007feb8cbbf0ae: jne    0x00007feb8cbbf183  ;*aload_3
                  │ ││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@13 (line 104)
                  ↘ ││   ││  0x00007feb8cbbf0b4: mov    0x20(%r14),%r11d   ;*getfield itemCount
                    ││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@4 (line 69)
                    ││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││   ││  0x00007feb8cbbf0b8: test   %r11d,%r11d
                    │╰   ││  0x00007feb8cbbf0bb: jle    0x00007feb8cbbf099  ;*if_icmpge
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    │    ││  0x00007feb8cbbf0bd: mov    0x28(%r14),%r9d    ;*getfield longSource
                    │    ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@6 (line 31)
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    │    ││  0x00007feb8cbbf0c1: mov    0xc(%r12,%r9,8),%edi  ;*laload
                    │    ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    │    ││                                                ; implicit exception: dispatches to 0x00007feb8cbbf1b3
  0.30%    0.37%    │    ││  0x00007feb8cbbf0c6: test   %edi,%edi
                    │    ││  0x00007feb8cbbf0c8: jbe    0x00007feb8cbbf1b3
  0.05%    0.04%    │    ││  0x00007feb8cbbf0ce: mov    %r11d,%r8d
                    │    ││  0x00007feb8cbbf0d1: dec    %r8d
                    │    ││  0x00007feb8cbbf0d4: cmp    %edi,%r8d
                    │    ││  0x00007feb8cbbf0d7: jae    0x00007feb8cbbf1b3  ;*aload_0
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.09%    0.05%    │    ││  0x00007feb8cbbf0dd: mov    0x2c(%r14),%edi    ;*getfield longTarget
                    │    ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@1 (line 31)
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    │    ││  0x00007feb8cbbf0e1: mov    0xc(%r12,%rdi,8),%ecx  ;*lastore
                    │    ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    │    ││                                                ; implicit exception: dispatches to 0x00007feb8cbbf1b3
                    │    ││  0x00007feb8cbbf0e6: test   %ecx,%ecx
                    │    ││  0x00007feb8cbbf0e8: jbe    0x00007feb8cbbf1b3
                    │    ││  0x00007feb8cbbf0ee: cmp    %ecx,%r8d
                    │    ││  0x00007feb8cbbf0f1: jae    0x00007feb8cbbf1b3
           0.02%    │    ││  0x00007feb8cbbf0f7: shl    $0x3,%rdi
                    │    ││  0x00007feb8cbbf0fb: lea    (%r12,%r9,8),%rsi
                    │    ││  0x00007feb8cbbf0ff: mov    %edi,%r8d
  0.02%             │    ││  0x00007feb8cbbf102: shr    $0x3,%r8d
  0.04%    0.05%    │    ││  0x00007feb8cbbf106: and    $0x3,%r8d
                    │    ││  0x00007feb8cbbf10a: mov    $0x1,%r9d
                    │    ││  0x00007feb8cbbf110: sub    %r8d,%r9d
  0.02%             │    ││  0x00007feb8cbbf113: and    $0x3,%r9d
  0.04%    0.12%    │    ││  0x00007feb8cbbf117: inc    %r9d
                    │    ││  0x00007feb8cbbf11a: cmp    %r11d,%r9d
                    │    ││  0x00007feb8cbbf11d: cmovg  %r11d,%r9d
  0.05%    0.02%    │    ││  0x00007feb8cbbf121: xor    %ecx,%ecx          ;*aload_0
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    │ ↗  ││  0x00007feb8cbbf123: mov    0x10(%rsi,%rcx,8),%r8
                    │ │  ││  0x00007feb8cbbf128: mov    %r8,0x10(%rdi,%rcx,8)  ;*lastore
                    │ │  ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    │ │  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │ │  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.02%             │ │  ││  0x00007feb8cbbf12d: inc    %ecx               ;*iinc
                    │ │  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                    │ │  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.16%    0.04%    │ │  ││  0x00007feb8cbbf12f: cmp    %r9d,%ecx
                    │ ╰  ││  0x00007feb8cbbf132: jl     0x00007feb8cbbf123  ;*if_icmpge
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    │    ││  0x00007feb8cbbf134: mov    %r11d,%r9d
                    │    ││  0x00007feb8cbbf137: add    $0xfffffffffffffff9,%r9d
                    │    ││  0x00007feb8cbbf13b: cmp    %r9d,%r11d
  0.04%             │    ││  0x00007feb8cbbf13e: cmovl  %r10d,%r9d
                    │    ││  0x00007feb8cbbf142: cmp    %r9d,%ecx
                    │  ╭ ││  0x00007feb8cbbf145: jge    0x00007feb8cbbf175
           0.02%    │  │ ││  0x00007feb8cbbf147: nopw   0x0(%rax,%rax,1)   ;*aload_0
                    │  │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    │  │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  1.16%    1.17%    │  │↗││  0x00007feb8cbbf150: vmovdqu 0x10(%rsi,%rcx,8),%ymm0
  1.26%    1.23%    │  ││││  0x00007feb8cbbf156: movslq %ecx,%r8
  2.05%    2.75%    │  ││││  0x00007feb8cbbf159: vmovdqu 0x30(%rsi,%r8,8),%ymm1  ;*laload
                    │  ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                    │  ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │  ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  4.95%    3.33%    │  ││││  0x00007feb8cbbf160: vmovdqu %ymm0,0x10(%rdi,%rcx,8)
  1.39%    1.45%    │  ││││  0x00007feb8cbbf166: vmovdqu %ymm1,0x30(%rdi,%r8,8)  ;*lastore
                    │  ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    │  ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │  ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  3.79%    4.03%    │  ││││  0x00007feb8cbbf16d: add    $0x8,%ecx          ;*iinc
                    │  ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                    │  ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  1.39%    1.82%    │  ││││  0x00007feb8cbbf170: cmp    %r9d,%ecx
                    │  │╰││  0x00007feb8cbbf173: jl     0x00007feb8cbbf150  ;*if_icmpge
                    │  │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                    │  │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    │  ↘ ││  0x00007feb8cbbf175: cmp    %r11d,%ecx
                    │    ╰│  0x00007feb8cbbf178: jl     0x00007feb8cbbf088
                    │     ╰  0x00007feb8cbbf17e: jmpq   0x00007feb8cbbf099
                    ↘        0x00007feb8cbbf183: vzeroupper 
                             0x00007feb8cbbf186: mov    $0x7feba173ae10,%r10
....................................................................................................
 17.12%   17.03%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.94%   69.60%  [0x7feb8cbbe73f:0x7feb8cbbe858] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
 17.12%   17.03%  [0x7feb8cbbf068:0x7feb8cbbf186] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  6.70%    7.56%  [0x7feb8cbb3572:0x7feb8cbb3688] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  0.84%    0.81%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.63%    0.72%  [0xffffffff811aa500:0xffffffff811aa525] in [unknown] ([unknown])
  0.35%    0.35%  [0x7feb8cbb67cd:0x7feb8cbb6815] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.14%    0.11%  [0xffffffff810dd298:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.11%    0.07%  [0xffffffff811aa642:0xffffffff811aa64c] in [unknown] ([unknown])
  0.11%    0.07%  [0xffffffff817f1a0c:0xffffffff817f1a26] in [unknown] ([unknown])
  0.11%    0.07%  [0x7feba1e73a59:0x7feba1e73aa2] in _IO_fwrite (libc-2.21.so)
  0.09%    0.02%  [0xffffffff811fff0b:0xffffffff811fff0b] in [unknown] ([unknown])
  0.07%    0.09%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.07%    0.04%  [0x7feba19010c0:0x7feba19010dd] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.07%  [0xffffffff810ed829:0xffffffff810ed84f] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff817efb46:0xffffffff817efb49] in [unknown] ([unknown])
  0.05%    0.09%  [0x7feba16fb136:0x7feba16fb168] in _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.05%    0.12%  [0x7feba17c2b03:0x7feba17c2b5f] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.05%    0.04%  [0x7feba1e8f69f:0x7feba1e8f6ad] in strlen (libc-2.21.so)
  0.05%           [0x7feba1efb4ad:0x7feba1efb4ad] in __GI___libc_write (libc-2.21.so)
  0.04%           [0xffffffff810aebf6:0xffffffff810aebf9] in [unknown] ([unknown])
  3.33%    3.10%  <...other 275 warm regions...>
....................................................................................................
 99.95%   99.95%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.77%   94.19%  net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  3.88%    3.38%  [unknown] ([unknown])
  0.37%    0.37%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.12%    0.09%  _IO_fwrite (libc-2.21.so)
  0.12%    0.14%  vfprintf (libc-2.21.so)
  0.12%    0.07%  print_insn (hsdis-amd64.so)
  0.07%    0.09%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%    0.14%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.05%    0.09%  _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.05%           __GI___libc_write (libc-2.21.so)
  0.05%    0.05%  strlen (libc-2.21.so)
  0.04%    0.21%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.04%    0.04%  __strchr_sse2 (libc-2.21.so)
  0.04%    0.02%  _IO_str_init_static_internal (libc-2.21.so)
  0.04%           _ZN12methodHandleD1Ev (libjvm.so)
  0.04%    0.02%  _IO_fflush (libc-2.21.so)
  0.04%           _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ (libjvm.so)
  0.04%    0.02%  _ZN4Type3cmpEPKS_S1_ (libjvm.so)
  0.02%    0.02%  <stub: fast_aaccess_0  221 fast_aaccess_0>
  0.02%    0.05%  _IO_default_xsputn (libc-2.21.so)
  0.98%    0.30%  <...other 56 warm methods...>
....................................................................................................
 99.95%   99.26%  <totals>

....[Distribution by Area]..........................................................................
 94.21%   94.57%  <generated code>
  3.88%    3.38%  <native code in ([unknown])>
  1.00%    1.19%  <native code in (libjvm.so)>
  0.67%    0.61%  <native code in (libc-2.21.so)>
  0.16%    0.09%  <native code in (hsdis-amd64.so)>
  0.04%    0.09%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.95%   99.95%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkLongArrayCopy.benchmarkArrayManualCopy_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 43.33% complete, ETA 00:02:45
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 6375663.238 ops/s
# Warmup Iteration   2: 7033235.391 ops/s
# Warmup Iteration   3: 7153463.449 ops/s
Iteration   1: 6730211.195 ops/s
Iteration   2: 6978088.023 ops/s
Iteration   3: 7169875.038 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Dec":
  6959391.419 ±(99.9%) 4021416.651 ops/s [Average]
  (min, avg, max) = (6730211.195, 6959391.419, 7169875.038), stdev = 220427.416
  CI (99.9%): [2937974.768, 10980808.069] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 135285 total address lines.
Perf output processed (skipped 3.121 seconds):
 Column 1: cycles (5980 events)
 Column 2: instructions (5979 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f9c6d1f902a:0x7f9c6d1f9127] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                                                                             ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@40 (line 108)
                               0x00007f9c6d1f902a: vzeroupper 
                               0x00007f9c6d1f902d: add    $0x40,%rsp
                               0x00007f9c6d1f9031: pop    %rbp
                               0x00007f9c6d1f9032: test   %eax,0x17a9efc8(%rip)        # 0x00007f9c84c98000
                                                                             ;   {poll_return}
                               0x00007f9c6d1f9038: retq   
                               0x00007f9c6d1f9039: xchg   %ax,%ax            ;*aload_0
                                                                             ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                             ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.03%  ↗        ↗   0x00007f9c6d1f903c: mov    0x10(%r8,%rdi,8),%r11
  0.03%    0.03%  │        │   0x00007f9c6d1f9041: mov    %r11,0x10(%rcx,%rdi,8)  ;*lastore
                  │        │                                                 ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  1.12%    1.51%  │        │   0x00007f9c6d1f9046: dec    %edi               ;*iinc
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │        │   0x00007f9c6d1f9048: cmp    $0xffffffffffffffff,%edi
                  ╰        │   0x00007f9c6d1f904b: jg     0x00007f9c6d1f903c  ;*invokevirtual benchmarkArrayManualCopy_Dec
                           │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   ↗       │↗  0x00007f9c6d1f904d: movzbl 0x94(%rax),%r8d    ;*getfield isDone
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@24 (line 106)
                   │       ││  0x00007f9c6d1f9055: add    $0x1,%rbp          ; OopMap{r9=Oop rbx=Oop rax=Oop off=377}
                   │       ││                                                ;*ifeq
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@27 (line 106)
  0.15%    0.22%   │       ││  0x00007f9c6d1f9059: test   %eax,0x17a9efa1(%rip)        # 0x00007f9c84c98000
                   │       ││                                                ;   {poll}
  0.03%    0.03%   │       ││  0x00007f9c6d1f905f: test   %r8d,%r8d
                   │       ││  0x00007f9c6d1f9062: jne    0x00007f9c6d1f900e  ;*aload_3
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                   │       ││  0x00007f9c6d1f9064: mov    0x20(%r9),%edx     ;*getfield itemCount
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@1 (line 76)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   │       ││  0x00007f9c6d1f9068: mov    %edx,%edi
  0.13%    0.30%   │       ││  0x00007f9c6d1f906a: dec    %edi               ;*isub
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@5 (line 76)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.02%   │       ││  0x00007f9c6d1f906c: test   %edi,%edi
                   ╰       ││  0x00007f9c6d1f906e: jl     0x00007f9c6d1f904d  ;*iflt
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                           ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007f9c6d1f9070: mov    0x28(%r9),%r8d     ;*getfield longSource
                           ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@6 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                           ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007f9c6d1f9074: mov    0xc(%r12,%r8,8),%r11d  ;*laload
                           ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                           ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                           ││                                                ; implicit exception: dispatches to 0x00007f9c6d1f9110
  0.17%    0.22%           ││  0x00007f9c6d1f9079: test   %r11d,%r11d
                    ╭      ││  0x00007f9c6d1f907c: jbe    0x00007f9c6d1f9110
  0.02%             │      ││  0x00007f9c6d1f9082: cmp    %r11d,%edi
                    │╭     ││  0x00007f9c6d1f9085: jae    0x00007f9c6d1f9110  ;*aload_0
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││     ││  0x00007f9c6d1f908b: mov    0x2c(%r9),%r11d    ;*getfield longTarget
                    ││     ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@1 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││     ││  0x00007f9c6d1f908f: mov    0xc(%r12,%r11,8),%ecx  ;*lastore
                    ││     ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││     ││                                                ; implicit exception: dispatches to 0x00007f9c6d1f9110
  0.13%    0.23%    ││     ││  0x00007f9c6d1f9094: test   %ecx,%ecx
                    ││╭    ││  0x00007f9c6d1f9096: jbe    0x00007f9c6d1f9110
                    │││    ││  0x00007f9c6d1f909c: cmp    %ecx,%edi
                    │││╭   ││  0x00007f9c6d1f909e: jae    0x00007f9c6d1f9110
                    ││││   ││  0x00007f9c6d1f90a0: lea    (%r12,%r11,8),%rcx
                    ││││   ││  0x00007f9c6d1f90a4: shl    $0x3,%r8
  0.20%    0.17%    ││││   ││  0x00007f9c6d1f90a8: mov    %ecx,%r11d
                    ││││   ││  0x00007f9c6d1f90ab: shr    $0x3,%r11d
  0.02%             ││││   ││  0x00007f9c6d1f90af: and    $0x3,%r11d
                    ││││   ││  0x00007f9c6d1f90b3: add    %edx,%r11d
  0.13%    0.23%    ││││   ││  0x00007f9c6d1f90b6: add    $0xfffffffffffffff9,%r11d
                    ││││   ││  0x00007f9c6d1f90ba: and    $0x3,%r11d
                    ││││   ││  0x00007f9c6d1f90be: sub    %r11d,%edx
                    ││││   ││  0x00007f9c6d1f90c1: add    $0xfffffffffffffffe,%edx
  0.20%    0.20%    ││││   ││  0x00007f9c6d1f90c4: cmp    %r10d,%edx
                    ││││   ││  0x00007f9c6d1f90c7: cmovl  %r10d,%edx         ;*aload_0
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││││↗  ││  0x00007f9c6d1f90cb: mov    0x10(%r8,%rdi,8),%r11
  0.12%    0.25%    │││││  ││  0x00007f9c6d1f90d0: mov    %r11,0x10(%rcx,%rdi,8)  ;*lastore
                    │││││  ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │││││  ││  0x00007f9c6d1f90d5: dec    %edi               ;*iinc
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │││││  ││  0x00007f9c6d1f90d7: cmp    %edx,%edi
                    ││││╰  ││  0x00007f9c6d1f90d9: jg     0x00007f9c6d1f90cb  ;*iflt
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││││   ││  0x00007f9c6d1f90db: cmp    $0x6,%edi
                    ││││ ╭ ││  0x00007f9c6d1f90de: jle    0x00007f9c6d1f9102  ;*aload_0
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  8.39%    9.83%    ││││ │↗││  0x00007f9c6d1f90e0: vmovdqu -0x28(%r8,%rdi,8),%ymm0  ;*laload
                    ││││ ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  5.92%    6.76%    ││││ ││││  0x00007f9c6d1f90e7: vmovdqu -0x8(%r8,%rdi,8),%ymm1
 24.55%   17.28%    ││││ ││││  0x00007f9c6d1f90ee: vmovdqu %ymm1,-0x8(%rcx,%rdi,8)
  9.97%   11.74%    ││││ ││││  0x00007f9c6d1f90f4: vmovdqu %ymm0,-0x28(%rcx,%rdi,8)
                    ││││ ││││                                                ;*lastore
                    ││││ ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  5.79%    6.56%    ││││ ││││  0x00007f9c6d1f90fa: add    $0xfffffffffffffff8,%edi  ;*iinc
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  4.85%    5.49%    ││││ ││││  0x00007f9c6d1f90fd: cmp    $0x6,%edi
  4.78%    5.80%    ││││ │╰││  0x00007f9c6d1f9100: jg     0x00007f9c6d1f90e0  ;*iflt
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%             ││││ ↘ ││  0x00007f9c6d1f9102: cmp    $0xffffffffffffffff,%edi
                    ││││   ╰│  0x00007f9c6d1f9105: jg     0x00007f9c6d1f903c
                    ││││    ╰  0x00007f9c6d1f910b: jmpq   0x00007f9c6d1f904d
                    ↘↘↘↘       0x00007f9c6d1f9110: mov    $0xffffff86,%esi
                               0x00007f9c6d1f9115: mov    %rax,(%rsp)
                               0x00007f9c6d1f9119: mov    %rbx,0x8(%rsp)
                               0x00007f9c6d1f911e: mov    %r9,0x18(%rsp)
                               0x00007f9c6d1f9123: mov    %edi,0x20(%rsp)
                               0x00007f9c6d1f9127: nop    
....................................................................................................
 66.76%   66.90%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f9c6d1fae6f:0x7f9c6d1faf73] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                             0x00007f9c6d1fae6f: jne    0x00007f9c6d1fb001
                             0x00007f9c6d1fae75: test   %rdx,%rdx
                             0x00007f9c6d1fae78: je     0x00007f9c6d1fafde  ;*aload_3
                                                                           ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                             0x00007f9c6d1fae7e: mov    $0xffffffff,%r10d
                  ╭          0x00007f9c6d1fae84: jmp    0x00007f9c6d1faeb4
                  │          0x00007f9c6d1fae86: xchg   %ax,%ax            ;*aload_0
                  │                                                        ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                  │                                                        ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │↗     ↗   0x00007f9c6d1fae88: mov    0x10(%r9,%rcx,8),%r11
           0.02%  ││     │   0x00007f9c6d1fae8d: mov    %r11,0x10(%rdi,%rcx,8)  ;*lastore
                  ││     │                                                 ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                  ││     │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  ││     │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.20%    0.38%  ││     │   0x00007f9c6d1fae92: dec    %ecx               ;*iinc
                  ││     │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  ││     │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  ││     │   0x00007f9c6d1fae94: cmp    $0xffffffffffffffff,%ecx
                  │╰     │   0x00007f9c6d1fae97: jg     0x00007f9c6d1fae88  ;*invokevirtual benchmarkArrayManualCopy_Dec
                  │      │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │  ↗   │↗  0x00007f9c6d1fae99: movzbl 0x94(%rdx),%r8d    ;*getfield isDone
                  │  │   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@24 (line 106)
                  │  │   ││  0x00007f9c6d1faea1: add    $0x1,%rbx          ; OopMap{rdx=Oop r13=Oop r14=Oop off=197}
                  │  │   ││                                                ;*ifeq
                  │  │   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@27 (line 106)
  0.02%    0.03%  │  │   ││  0x00007f9c6d1faea5: test   %eax,0x17a9d155(%rip)        # 0x00007f9c84c98000
                  │  │   ││                                                ;   {poll}
           0.02%  │  │   ││  0x00007f9c6d1faeab: test   %r8d,%r8d
                  │ ╭│   ││  0x00007f9c6d1faeae: jne    0x00007f9c6d1faf70  ;*aload_3
                  │ ││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                  ↘ ││   ││  0x00007f9c6d1faeb4: mov    0x20(%r14),%r11d   ;*getfield itemCount
                    ││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@1 (line 76)
                    ││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││   ││  0x00007f9c6d1faeb8: mov    %r11d,%ecx
  0.07%    0.02%    ││   ││  0x00007f9c6d1faebb: dec    %ecx               ;*isub
                    ││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@5 (line 76)
                    ││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││   ││  0x00007f9c6d1faebd: test   %ecx,%ecx
                    │╰   ││  0x00007f9c6d1faebf: jl     0x00007f9c6d1fae99  ;*iflt
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │    ││  0x00007f9c6d1faec1: mov    0x28(%r14),%r9d    ;*getfield longSource
                    │    ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@6 (line 31)
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │    ││  0x00007f9c6d1faec5: mov    0xc(%r12,%r9,8),%edi  ;*laload
                    │    ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │    ││                                                ; implicit exception: dispatches to 0x00007f9c6d1fafa0
  0.07%    0.07%    │    ││  0x00007f9c6d1faeca: test   %edi,%edi
                    │    ││  0x00007f9c6d1faecc: jbe    0x00007f9c6d1fafa0
           0.02%    │    ││  0x00007f9c6d1faed2: cmp    %edi,%ecx
                    │    ││  0x00007f9c6d1faed4: jae    0x00007f9c6d1fafa0  ;*aload_0
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │    ││  0x00007f9c6d1faeda: mov    0x2c(%r14),%r8d    ;*getfield longTarget
                    │    ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@1 (line 31)
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │    ││  0x00007f9c6d1faede: mov    0xc(%r12,%r8,8),%edi  ;*lastore
                    │    ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │    ││                                                ; implicit exception: dispatches to 0x00007f9c6d1fafa0
           0.08%    │    ││  0x00007f9c6d1faee3: test   %edi,%edi
                    │    ││  0x00007f9c6d1faee5: jbe    0x00007f9c6d1fafa0
                    │    ││  0x00007f9c6d1faeeb: cmp    %edi,%ecx
                    │    ││  0x00007f9c6d1faeed: jae    0x00007f9c6d1fafa0
                    │    ││  0x00007f9c6d1faef3: lea    (%r12,%r8,8),%rdi
                    │    ││  0x00007f9c6d1faef7: shl    $0x3,%r9
  0.05%    0.08%    │    ││  0x00007f9c6d1faefb: mov    %edi,%r8d
  0.02%             │    ││  0x00007f9c6d1faefe: shr    $0x3,%r8d
                    │    ││  0x00007f9c6d1faf02: and    $0x3,%r8d
                    │    ││  0x00007f9c6d1faf06: add    %r11d,%r8d
           0.03%    │    ││  0x00007f9c6d1faf09: add    $0xfffffffffffffff9,%r8d
                    │    ││  0x00007f9c6d1faf0d: and    $0x3,%r8d
                    │    ││  0x00007f9c6d1faf11: sub    %r8d,%r11d
                    │    ││  0x00007f9c6d1faf14: add    $0xfffffffffffffffe,%r11d
  0.05%    0.08%    │    ││  0x00007f9c6d1faf18: cmp    %r10d,%r11d
                    │    ││  0x00007f9c6d1faf1b: cmovl  %r10d,%r11d        ;*aload_0
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │ ↗  ││  0x00007f9c6d1faf1f: mov    0x10(%r9,%rcx,8),%r8
  0.02%    0.05%    │ │  ││  0x00007f9c6d1faf24: mov    %r8,0x10(%rdi,%rcx,8)  ;*lastore
                    │ │  ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    │ │  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │ │  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │ │  ││  0x00007f9c6d1faf29: dec    %ecx               ;*iinc
                    │ │  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                    │ │  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │ │  ││  0x00007f9c6d1faf2b: cmp    %r11d,%ecx
                    │ ╰  ││  0x00007f9c6d1faf2e: jg     0x00007f9c6d1faf1f  ;*iflt
                    │    ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                    │    ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │    ││  0x00007f9c6d1faf30: cmp    $0x6,%ecx
                    │  ╭ ││  0x00007f9c6d1faf33: jle    0x00007f9c6d1faf62
  0.03%    0.03%    │  │ ││  0x00007f9c6d1faf35: nopw   0x0(%rax,%rax,1)   ;*aload_0
                    │  │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    │  │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │  │↗││  0x00007f9c6d1faf40: vmovdqu -0x28(%r9,%rcx,8),%ymm0  ;*laload
                    │  ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                    │  ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │  ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  3.18%    3.93%    │  ││││  0x00007f9c6d1faf47: vmovdqu -0x8(%r9,%rcx,8),%ymm1
  5.30%    3.19%    │  ││││  0x00007f9c6d1faf4e: vmovdqu %ymm1,-0x8(%rdi,%rcx,8)
  4.90%    6.07%    │  ││││  0x00007f9c6d1faf54: vmovdqu %ymm0,-0x28(%rdi,%rcx,8)
                    │  ││││                                                ;*lastore
                    │  ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                    │  ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │  ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.15%    0.18%    │  ││││  0x00007f9c6d1faf5a: add    $0xfffffffffffffff8,%ecx  ;*iinc
                    │  ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                    │  ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  2.34%    2.06%    │  ││││  0x00007f9c6d1faf5d: cmp    $0x6,%ecx
                    │  │╰││  0x00007f9c6d1faf60: jg     0x00007f9c6d1faf40  ;*iflt
                    │  │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                    │  │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │  ↘ ││  0x00007f9c6d1faf62: cmp    $0xffffffffffffffff,%ecx
                    │    ╰│  0x00007f9c6d1faf65: jg     0x00007f9c6d1fae88
                    │     ╰  0x00007f9c6d1faf6b: jmpq   0x00007f9c6d1fae99
                    ↘        0x00007f9c6d1faf70: vzeroupper 
                             0x00007f9c6d1faf73: mov    $0x7f9c839ace10,%r10
....................................................................................................
 16.39%   16.36%  <total for region 2>

....[Hottest Region 3]..............................................................................
 [0x7f9c6d1ef42b:0x7f9c6d1ef546] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                                0x00007f9c6d1ef42b: cmp    $0xf8010f91,%r10d  ;   {metadata(&apos;net/greypanther/generated/BenchmarkLongArrayCopy_jmhType&apos;)}
                                0x00007f9c6d1ef432: jne    0x00007f9c6d1ef5c9
                                0x00007f9c6d1ef438: test   %rdi,%rdi
                                0x00007f9c6d1ef43b: je     0x00007f9c6d1ef5a1  ;*aload_3
                                                                              ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                                0x00007f9c6d1ef441: mov    $0xffffffff,%r10d
                  ╭             0x00007f9c6d1ef447: jmp    0x00007f9c6d1ef478
                  │             0x00007f9c6d1ef449: xchg   %ax,%ax            ;*aload_0
                  │                                                           ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                  │                                                           ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.03%           │↗        ↗   0x00007f9c6d1ef44c: mov    0x10(%rsi,%rdx,8),%r11
  0.03%    0.03%  ││        │   0x00007f9c6d1ef451: mov    %r11,0x10(%r9,%rdx,8)  ;*lastore
                  ││        │                                                 ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                  ││        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  ││        │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.18%    0.40%  ││        │   0x00007f9c6d1ef456: dec    %edx               ;*iinc
                  ││        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  ││        │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  ││        │   0x00007f9c6d1ef458: cmp    $0xffffffffffffffff,%edx
                  │╰        │   0x00007f9c6d1ef45b: jg     0x00007f9c6d1ef44c  ;*invokevirtual benchmarkArrayManualCopy_Dec
                  │         │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │ ↗       │↗  0x00007f9c6d1ef45d: movzbl 0x94(%rdi),%r11d   ;*getfield isDone
                  │ │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@24 (line 106)
                  │ │       ││  0x00007f9c6d1ef465: add    $0x1,%rbx          ; OopMap{rdi=Oop rax=Oop r13=Oop off=201}
                  │ │       ││                                                ;*ifeq
                  │ │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@27 (line 106)
           0.03%  │ │       ││  0x00007f9c6d1ef469: test   %eax,0x17aa8b91(%rip)        # 0x00007f9c84c98000
                  │ │       ││                                                ;   {poll}
  0.03%    0.03%  │ │       ││  0x00007f9c6d1ef46f: test   %r11d,%r11d
                  │ │       ││  0x00007f9c6d1ef472: jne    0x00007f9c6d1ef55d  ;*aload_3
                  │ │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                  ↘ │       ││  0x00007f9c6d1ef478: mov    0x20(%r13),%r8d    ;*getfield itemCount
                    │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@1 (line 76)
                    │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │       ││  0x00007f9c6d1ef47c: mov    %r8d,%edx
                    │       ││  0x00007f9c6d1ef47f: dec    %edx               ;*isub
                    │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@5 (line 76)
                    │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    │       ││  0x00007f9c6d1ef481: test   %edx,%edx
                    ╰       ││  0x00007f9c6d1ef483: jl     0x00007f9c6d1ef45d  ;*iflt
                            ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                            ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                            ││  0x00007f9c6d1ef485: mov    0x28(%r13),%r11d   ;*getfield longSource
                            ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@6 (line 31)
                            ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                            ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                            ││  0x00007f9c6d1ef489: mov    0xc(%r12,%r11,8),%ecx  ;*laload
                            ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                            ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                            ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                            ││                                                ; implicit exception: dispatches to 0x00007f9c6d1ef530
  0.02%                     ││  0x00007f9c6d1ef48e: test   %ecx,%ecx
                     ╭      ││  0x00007f9c6d1ef490: jbe    0x00007f9c6d1ef530
                     │      ││  0x00007f9c6d1ef496: cmp    %ecx,%edx
                     │╭     ││  0x00007f9c6d1ef498: jae    0x00007f9c6d1ef530  ;*aload_0
                     ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                     ││     ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%              ││     ││  0x00007f9c6d1ef49e: mov    0x2c(%r13),%ecx    ;*getfield longTarget
                     ││     ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@1 (line 31)
                     ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     ││     ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││     ││  0x00007f9c6d1ef4a2: mov    0xc(%r12,%rcx,8),%r9d  ;*lastore
                     ││     ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                     ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     ││     ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││     ││                                                ; implicit exception: dispatches to 0x00007f9c6d1ef530
  0.03%    0.02%     ││     ││  0x00007f9c6d1ef4a7: test   %r9d,%r9d
                     ││╭    ││  0x00007f9c6d1ef4aa: jbe    0x00007f9c6d1ef530
                     │││    ││  0x00007f9c6d1ef4b0: cmp    %r9d,%edx
                     │││╭   ││  0x00007f9c6d1ef4b3: jae    0x00007f9c6d1ef530
                     ││││   ││  0x00007f9c6d1ef4b9: lea    (%r12,%r11,8),%rsi
                     ││││   ││  0x00007f9c6d1ef4bd: lea    (%r12,%rcx,8),%r9
  0.03%    0.05%     ││││   ││  0x00007f9c6d1ef4c1: mov    %r9d,%r11d
  0.02%              ││││   ││  0x00007f9c6d1ef4c4: shr    $0x3,%r11d
                     ││││   ││  0x00007f9c6d1ef4c8: and    $0x3,%r11d
                     ││││   ││  0x00007f9c6d1ef4cc: add    %r8d,%r11d
  0.03%    0.02%     ││││   ││  0x00007f9c6d1ef4cf: add    $0xfffffffffffffff9,%r11d
                     ││││   ││  0x00007f9c6d1ef4d3: and    $0x3,%r11d
                     ││││   ││  0x00007f9c6d1ef4d7: sub    %r11d,%r8d
                     ││││   ││  0x00007f9c6d1ef4da: add    $0xfffffffffffffffe,%r8d
  0.02%    0.02%     ││││   ││  0x00007f9c6d1ef4de: cmp    %r10d,%r8d
                     ││││   ││  0x00007f9c6d1ef4e1: cmovl  %r10d,%r8d         ;*aload_0
                     ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                     ││││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││││↗  ││  0x00007f9c6d1ef4e5: mov    0x10(%rsi,%rdx,8),%r11
  0.02%    0.02%     │││││  ││  0x00007f9c6d1ef4ea: mov    %r11,0x10(%r9,%rdx,8)  ;*lastore
                     │││││  ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                     │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     │││││  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     │││││  ││  0x00007f9c6d1ef4ef: dec    %edx               ;*iinc
                     │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                     │││││  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     │││││  ││  0x00007f9c6d1ef4f1: cmp    %r8d,%edx
                     ││││╰  ││  0x00007f9c6d1ef4f4: jg     0x00007f9c6d1ef4e5  ;*iflt
                     ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                     ││││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     ││││   ││  0x00007f9c6d1ef4f6: cmp    $0x6,%edx
                     ││││ ╭ ││  0x00007f9c6d1ef4f9: jle    0x00007f9c6d1ef522
           0.02%     ││││ │ ││  0x00007f9c6d1ef4fb: nopl   0x0(%rax,%rax,1)   ;*aload_0
                     ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                     ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
           0.02%     ││││ │↗││  0x00007f9c6d1ef500: vmovdqu -0x28(%rsi,%rdx,8),%ymm0
                     ││││ ││││                                                ;*laload
                     ││││ ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@10 (line 31)
                     ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  2.19%    2.11%     ││││ ││││  0x00007f9c6d1ef506: vmovdqu -0x8(%rsi,%rdx,8),%ymm1
  3.09%    2.21%     ││││ ││││  0x00007f9c6d1ef50c: vmovdqu %ymm1,-0x8(%r9,%rdx,8)
  2.93%    3.66%     ││││ ││││  0x00007f9c6d1ef513: vmovdqu %ymm0,-0x28(%r9,%rdx,8)  ;*lastore
                     ││││ ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::copy@11 (line 31)
                     ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                     ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.25%    0.23%     ││││ ││││  0x00007f9c6d1ef51a: add    $0xfffffffffffffff8,%edx  ;*iinc
                     ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                     ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  1.09%    1.14%     ││││ ││││  0x00007f9c6d1ef51d: cmp    $0x6,%edx
                     ││││ │╰││  0x00007f9c6d1ef520: jg     0x00007f9c6d1ef500  ;*iflt
                     ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                     ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%     ││││ ↘ ││  0x00007f9c6d1ef522: cmp    $0xffffffffffffffff,%edx
                     ││││   ╰│  0x00007f9c6d1ef525: jg     0x00007f9c6d1ef44c
                     ││││    ╰  0x00007f9c6d1ef52b: jmpq   0x00007f9c6d1ef45d
                     ↘↘↘↘       0x00007f9c6d1ef530: mov    $0xffffff86,%esi
                                0x00007f9c6d1ef535: mov    %rdi,%rbp
                                0x00007f9c6d1ef538: mov    %rax,(%rsp)
                                0x00007f9c6d1ef53c: mov    %rbx,0x10(%rsp)
                                0x00007f9c6d1ef541: mov    %r14,0x18(%rsp)
                                0x00007f9c6d1ef546: mov    %r13,0x20(%rsp)
....................................................................................................
 10.07%   10.02%  <total for region 3>

....[Hottest Regions]...............................................................................
 66.76%   66.90%  [0x7f9c6d1f902a:0x7f9c6d1f9127] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
 16.39%   16.36%  [0x7f9c6d1fae6f:0x7f9c6d1faf73] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
 10.07%   10.02%  [0x7f9c6d1ef42b:0x7f9c6d1ef546] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  1.94%    1.92%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.57%    0.45%  [0xffffffff811aa500:0xffffffff811aa518] in [unknown] ([unknown])
  0.45%    0.47%  [0x7f9c6d1f271e:0x7f9c6d1f27a5] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.15%    0.15%  [0xffffffff810dd298:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.10%    0.05%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.08%    0.15%  [0x7f9c839bf230:0x7f9c839bf254] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.07%  [0x7f9c83a34b14:0x7f9c83a34b5f] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.07%    0.08%  [0x7f9c84101670:0x7f9c841016a9] in strlen (libc-2.21.so)
  0.05%    0.05%  [0xffffffff81038360:0xffffffff81038360] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff811ffe5e:0xffffffff811ffe78] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff811ffea0:0xffffffff811ffebd] in [unknown] ([unknown])
  0.05%    0.03%  [0xffffffff8121abec:0xffffffff8121ac06] in [unknown] ([unknown])
  0.05%    0.07%  [0xffffffff813685a2:0xffffffff813685de] in [unknown] ([unknown])
  0.05%           [0xffffffff817f1c10:0xffffffff817f1c10] in [unknown] ([unknown])
  0.05%    0.03%  [0x7f9c839bc598:0x7f9c839bc5a5] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.05%  [0x7f9c83b730c0:0x7f9c83b730d3] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.02%  [0x7f9c840ffa17:0x7f9c840ffa46] in __strchr_sse2 (libc-2.21.so)
  2.89%    3.01%  <...other 268 warm regions...>
....................................................................................................
 99.98%   99.95%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.21%   93.29%  net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  4.38%    4.23%  [unknown] ([unknown])
  0.45%    0.47%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.10%    0.08%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.08%    0.15%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.08%    0.23%  vfprintf (libc-2.21.so)
  0.07%    0.10%  strlen (libc-2.21.so)
  0.07%    0.07%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.07%    0.03%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.02%  __strchr_sse2 (libc-2.21.so)
  0.05%           pthread_getspecific (libpthread-2.21.so)
  0.05%           _IO_fflush (libc-2.21.so)
  0.05%    0.05%  __memmove_avx_unaligned (libc-2.21.so)
  0.05%    0.05%  print_insn (hsdis-amd64.so)
  0.03%    0.03%  _IO_default_xsputn (libc-2.21.so)
  0.03%           _ZN10ValueStackC1EPS_NS_4KindEi (libjvm.so)
  0.03%           <stub: invoke return entry points>
  0.03%    0.07%  _IO_fwrite (libc-2.21.so)
  0.03%           _IO_file_xsputn@@GLIBC_2.2.5 (libc-2.21.so)
  0.03%           _IO_vsnprintf (libc-2.21.so)
  1.02%    0.22%  <...other 59 warm methods...>
....................................................................................................
 99.98%   99.10%  <totals>

....[Distribution by Area]..........................................................................
 93.81%   93.81%  <generated code>
  4.38%    4.23%  <native code in ([unknown])>
  1.07%    1.09%  <native code in (libjvm.so)>
  0.48%    0.74%  <native code in (libc-2.21.so)>
  0.13%    0.05%  <native code in (hsdis-amd64.so)>
  0.08%    0.02%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libzip.so)>
....................................................................................................
 99.98%   99.95%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkLongArrayCopy.benchmarkArrayManualCopy_Overlap_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 46.67% complete, ETA 00:02:35
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 2223712.323 ops/s
# Warmup Iteration   2: 2469489.930 ops/s
# Warmup Iteration   3: 2353771.618 ops/s
Iteration   1: 2009169.904 ops/s
Iteration   2: 2320475.463 ops/s
Iteration   3: 2252389.027 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Overlap_Dec":
  2194011.465 ±(99.9%) 2985720.105 ops/s [Average]
  (min, avg, max) = (2009169.904, 2194011.465, 2320475.463), stdev = 163657.394
  CI (99.9%): [≈ 0, 5179731.569] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 136514 total address lines.
Perf output processed (skipped 3.182 seconds):
 Column 1: cycles (5643 events)
 Column 2: instructions (5640 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7fc7151fbbe4:0x7fc7151fbcf5] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                                                                             ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@34 (line 107)
                               0x00007fc7151fbbe4: mov    %r12,0x20(%rbx)    ;*putfield realTime
                                                                             ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@40 (line 108)
                               0x00007fc7151fbbe8: add    $0x40,%rsp
                               0x00007fc7151fbbec: pop    %rbp
                               0x00007fc7151fbbed: test   %eax,0x17b7f40d(%rip)        # 0x00007fc72cd7b000
                                                                             ;   {poll_return}
                               0x00007fc7151fbbf3: retq                      ;*aload_0
                                                                             ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                                                                             ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%  ↗        ↗   0x00007fc7151fbbf4: mov    0x8(%rdi,%r8,8),%r10
  0.27%    0.23%  │        │   0x00007fc7151fbbf9: mov    %r10,0x10(%rdi,%r8,8)  ;*lastore
                  │        │                                                 ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@11 (line 36)
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.30%    0.28%  │        │   0x00007fc7151fbbfe: dec    %r8d               ;*isub
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │        │   0x00007fc7151fbc01: test   %r8d,%r8d
                  ╰        │   0x00007fc7151fbc04: jg     0x00007fc7151fbbf4  ;*invokevirtual benchmarkArrayManualCopy_Overlap_Dec
                           │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                   ↗       │↗  0x00007fc7151fbc06: movzbl 0x94(%rcx),%r11d   ;*getfield isDone
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@24 (line 106)
                   │       ││  0x00007fc7151fbc0e: add    $0x1,%rbp          ; OopMap{r9=Oop rcx=Oop rbx=Oop off=370}
                   │       ││                                                ;*ifeq
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@27 (line 106)
  0.09%    0.07%   │       ││  0x00007fc7151fbc12: test   %eax,0x17b7f3e8(%rip)        # 0x00007fc72cd7b000
                   │       ││                                                ;   {poll}
  0.09%    0.05%   │       ││  0x00007fc7151fbc18: test   %r11d,%r11d
                   │       ││  0x00007fc7151fbc1b: jne    0x00007fc7151fbbcf  ;*aload_3
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@13 (line 104)
                   │       ││  0x00007fc7151fbc1d: mov    0x20(%r9),%r10d    ;*getfield itemCount
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@1 (line 88)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                   │       ││  0x00007fc7151fbc21: mov    %r10d,%r8d
  0.04%    0.02%   │       ││  0x00007fc7151fbc24: dec    %r8d               ;*isub
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@5 (line 88)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%   │       ││  0x00007fc7151fbc27: test   %r8d,%r8d
                   ╰       ││  0x00007fc7151fbc2a: jle    0x00007fc7151fbc06  ;*ifle
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                           ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007fc7151fbc2c: mov    0x28(%r9),%r11d    ;*getfield longSource
                           ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@1 (line 36)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                           ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007fc7151fbc30: mov    0xc(%r12,%r11,8),%edi  ;*laload
                           ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@10 (line 36)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                           ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                           ││                                                ; implicit exception: dispatches to 0x00007fc7151fbcdd
  0.19%    0.09%           ││  0x00007fc7151fbc35: test   %edi,%edi
                    ╭      ││  0x00007fc7151fbc37: jbe    0x00007fc7151fbcdd
  0.04%    0.09%    │      ││  0x00007fc7151fbc3d: add    $0xfffffffffffffffe,%r10d
                    │      ││  0x00007fc7151fbc41: cmp    %edi,%r10d
                    │╭     ││  0x00007fc7151fbc44: jae    0x00007fc7151fbcdd
  0.04%    0.05%    ││     ││  0x00007fc7151fbc4a: cmp    $0x1,%edi
                    ││╭    ││  0x00007fc7151fbc4d: jbe    0x00007fc7151fbcdd
  0.05%    0.05%    │││    ││  0x00007fc7151fbc53: cmp    %edi,%r8d
                    │││╭   ││  0x00007fc7151fbc56: jae    0x00007fc7151fbcdd
  0.05%    0.04%    ││││   ││  0x00007fc7151fbc5c: lea    (%r12,%r11,8),%rdi  ;*aload_0
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    ││││↗  ││  0x00007fc7151fbc60: mov    0x8(%rdi,%r8,8),%r11
                    │││││  ││  0x00007fc7151fbc65: mov    %r11,0x10(%rdi,%r8,8)  ;*lastore
                    │││││  ││                                                ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@11 (line 36)
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.02%             │││││  ││  0x00007fc7151fbc6a: dec    %r8d               ;*isub
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%    │││││  ││  0x00007fc7151fbc6d: cmp    %r10d,%r8d
                    ││││╰  ││  0x00007fc7151fbc70: jg     0x00007fc7151fbc60  ;*ifle
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    ││││   ││  0x00007fc7151fbc72: cmp    $0x7,%r8d
                    ││││ ╭ ││  0x00007fc7151fbc76: jle    0x00007fc7151fbccf
           0.02%    ││││ │ ││  0x00007fc7151fbc78: nopl   0x0(%rax,%rax,1)   ;*aload_0
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.55%    0.30%    ││││ │↗││  0x00007fc7151fbc80: movslq %r8d,%r10
  0.11%    0.07%    ││││ ││││  0x00007fc7151fbc83: lea    (%rdi,%r10,8),%r11
  7.30%    7.16%    ││││ ││││  0x00007fc7151fbc87: mov    0x8(%r11),%r10
  0.34%    0.32%    ││││ ││││  0x00007fc7151fbc8b: mov    %r10,0x10(%r11)
  1.58%    1.51%    ││││ ││││  0x00007fc7151fbc8f: mov    (%r11),%r10
  0.19%    0.27%    ││││ ││││  0x00007fc7151fbc92: mov    %r10,0x8(%r11)
  8.49%   15.80%    ││││ ││││  0x00007fc7151fbc96: mov    -0x8(%r11),%r10
  0.43%    0.27%    ││││ ││││  0x00007fc7151fbc9a: mov    %r10,(%r11)
  7.04%   11.01%    ││││ ││││  0x00007fc7151fbc9d: mov    -0x10(%r11),%r10
  0.37%    0.23%    ││││ ││││  0x00007fc7151fbca1: mov    %r10,-0x8(%r11)
  9.11%    6.19%    ││││ ││││  0x00007fc7151fbca5: mov    -0x18(%r11),%r10
  0.28%    0.27%    ││││ ││││  0x00007fc7151fbca9: mov    %r10,-0x10(%r11)
  7.25%    5.71%    ││││ ││││  0x00007fc7151fbcad: mov    -0x20(%r11),%r10
  0.12%    0.25%    ││││ ││││  0x00007fc7151fbcb1: mov    %r10,-0x18(%r11)
  9.07%    6.70%    ││││ ││││  0x00007fc7151fbcb5: mov    -0x28(%r11),%r10
  0.35%    0.12%    ││││ ││││  0x00007fc7151fbcb9: mov    %r10,-0x20(%r11)
  7.55%    6.03%    ││││ ││││  0x00007fc7151fbcbd: mov    -0x30(%r11),%r10
  0.27%    0.30%    ││││ ││││  0x00007fc7151fbcc1: mov    %r10,-0x28(%r11)   ;*lastore
                    ││││ ││││                                                ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@11 (line 36)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  7.30%    5.51%    ││││ ││││  0x00007fc7151fbcc5: add    $0xfffffffffffffff8,%r8d  ;*isub
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
           0.04%    ││││ ││││  0x00007fc7151fbcc9: cmp    $0x7,%r8d
                    ││││ │╰││  0x00007fc7151fbccd: jg     0x00007fc7151fbc80  ;*ifle
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.05%    ││││ ↘ ││  0x00007fc7151fbccf: test   %r8d,%r8d
                    ││││   ╰│  0x00007fc7151fbcd2: jg     0x00007fc7151fbbf4
                    ││││    ╰  0x00007fc7151fbcd8: jmpq   0x00007fc7151fbc06
                    ↘↘↘↘       0x00007fc7151fbcdd: mov    $0xffffff86,%esi
                               0x00007fc7151fbce2: mov    %rcx,(%rsp)
                               0x00007fc7151fbce6: mov    %rbx,0x8(%rsp)
                               0x00007fc7151fbceb: mov    %r9,0x18(%rsp)
                               0x00007fc7151fbcf0: mov    %r8d,0x20(%rsp)
                               0x00007fc7151fbcf5: xchg   %ax,%ax
....................................................................................................
 69.08%   69.15%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7fc7151fd9a5:0x7fc7151fda9f] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                         0x00007fc7151fd9a5: cmp    $0xf8010f91,%r10d  ;   {metadata(&apos;net/greypanther/generated/BenchmarkLongArrayCopy_jmhType&apos;)}
                         0x00007fc7151fd9ac: jne    0x00007fc7151fdb35
                         0x00007fc7151fd9b2: test   %rcx,%rcx
                         0x00007fc7151fd9b5: je     0x00007fc7151fdb12  ;*aload_3
                                                                       ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@13 (line 104)
                  ╭      0x00007fc7151fd9bb: jmp    0x00007fc7151fd9ed
                  │      0x00007fc7151fd9bd: xchg   %ax,%ax            ;*aload_0
                  │                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                  │                                                    ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │↗     0x00007fc7151fd9c0: mov    0x8(%r9,%r8,8),%r10
  0.04%    0.02%  ││     0x00007fc7151fd9c5: mov    %r10,0x10(%r9,%r8,8)  ;*lastore
                  ││                                                   ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@11 (line 36)
                  ││                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                   ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.05%  ││     0x00007fc7151fd9ca: dec    %r8d               ;*isub
                  ││                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  ││                                                   ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  ││     0x00007fc7151fd9cd: test   %r8d,%r8d
                  │╰     0x00007fc7151fd9d0: jg     0x00007fc7151fd9c0  ;*invokevirtual benchmarkArrayManualCopy_Overlap_Dec
                  │                                                    ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │ ↗    0x00007fc7151fd9d2: movzbl 0x94(%rcx),%r11d   ;*getfield isDone
                  │ │                                                  ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@24 (line 106)
           0.02%  │ │    0x00007fc7151fd9da: add    $0x1,%rbx          ; OopMap{rcx=Oop r13=Oop r14=Oop off=190}
                  │ │                                                  ;*ifeq
                  │ │                                                  ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@27 (line 106)
           0.02%  │ │    0x00007fc7151fd9de: test   %eax,0x17b7d61c(%rip)        # 0x00007fc72cd7b000
                  │ │                                                  ;   {poll}
  0.02%    0.02%  │ │    0x00007fc7151fd9e4: test   %r11d,%r11d
                  │ │    0x00007fc7151fd9e7: jne    0x00007fc7151fdaad  ;*aload_3
                  │ │                                                  ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@13 (line 104)
                  ↘ │    0x00007fc7151fd9ed: mov    0x20(%r14),%r10d   ;*getfield itemCount
                    │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@1 (line 88)
                    │                                                  ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    │    0x00007fc7151fd9f1: mov    %r10d,%r8d
  0.02%    0.02%    │    0x00007fc7151fd9f4: dec    %r8d               ;*isub
                    │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@5 (line 88)
                    │                                                  ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
           0.04%    │    0x00007fc7151fd9f7: test   %r8d,%r8d
                    ╰    0x00007fc7151fd9fa: jle    0x00007fc7151fd9d2  ;*ifle
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                       ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fc7151fd9fc: mov    0x28(%r14),%r11d   ;*getfield longSource
                                                                       ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@1 (line 36)
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                                                                       ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fc7151fda00: mov    0xc(%r12,%r11,8),%r9d  ;*laload
                                                                       ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@10 (line 36)
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                                                                       ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                                                                       ; implicit exception: dispatches to 0x00007fc7151fdad7
           0.11%         0x00007fc7151fda05: test   %r9d,%r9d
                         0x00007fc7151fda08: jbe    0x00007fc7151fdad7
                         0x00007fc7151fda0e: add    $0xfffffffffffffffe,%r10d
                         0x00007fc7151fda12: cmp    %r9d,%r10d
                         0x00007fc7151fda15: jae    0x00007fc7151fdad7
           0.02%         0x00007fc7151fda1b: cmp    $0x1,%r9d
                         0x00007fc7151fda1f: jbe    0x00007fc7151fdad7
  0.02%                  0x00007fc7151fda25: cmp    %r9d,%r8d
                         0x00007fc7151fda28: jae    0x00007fc7151fdad7
  0.02%    0.04%         0x00007fc7151fda2e: lea    (%r12,%r11,8),%r9  ;*aload_0
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                                                                       ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                     ↗   0x00007fc7151fda32: mov    0x8(%r9,%r8,8),%r11
                     │   0x00007fc7151fda37: mov    %r11,0x10(%r9,%r8,8)  ;*lastore
                     │                                                 ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@11 (line 36)
                     │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                     │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                     │   0x00007fc7151fda3c: dec    %r8d               ;*isub
                     │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                     │                                                 ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.02%              │   0x00007fc7151fda3f: cmp    %r10d,%r8d
                     ╰   0x00007fc7151fda42: jg     0x00007fc7151fda32  ;*ifle
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                       ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fc7151fda44: cmp    $0x7,%r8d
                         0x00007fc7151fda48: jle    0x00007fc7151fda9f
                         0x00007fc7151fda4a: nopw   0x0(%rax,%rax,1)   ;*aload_0
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                                                                       ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
           0.04%      ↗  0x00007fc7151fda50: movslq %r8d,%r10
  0.02%    0.05%      │  0x00007fc7151fda53: lea    (%r9,%r10,8),%r11
  1.79%    1.72%      │  0x00007fc7151fda57: mov    0x8(%r11),%r10
                      │  0x00007fc7151fda5b: mov    %r10,0x10(%r11)
  0.02%    0.05%      │  0x00007fc7151fda5f: mov    (%r11),%r10
  0.02%    0.04%      │  0x00007fc7151fda62: mov    %r10,0x8(%r11)
  2.23%    4.29%      │  0x00007fc7151fda66: mov    -0x8(%r11),%r10
                      │  0x00007fc7151fda6a: mov    %r10,(%r11)
  1.68%    2.77%      │  0x00007fc7151fda6d: mov    -0x10(%r11),%r10
                      │  0x00007fc7151fda71: mov    %r10,-0x8(%r11)
  2.09%    1.60%      │  0x00007fc7151fda75: mov    -0x18(%r11),%r10
  0.02%               │  0x00007fc7151fda79: mov    %r10,-0x10(%r11)
  1.79%    1.15%      │  0x00007fc7151fda7d: mov    -0x20(%r11),%r10
  0.02%               │  0x00007fc7151fda81: mov    %r10,-0x18(%r11)
  2.30%    1.74%      │  0x00007fc7151fda85: mov    -0x28(%r11),%r10
  0.02%    0.02%      │  0x00007fc7151fda89: mov    %r10,-0x20(%r11)
  2.04%    1.91%      │  0x00007fc7151fda8d: mov    -0x30(%r11),%r10
                      │  0x00007fc7151fda91: mov    %r10,-0x28(%r11)   ;*lastore
                      │                                                ; - net.greypanther.BenchmarkLongArrayCopy::selfCopy@11 (line 36)
                      │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                      │                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  2.18%    1.40%      │  0x00007fc7151fda95: add    $0xfffffffffffffff8,%r8d  ;*isub
                      │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                      │                                                ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                      │  0x00007fc7151fda99: cmp    $0x7,%r8d
                      ╰  0x00007fc7151fda9d: jg     0x00007fc7151fda50  ;*ifle
                                                                       ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                       ; - net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                         0x00007fc7151fda9f: test   %r8d,%r8d
....................................................................................................
 16.39%   17.11%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.08%   69.15%  [0x7fc7151fbbe4:0x7fc7151fbcf5] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
 16.39%   17.11%  [0x7fc7151fd9a5:0x7fc7151fda9f] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  7.58%    7.54%  [0x7fc7151f367a:0x7fc7151f36ef] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  0.76%    0.74%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.73%    0.82%  [0xffffffff811aa504:0xffffffff811aa518] in [unknown] ([unknown])
  0.41%    0.43%  [0x7fc7151f6822:0x7fc7151f6881] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  0.14%    0.07%  [0xffffffff811aa63a:0xffffffff811aa64c] in [unknown] ([unknown])
  0.12%    0.02%  [0xffffffff810dd2ae:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.12%    0.04%  [0xffffffff817f1c10:0xffffffff817f1c5c] in [unknown] ([unknown])
  0.11%    0.11%  [0xffffffff811ffe5e:0xffffffff811ffe78] in [unknown] ([unknown])
  0.11%    0.04%  [0xffffffff8121abd8:0xffffffff8121ac06] in [unknown] ([unknown])
  0.09%    0.09%  [0x7fc7151f35e4:0x7fc7151f3636] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  0.09%    0.05%  [0x7fc72bc560ae:0x7fc72bc560da] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%    0.05%  [0xffffffff813eebc1:0xffffffff813eebd7] in [unknown] ([unknown])
  0.07%    0.04%  [0x7fc72baa3780:0x7fc72baa37cb] in _ZN13defaultStream4holdEl (libjvm.so)
  0.07%    0.02%  [0x7fc72c94cdad:0x7fc72c94cdad] in [unknown] (libpthread-2.21.so)
  0.05%    0.05%  [0xffffffff81032f1d:0xffffffff81032f1d] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff811ffef0:0xffffffff811fff0b] in [unknown] ([unknown])
  0.05%           [0xffffffff8123efe2:0xffffffff8123eff1] in [unknown] ([unknown])
  0.05%           [0xffffffff812d3180:0xffffffff812d3186] in [unknown] ([unknown])
  3.83%    3.60%  <...other 279 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 93.21%   93.94%  net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  4.11%    3.65%  [unknown] ([unknown])
  0.43%    0.43%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  0.43%    0.14%  sun.reflect.ClassFileAssembler::cpi
  0.18%    0.05%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.12%    0.12%  vfprintf (libc-2.21.so)
  0.11%    0.14%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.04%  jio_print (libjvm.so)
  0.07%    0.02%  [unknown] (libpthread-2.21.so)
  0.07%    0.04%  _ZN13defaultStream4holdEl (libjvm.so)
  0.07%    0.05%  strlen (libc-2.21.so)
  0.07%    0.14%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.05%    0.05%  __strchr_sse2 (libc-2.21.so)
  0.05%    0.04%  _IO_file_xsputn@@GLIBC_2.2.5 (libc-2.21.so)
  0.04%    0.12%  _IO_default_xsputn (libc-2.21.so)
  0.04%           __strncpy_sse2_unaligned (libc-2.21.so)
  0.04%    0.02%  _itoa_word (libc-2.21.so)
  0.04%           __strcpy_sse2_unaligned (libc-2.21.so)
  0.04%    0.02%  _IO_fflush (libc-2.21.so)
  0.04%           <stub: new  187 new>
  0.73%    0.50%  <...other 41 warm methods...>
....................................................................................................
 99.98%   99.50%  <totals>

....[Distribution by Area]..........................................................................
 94.19%   94.50%  <generated code>
  4.11%    3.65%  <native code in ([unknown])>
  0.94%    1.08%  <native code in (libjvm.so)>
  0.60%    0.69%  <native code in (libc-2.21.so)>
  0.14%    0.07%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.98%  100.00%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkLongArrayCopy.benchmarkArraySystemArraycopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 50.00% complete, ETA 00:02:26
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4675908.820 ops/s
# Warmup Iteration   2: 4566716.311 ops/s
# Warmup Iteration   3: 4595760.086 ops/s
Iteration   1: 4661811.371 ops/s
Iteration   2: 4448863.009 ops/s
Iteration   3: 4521471.040 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy":
  4544048.473 ±(99.9%) 1974966.751 ops/s [Average]
  (min, avg, max) = (4448863.009, 4544048.473, 4661811.371), stdev = 108254.592
  CI (99.9%): [2569081.722, 6519015.224] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 132208 total address lines.
Perf output processed (skipped 3.148 seconds):
 Column 1: cycles (5768 events)
 Column 2: instructions (5756 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7fbdb105278e:0x7fbdb105281f] in StubRoutines::jlong_disjoint_arraycopy

  0.10%    0.02%         0x00007fbdb105278e: neg    %rdx
                  ╭      0x00007fbdb1052791: jmpq   Stub::jlong_disjoint_arraycopy+72 0x0x7fbdb10527c8
                  │↗  ↗  0x00007fbdb1052796: mov    0x8(%rdi,%rdx,8),%rax
                  ││  │  0x00007fbdb105279b: mov    %rax,0x8(%rcx,%rdx,8)
                  ││  │  0x00007fbdb10527a0: inc    %rdx
                  │╰  │  0x00007fbdb10527a3: jne    Stub::jlong_disjoint_arraycopy+22 0x0x7fbdb1052796
                  │   │  0x00007fbdb10527a5: xor    %rax,%rax
                  │   │  0x00007fbdb10527a8: leaveq 
                  │   │  0x00007fbdb10527a9: retq   
                  │   │  0x00007fbdb10527aa: nopw   0x0(%rax,%rax,1)
  3.00%    1.88%  │ ↗ │  0x00007fbdb10527b0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 13.07%   10.60%  │ │ │  0x00007fbdb10527b6: vmovdqu %ymm0,-0x38(%rcx,%rdx,8)
 45.98%   64.75%  │ │ │  0x00007fbdb10527bc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
 20.35%    8.44%  │ │ │  0x00007fbdb10527c2: vmovdqu %ymm1,-0x18(%rcx,%rdx,8)
  4.21%    2.57%  ↘ │ │  0x00007fbdb10527c8: add    $0x8,%rdx
                    ╰ │  0x00007fbdb10527cc: jle    Stub::jlong_disjoint_arraycopy+48 0x0x7fbdb10527b0
  0.02%    0.05%      │  0x00007fbdb10527ce: sub    $0x4,%rdx
                     ╭│  0x00007fbdb10527d2: jg     Stub::jlong_disjoint_arraycopy+100 0x0x7fbdb10527e4
                     ││  0x00007fbdb10527d4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                     ││  0x00007fbdb10527da: vmovdqu %ymm0,-0x18(%rcx,%rdx,8)
                     ││  0x00007fbdb10527e0: add    $0x4,%rdx
  0.14%    0.45%     ↘│  0x00007fbdb10527e4: (bad)  
                      │  0x00007fbdb10527e7: rol    $0xf5,%ch
                      │  0x00007fbdb10527ea: out    %eax,(%dx)
                      │  0x00007fbdb10527eb: leaveq 
                      │  0x00007fbdb10527ec: sub    $0x4,%rdx
                      ╰  0x00007fbdb10527f0: jl     Stub::jlong_disjoint_arraycopy+22 0x0x7fbdb1052796
  0.03%    0.02%         0x00007fbdb10527f2: xor    %rax,%rax
  0.16%    0.36%         0x00007fbdb10527f5: leaveq 
  3.09%    3.74%         0x00007fbdb10527f6: retq   
                       StubRoutines::jlong_arraycopy [0x00007fbdb1052800, 0x00007fbdb1052883[ (131 bytes)
                         0x00007fbdb1052800: push   %rbp
                         0x00007fbdb1052801: mov    %rsp,%rbp
                         0x00007fbdb1052804: cmp    %rdi,%rsi
                         0x00007fbdb1052807: lea    (%rdi,%rdx,8),%rax
                         0x00007fbdb105280b: jbe    Stub::jlong_disjoint_arraycopy+4 0x0x7fbdb1052784
                         0x00007fbdb1052811: cmp    %rax,%rsi
                         0x00007fbdb1052814: jae    Stub::jlong_disjoint_arraycopy+4 0x0x7fbdb1052784
                         0x00007fbdb105281a: jmpq   Stub::jlong_arraycopy+86 0x0x7fbdb1052856
                         0x00007fbdb105281f: mov    -0x8(%rdi,%rdx,8),%rax
....................................................................................................
 90.05%   92.86%  <total for region 1>

....[Hottest Regions]...............................................................................
 90.05%   92.86%  [0x7fbdb105278e:0x7fbdb105281f] in StubRoutines::jlong_disjoint_arraycopy
  1.92%    1.88%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  1.80%    0.21%  [0x7fbdb11f15f5:0x7fbdb11f1687] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.45%    0.10%  [0x7fbdb11f3306:0x7fbdb11f33a9] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.43%    0.54%  [0xffffffff811aa500:0xffffffff811aa518] in [unknown] ([unknown])
  0.38%    0.12%  [0x7fbdb1052760:0x7fbdb10527b0] in StubRoutines::jlong_disjoint_arraycopy
  0.16%    0.02%  [0x7fbdb11e98a3:0x7fbdb11e992b] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.14%    0.07%  [0xffffffff811ffeb0:0xffffffff811fff18] in [unknown] ([unknown])
  0.10%           [0xffffffff817f1c10:0xffffffff817f1c1c] in [unknown] ([unknown])
  0.10%    0.16%  [0x7fbdc89beb0f:0x7fbdc89beb5c] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.09%    0.12%  [0xffffffff810dd298:0xffffffff810dd2cc] in [unknown] ([unknown])
  0.09%    0.09%  [0xffffffff817f19e4:0xffffffff817f1a26] in [unknown] ([unknown])
  0.09%    0.12%  [0x7fbdc8afd0ae:0x7fbdc8afd0dd] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%    0.09%  [0xffffffff811ffe75:0xffffffff811ffe7f] in [unknown] ([unknown])
  0.07%    0.03%  [0x7fbdc88f714f:0x7fbdc88f7168] in _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.05%    0.03%  [0xffffffff8121abf9:0xffffffff8121ac06] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff81368592:0xffffffff813685aa] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff813d3037:0xffffffff813d3037] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff813d9ac8:0xffffffff813d9af4] in [unknown] ([unknown])
  0.05%    0.02%  [0x7fbdc6606f6c:0x7fbdc6606f76] in print_insn (hsdis-amd64.so)
  3.80%    3.44%  <...other 295 warm regions...>
....................................................................................................
100.00%   99.95%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 90.43%   92.98%  StubRoutines::jlong_disjoint_arraycopy
  4.59%    4.31%  [unknown] ([unknown])
  2.44%    0.36%  net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.21%    0.07%  print_insn (hsdis-amd64.so)
  0.14%    0.24%  vfprintf (libc-2.21.so)
  0.12%    0.16%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.10%    0.19%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.09%    0.09%  _IO_default_xsputn (libc-2.21.so)
  0.07%    0.03%  _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.07%    0.03%  _IO_fwrite (libc-2.21.so)
  0.07%    0.05%  _IO_vsnprintf (libc-2.21.so)
  0.05%    0.07%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.05%           putop (hsdis-amd64.so)
  0.05%           _ZN13InstanceKlass17find_method_indexEP5ArrayIP6MethodEP6SymbolS6_bb (libjvm.so)
  0.05%    0.03%  _IO_old_init (libc-2.21.so)
  0.05%           <stub: method entry point (kind = zerolocals)>
  0.05%           _ZN12outputStream5printEPKcz (libjvm.so)
  0.05%    0.14%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.03%    0.03%  jio_print (libjvm.so)
  0.03%           _ZN16BacktraceBuilder4pushEP6MethodiP6Thread (libjvm.so)
  1.23%    0.43%  <...other 59 warm methods...>
....................................................................................................
100.00%   99.24%  <totals>

....[Distribution by Area]..........................................................................
 93.07%   93.36%  <generated code>
  4.59%    4.31%  <native code in ([unknown])>
  1.16%    1.16%  <native code in (libjvm.so)>
  0.75%    0.92%  <native code in (libc-2.21.so)>
  0.36%    0.14%  <native code in (hsdis-amd64.so)>
  0.07%    0.05%  <native code in (libpthread-2.21.so)>
....................................................................................................
100.00%   99.95%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkLongArrayCopy.benchmarkArraySystemArraycopy_Overlap
# Parameters: (arraySizeInKb = 10)

# Run progress: 53.33% complete, ETA 00:02:16
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4595263.798 ops/s
# Warmup Iteration   2: 4893968.884 ops/s
# Warmup Iteration   3: 4992903.939 ops/s
Iteration   1: 4744213.856 ops/s
Iteration   2: 4896680.457 ops/s
Iteration   3: 4939391.123 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy_Overlap":
  4860095.145 ±(99.9%) 1871863.303 ops/s [Average]
  (min, avg, max) = (4744213.856, 4860095.145, 4939391.123), stdev = 102603.144
  CI (99.9%): [2988231.842, 6731958.449] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 134716 total address lines.
Perf output processed (skipped 3.159 seconds):
 Column 1: cycles (5846 events)
 Column 2: instructions (5817 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f67e5052767:0x7f67e5052832] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy

                            0x00007f67e5052767: leaveq 
                            0x00007f67e5052768: add    $0x4,%rdx
                            0x00007f67e505276c: jg     Stub::jint_arraycopy+58 0x0x7f67e505271a
                            0x00007f67e505276e: xor    %rax,%rax
                            0x00007f67e5052771: leaveq 
                            0x00007f67e5052772: retq   
                          StubRoutines::jlong_disjoint_arraycopy [0x00007f67e5052780, 0x00007f67e50527f7[ (119 bytes)
                            0x00007f67e5052780: push   %rbp
                            0x00007f67e5052781: mov    %rsp,%rbp
                       ↗↗   0x00007f67e5052784: lea    -0x8(%rdi,%rdx,8),%rdi
  0.15%    0.29%       ││   0x00007f67e5052789: lea    -0x8(%rsi,%rdx,8),%rcx
  0.02%                ││   0x00007f67e505278e: neg    %rdx
           0.02%  ╭    ││   0x00007f67e5052791: jmpq   Stub::jlong_disjoint_arraycopy+72 0x0x7f67e50527c8
  0.44%    0.02%  │↗  ↗││   0x00007f67e5052796: mov    0x8(%rdi,%rdx,8),%rax
                  ││  │││   0x00007f67e505279b: mov    %rax,0x8(%rcx,%rdx,8)
  0.02%    0.02%  ││  │││   0x00007f67e50527a0: inc    %rdx
                  │╰  │││   0x00007f67e50527a3: jne    Stub::jlong_disjoint_arraycopy+22 0x0x7f67e5052796
                  │   │││   0x00007f67e50527a5: xor    %rax,%rax
  0.14%    0.62%  │   │││   0x00007f67e50527a8: leaveq 
  0.05%    0.02%  │   │││   0x00007f67e50527a9: retq   
                  │   │││   0x00007f67e50527aa: nopw   0x0(%rax,%rax,1)
  1.16%    0.69%  │ ↗ │││   0x00007f67e50527b0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 20.66%    5.04%  │ │ │││   0x00007f67e50527b6: vmovdqu %ymm0,-0x38(%rcx,%rdx,8)
 67.48%   83.82%  │ │ │││   0x00007f67e50527bc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  0.87%    0.24%  │ │ │││   0x00007f67e50527c2: vmovdqu %ymm1,-0x18(%rcx,%rdx,8)
  0.94%    0.57%  ↘ │ │││   0x00007f67e50527c8: add    $0x8,%rdx
                    ╰ │││   0x00007f67e50527cc: jle    Stub::jlong_disjoint_arraycopy+48 0x0x7f67e50527b0
  0.05%               │││   0x00007f67e50527ce: sub    $0x4,%rdx
                     ╭│││   0x00007f67e50527d2: jg     Stub::jlong_disjoint_arraycopy+100 0x0x7f67e50527e4
  0.21%    0.02%     ││││   0x00007f67e50527d4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
  0.03%    0.07%     ││││   0x00007f67e50527da: vmovdqu %ymm0,-0x18(%rcx,%rdx,8)
  0.15%    0.10%     ││││   0x00007f67e50527e0: add    $0x4,%rdx
                     ↘│││   0x00007f67e50527e4: (bad)  
                      │││   0x00007f67e50527e7: rol    $0xf5,%ch
                      │││   0x00007f67e50527ea: out    %eax,(%dx)
                      │││   0x00007f67e50527eb: leaveq 
                      │││   0x00007f67e50527ec: sub    $0x4,%rdx
                      ╰││   0x00007f67e50527f0: jl     Stub::jlong_disjoint_arraycopy+22 0x0x7f67e5052796
                       ││   0x00007f67e50527f2: xor    %rax,%rax
                       ││   0x00007f67e50527f5: leaveq 
                       ││   0x00007f67e50527f6: retq   
                       ││ StubRoutines::jlong_arraycopy [0x00007f67e5052800, 0x00007f67e5052883[ (131 bytes)
  0.10%    0.38%       ││   0x00007f67e5052800: push   %rbp
                       ││   0x00007f67e5052801: mov    %rsp,%rbp
  0.02%                ││   0x00007f67e5052804: cmp    %rdi,%rsi
  0.19%    0.43%       ││   0x00007f67e5052807: lea    (%rdi,%rdx,8),%rax
  0.02%                ╰│   0x00007f67e505280b: jbe    Stub::jlong_disjoint_arraycopy+4 0x0x7f67e5052784
                        │   0x00007f67e5052811: cmp    %rax,%rsi
                        ╰   0x00007f67e5052814: jae    Stub::jlong_disjoint_arraycopy+4 0x0x7f67e5052784
                            0x00007f67e505281a: jmpq   Stub::jlong_arraycopy+86 0x0x7f67e5052856
                         ↗  0x00007f67e505281f: mov    -0x8(%rdi,%rdx,8),%rax
                         │  0x00007f67e5052824: mov    %rax,-0x8(%rsi,%rdx,8)
                         │  0x00007f67e5052829: dec    %rdx
                         ╰  0x00007f67e505282c: jne    Stub::jlong_arraycopy+31 0x0x7f67e505281f
                            0x00007f67e505282e: xor    %rax,%rax
                            0x00007f67e5052831: leaveq 
                            0x00007f67e5052832: retq   
....................................................................................................
 92.71%   92.33%  <total for region 1>

....[Hottest Regions]...............................................................................
 92.71%   92.33%  [0x7f67e5052767:0x7f67e5052832] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  1.56%    2.06%  [0x7f67e51f62e8:0x7f67e51f6374] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.50%    0.48%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.44%    0.55%  [0xffffffff811aa504:0xffffffff811aa518] in [unknown] ([unknown])
  0.29%    0.50%  [0x7f67e51f8094:0x7f67e51f812b] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.17%    0.22%  [0x7f67e51f17fd:0x7f67e51f1872] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.15%    0.21%  [0x7f67fc5c1230:0x7f67fc5c124d] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.14%    0.05%  [0xffffffff810dd298:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.09%    0.09%  [0xffffffff813d3030:0xffffffff813d3037] in [unknown] ([unknown])
  0.09%    0.03%  [0xffffffff817f1a0c:0xffffffff817f1a26] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff811aa63a:0xffffffff811aa64c] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff811fff0b:0xffffffff811fff18] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff8121abd4:0xffffffff8121ac06] in [unknown] ([unknown])
  0.07%    0.07%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff817f1c10:0xffffffff817f1c27] in [unknown] ([unknown])
  0.05%           [0xffffffff811ffea0:0xffffffff811ffebb] in [unknown] ([unknown])
  0.05%           [0xffffffff813d9b55:0xffffffff813d9b6c] in [unknown] ([unknown])
  0.05%    0.03%  [0xffffffff817efb35:0xffffffff817efb49] in [unknown] ([unknown])
  0.05%    0.02%  [0x7f67fcd01a17:0x7f67fcd01a46] in __strchr_sse2 (libc-2.21.so)
  0.05%    0.03%  [0x7f67fcd03670:0x7f67fcd0369f] in strlen (libc-2.21.so)
  3.25%    3.20%  <...other 258 warm regions...>
....................................................................................................
 99.98%   99.95%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 92.71%   92.33%  StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  3.15%    2.54%  [unknown] ([unknown])
  2.02%    2.82%  net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.17%    0.21%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.15%    0.19%  vfprintf (libc-2.21.so)
  0.07%    0.12%  _IO_fwrite (libc-2.21.so)
  0.07%    0.09%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.07%    0.02%  print_insn (hsdis-amd64.so)
  0.05%    0.05%  _IO_default_xsputn (libc-2.21.so)
  0.05%    0.02%  __strchr_sse2 (libc-2.21.so)
  0.05%    0.03%  strlen (libc-2.21.so)
  0.05%           __pthread_disable_asynccancel (libpthread-2.21.so)
  0.05%    0.02%  _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ (libjvm.so)
  0.05%    0.12%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.21%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.05%    0.03%  <stub: method entry point (kind = zerolocals)>
  0.05%           _IO_file_write@@GLIBC_2.2.5 (libc-2.21.so)
  0.03%           _ZN12stringStream5writeEPKcm (libjvm.so)
  0.03%           OP_E_memory (hsdis-amd64.so)
  0.03%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  1.01%    0.45%  <...other 51 warm methods...>
....................................................................................................
 99.98%   99.24%  <totals>

....[Distribution by Area]..........................................................................
 94.87%   95.26%  <generated code>
  3.15%    2.54%  <native code in ([unknown])>
  1.03%    1.20%  <native code in (libjvm.so)>
  0.67%    0.77%  <native code in (libc-2.21.so)>
  0.17%    0.07%  <native code in (hsdis-amd64.so)>
  0.09%    0.10%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libverify.so)>
....................................................................................................
 99.98%   99.95%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkLongArrayCopy.benchmarkArrayUnsafeCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 56.67% complete, ETA 00:02:06
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4509092.376 ops/s
# Warmup Iteration   2: 4689476.054 ops/s
# Warmup Iteration   3: 5008849.547 ops/s
Iteration   1: 4639049.646 ops/s
Iteration   2: 4829743.008 ops/s
Iteration   3: 4852730.699 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayUnsafeCopy":
  4773841.118 ±(99.9%) 2139939.997 ops/s [Average]
  (min, avg, max) = (4639049.646, 4773841.118, 4852730.699), stdev = 117297.332
  CI (99.9%): [2633901.121, 6913781.115] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 135616 total address lines.
Perf output processed (skipped 3.143 seconds):
 Column 1: cycles (5500 events)
 Column 2: instructions (5559 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7fa3d05fb766:0x7fa3d05fb833] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy

                            0x00007fa3d05fb766: out    %eax,(%dx)
                            0x00007fa3d05fb767: leaveq 
                            0x00007fa3d05fb768: add    $0x4,%rdx
                            0x00007fa3d05fb76c: jg     Stub::jint_arraycopy+58 0x0x7fa3d05fb71a
                            0x00007fa3d05fb76e: xor    %rax,%rax
                            0x00007fa3d05fb771: leaveq 
                            0x00007fa3d05fb772: retq   
                          StubRoutines::jlong_disjoint_arraycopy [0x00007fa3d05fb780, 0x00007fa3d05fb7f7[ (119 bytes)
                            0x00007fa3d05fb780: push   %rbp
                            0x00007fa3d05fb781: mov    %rsp,%rbp
  0.05%    0.02%       ↗↗   0x00007fa3d05fb784: lea    -0x8(%rdi,%rdx,8),%rdi
                       ││   0x00007fa3d05fb789: lea    -0x8(%rsi,%rdx,8),%rcx
                       ││   0x00007fa3d05fb78e: neg    %rdx
  0.04%    0.02%  ╭    ││   0x00007fa3d05fb791: jmpq   Stub::jlong_disjoint_arraycopy+72 0x0x7fa3d05fb7c8
                  │↗  ↗││   0x00007fa3d05fb796: mov    0x8(%rdi,%rdx,8),%rax
                  ││  │││   0x00007fa3d05fb79b: mov    %rax,0x8(%rcx,%rdx,8)
                  ││  │││   0x00007fa3d05fb7a0: inc    %rdx
                  │╰  │││   0x00007fa3d05fb7a3: jne    Stub::jlong_disjoint_arraycopy+22 0x0x7fa3d05fb796
                  │   │││   0x00007fa3d05fb7a5: xor    %rax,%rax
                  │   │││   0x00007fa3d05fb7a8: leaveq 
                  │   │││   0x00007fa3d05fb7a9: retq   
                  │   │││   0x00007fa3d05fb7aa: nopw   0x0(%rax,%rax,1)
  2.98%    0.61%  │ ↗ │││   0x00007fa3d05fb7b0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 16.73%    8.85%  │ │ │││   0x00007fa3d05fb7b6: vmovdqu %ymm0,-0x38(%rcx,%rdx,8)
  4.58%    2.43%  │ │ │││   0x00007fa3d05fb7bc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
 12.95%    9.43%  │ │ │││   0x00007fa3d05fb7c2: vmovdqu %ymm1,-0x18(%rcx,%rdx,8)
 53.11%   69.10%  ↘ │ │││   0x00007fa3d05fb7c8: add    $0x8,%rdx
                    ╰ │││   0x00007fa3d05fb7cc: jle    Stub::jlong_disjoint_arraycopy+48 0x0x7fa3d05fb7b0
  0.05%               │││   0x00007fa3d05fb7ce: sub    $0x4,%rdx
                     ╭│││   0x00007fa3d05fb7d2: jg     Stub::jlong_disjoint_arraycopy+100 0x0x7fa3d05fb7e4
                     ││││   0x00007fa3d05fb7d4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                     ││││   0x00007fa3d05fb7da: vmovdqu %ymm0,-0x18(%rcx,%rdx,8)
                     ││││   0x00007fa3d05fb7e0: add    $0x4,%rdx
           0.02%     ↘│││   0x00007fa3d05fb7e4: (bad)  
                      │││   0x00007fa3d05fb7e7: rol    $0xf5,%ch
                      │││   0x00007fa3d05fb7ea: out    %eax,(%dx)
                      │││   0x00007fa3d05fb7eb: leaveq 
  0.07%               │││   0x00007fa3d05fb7ec: sub    $0x4,%rdx
                      ╰││   0x00007fa3d05fb7f0: jl     Stub::jlong_disjoint_arraycopy+22 0x0x7fa3d05fb796
                       ││   0x00007fa3d05fb7f2: xor    %rax,%rax
                       ││   0x00007fa3d05fb7f5: leaveq 
  0.15%    0.09%       ││   0x00007fa3d05fb7f6: retq   
                       ││ StubRoutines::jlong_arraycopy [0x00007fa3d05fb800, 0x00007fa3d05fb883[ (131 bytes)
                       ││   0x00007fa3d05fb800: push   %rbp
                       ││   0x00007fa3d05fb801: mov    %rsp,%rbp
  0.04%    0.07%       ││   0x00007fa3d05fb804: cmp    %rdi,%rsi
                       ││   0x00007fa3d05fb807: lea    (%rdi,%rdx,8),%rax
                       ╰│   0x00007fa3d05fb80b: jbe    Stub::jlong_disjoint_arraycopy+4 0x0x7fa3d05fb784
  0.07%    0.05%        │   0x00007fa3d05fb811: cmp    %rax,%rsi
                        ╰   0x00007fa3d05fb814: jae    Stub::jlong_disjoint_arraycopy+4 0x0x7fa3d05fb784
                            0x00007fa3d05fb81a: jmpq   Stub::jlong_arraycopy+86 0x0x7fa3d05fb856
                         ↗  0x00007fa3d05fb81f: mov    -0x8(%rdi,%rdx,8),%rax
                         │  0x00007fa3d05fb824: mov    %rax,-0x8(%rsi,%rdx,8)
                         │  0x00007fa3d05fb829: dec    %rdx
                         ╰  0x00007fa3d05fb82c: jne    Stub::jlong_arraycopy+31 0x0x7fa3d05fb81f
                            0x00007fa3d05fb82e: xor    %rax,%rax
                            0x00007fa3d05fb831: leaveq 
                            0x00007fa3d05fb832: retq   
                            0x00007fa3d05fb833: nopw   0x0(%rax,%rax,1)
....................................................................................................
 90.82%   90.68%  <total for region 1>

....[Hottest Regions]...............................................................................
 90.82%   90.68%  [0x7fa3d05fb766:0x7fa3d05fb833] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  2.38%    2.32%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.80%    0.86%  [0x7fa3e5308cb8:0x7fa3e5308cf6] in acl_CopyRight (libjvm.so)
  0.44%    0.54%  [0x7fa3d07a35e5:0x7fa3d07a365e] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.25%    0.36%  [0x7fa3d05fbd71:0x7fa3d05fbdcd] in StubRoutines::unsafe_arraycopy
  0.22%    0.04%  [0xffffffff817efbc0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.18%    0.14%  [0xffffffff810dd29c:0xffffffff810dd2d3] in [unknown] ([unknown])
  0.15%    0.04%  [0x7fa3d05fbdb0:0x7fa3d05fbdf0] in StubRoutines::unsafe_arraycopy
  0.15%    0.11%  [0x7fa3e5b6d2c0:0x7fa3e5b6d322] in _IO_default_xsputn (libc-2.21.so)
  0.09%    0.05%  [0xffffffff8121abd8:0xffffffff8121ac06] in [unknown] ([unknown])
  0.09%    0.07%  [0xffffffff817efb49:0xffffffff817efb49] in [unknown] ([unknown])
  0.09%    0.05%  [0xffffffff817f1a15:0xffffffff817f1a26] in [unknown] ([unknown])
  0.09%    0.18%  [0x7fa3d07a3000:0x7fa3d07a3055] in net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.07%    0.05%  [0xffffffff811ffef0:0xffffffff811fff18] in [unknown] ([unknown])
  0.07%    0.09%  [0x7fa3e543a230:0x7fa3e543a247] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.05%    0.05%  [0xffffffff811ffe78:0xffffffff811ffe7f] in [unknown] ([unknown])
  0.05%           [0xffffffff8123ebd1:0xffffffff8123ec03] in [unknown] ([unknown])
  0.05%           [0xffffffff812d2c74:0xffffffff812d2c97] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff813d3030:0xffffffff813d3037] in [unknown] ([unknown])
  0.05%    0.02%  [0x7fa3e559ec50:0x7fa3e559ec5d] in Unsafe_CopyMemory2 (libjvm.so)
  3.78%    4.28%  <...other 305 warm regions...>
....................................................................................................
 99.95%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 90.82%   90.68%  StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  4.93%    4.28%  [unknown] ([unknown])
  0.80%    0.86%  acl_CopyRight (libjvm.so)
  0.56%    0.86%  net.greypanther.generated.BenchmarkLongArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.40%    0.40%  StubRoutines::unsafe_arraycopy
  0.29%    0.13%  <unresolved>
  0.20%    0.22%  vfprintf (libc-2.21.so)
  0.15%    0.13%  _IO_default_xsputn (libc-2.21.so)
  0.11%    0.13%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%    0.11%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.04%  _ZN12outputStream5printEPKcz (libjvm.so)
  0.05%    0.09%  strlen (libc-2.21.so)
  0.05%    0.13%  _IO_fwrite (libc-2.21.so)
  0.05%    0.02%  Unsafe_CopyMemory2 (libjvm.so)
  0.05%    0.02%  __pthread_enable_asynccancel (libpthread-2.21.so)
  0.04%           _ZN9xmlStream5flushEv (libjvm.so)
  0.04%    0.05%  _itoa_word (libc-2.21.so)
  0.04%    0.04%  pthread_getspecific (libpthread-2.21.so)
  0.04%    0.04%  _ZN13defaultStream4holdEl (libjvm.so)
  0.04%    0.02%  _IO_fflush (libc-2.21.so)
  1.15%    0.92%  <...other 58 warm methods...>
....................................................................................................
 99.95%   99.14%  <totals>

....[Distribution by Area]..........................................................................
 92.16%   92.14%  <generated code>
  4.93%    4.28%  <native code in ([unknown])>
  2.00%    2.46%  <native code in (libjvm.so)>
  0.76%    1.03%  <native code in (libc-2.21.so)>
  0.09%    0.07%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.95%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkObjectArrayCopy.benchmarkArrayManualCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 60.00% complete, ETA 00:01:56
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 532108.958 ops/s
# Warmup Iteration   2: 573868.562 ops/s
# Warmup Iteration   3: 440993.732 ops/s
Iteration   1: 464441.066 ops/s
Iteration   2: 473005.933 ops/s
Iteration   3: 442337.037 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy":
  459928.012 ±(99.9%) 288701.383 ops/s [Average]
  (min, avg, max) = (442337.037, 459928.012, 473005.933), stdev = 15824.697
  CI (99.9%): [171226.629, 748629.395] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 135732 total address lines.
Perf output processed (skipped 3.113 seconds):
 Column 1: cycles (5628 events)
 Column 2: instructions (5640 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f8e451f8a8b:0x7f8e451f8c48] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

                     0x00007f8e451f8a8b: mov    0x10(%r12,%r10,8),%r9d  ;*aaload
                                                                   ; - net.greypanther.BenchmarkObjectArrayCopy::copy@10 (line 31)
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                     0x00007f8e451f8a90: mov    %edx,%r8d
                     0x00007f8e451f8a93: add    $0xfffffffffffffff9,%r8d
                     0x00007f8e451f8a97: cmp    %r8d,%edx
                     0x00007f8e451f8a9a: mov    $0x80000000,%edi
                     0x00007f8e451f8a9f: cmovl  %edi,%r8d
                     0x00007f8e451f8aa3: lea    (%r12,%r10,8),%rdi
           0.02%     0x00007f8e451f8aa7: lea    (%r12,%r11,8),%rsi  ;*getfield objectTarget
                                                                   ; - net.greypanther.BenchmarkObjectArrayCopy::copy@1 (line 31)
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                     0x00007f8e451f8aab: lea    0x10(%r12,%r11,8),%r10
                     0x00007f8e451f8ab0: mov    %r9d,(%r10)
                     0x00007f8e451f8ab3: shr    $0x9,%r10
  0.02%              0x00007f8e451f8ab7: mov    $0x7f8e566de000,%r11
                     0x00007f8e451f8ac1: mov    %r12b,(%r11,%r10,1)  ;*aastore
                                                                   ; - net.greypanther.BenchmarkObjectArrayCopy::copy@11 (line 31)
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                     0x00007f8e451f8ac5: cmp    $0x1,%r8d
                     0x00007f8e451f8ac9: jle    0x00007f8e451f8c79
                     0x00007f8e451f8acf: mov    $0x1,%r14d
  0.02%              0x00007f8e451f8ad5: vmovq  %rbx,%xmm0
                     0x00007f8e451f8ada: vmovq  %rcx,%xmm1
  0.02%              0x00007f8e451f8adf: vmovq  %rax,%xmm2
                     0x00007f8e451f8ae4: vmovq  %rbp,%xmm3
                     0x00007f8e451f8ae9: vmovd  %edx,%xmm4
                     0x00007f8e451f8aed: mov    %r8d,(%rsp)        ;*aload_0
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.11%    0.12%  ↗  0x00007f8e451f8af1: movslq %r14d,%r10
           0.02%  │  0x00007f8e451f8af4: movslq %r14d,%r11
  2.74%    4.20%  │  0x00007f8e451f8af7: shl    $0x2,%r10          ;*aaload
                  │                                                ; - net.greypanther.BenchmarkObjectArrayCopy::copy@10 (line 31)
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
           0.18%  │  0x00007f8e451f8afb: mov    0x10(%rdi,%r10,1),%r9d
  0.12%    0.23%  │  0x00007f8e451f8b00: lea    0x10(%rsi,%r10,1),%r8
           0.04%  │  0x00007f8e451f8b05: mov    %r9d,(%r8)
  3.36%    4.45%  │  0x00007f8e451f8b08: shl    $0x2,%r11
  0.02%    0.02%  │  0x00007f8e451f8b0c: mov    0x14(%rdi,%r11,1),%r10d
  0.20%    0.23%  │  0x00007f8e451f8b11: mov    %rsi,%r9
                  │  0x00007f8e451f8b14: add    %r11,%r9
  3.06%    3.39%  │  0x00007f8e451f8b17: mov    %r9,%r13
           0.02%  │  0x00007f8e451f8b1a: add    $0x2c,%r13
  0.05%    0.07%  │  0x00007f8e451f8b1e: mov    %r9,%rbp
  0.02%           │  0x00007f8e451f8b21: add    $0x28,%rbp
  3.09%    1.35%  │  0x00007f8e451f8b25: mov    %r9,%rbx
  0.02%    0.02%  │  0x00007f8e451f8b28: add    $0x14,%rbx
  0.11%    0.04%  │  0x00007f8e451f8b2c: mov    %r10d,(%rbx)
  0.12%    0.11%  │  0x00007f8e451f8b2f: mov    0x18(%rdi,%r11,1),%ecx
  3.06%    3.14%  │  0x00007f8e451f8b34: mov    %r9,%r10
  0.04%           │  0x00007f8e451f8b37: add    $0x18,%r10
  0.09%    0.11%  │  0x00007f8e451f8b3b: mov    %ecx,(%r10)
  0.27%    0.12%  │  0x00007f8e451f8b3e: mov    0x1c(%rdi,%r11,1),%ecx
  2.74%    3.94%  │  0x00007f8e451f8b43: mov    %r9,%rdx
  0.02%           │  0x00007f8e451f8b46: add    $0x1c,%rdx
  0.05%    0.04%  │  0x00007f8e451f8b4a: mov    %ecx,(%rdx)
  4.58%    3.49%  │  0x00007f8e451f8b4c: mov    0x20(%rdi,%r11,1),%ecx
  1.03%    1.28%  │  0x00007f8e451f8b51: mov    %r9,%rax
  0.02%    0.04%  │  0x00007f8e451f8b54: add    $0x20,%rax
  0.07%    0.05%  │  0x00007f8e451f8b58: mov    %ecx,(%rax)
  2.29%    2.82%  │  0x00007f8e451f8b5a: mov    0x24(%rdi,%r11,1),%ecx
  1.47%    1.52%  │  0x00007f8e451f8b5f: add    $0x24,%r9
                  │  0x00007f8e451f8b63: mov    %ecx,(%r9)
  1.12%    1.79%  │  0x00007f8e451f8b66: mov    0x28(%rdi,%r11,1),%ecx
  2.29%    2.39%  │  0x00007f8e451f8b6b: mov    %ecx,0x0(%rbp)
  0.25%    0.23%  │  0x00007f8e451f8b6e: mov    0x2c(%rdi,%r11,1),%ecx
  0.05%    0.04%  │  0x00007f8e451f8b73: mov    %ecx,0x0(%r13)
  1.03%    1.40%  │  0x00007f8e451f8b77: mov    %r9,%r11
  2.10%    1.70%  │  0x00007f8e451f8b7a: shr    $0x9,%r8
  0.18%    0.09%  │  0x00007f8e451f8b7e: mov    $0x7f8e566de000,%r9
                  │  0x00007f8e451f8b88: mov    %r12b,(%r9,%r8,1)
  4.05%    1.38%  │  0x00007f8e451f8b8c: shr    $0x9,%r11
  0.04%    0.11%  │  0x00007f8e451f8b90: mov    %rax,%r8
  0.11%    0.14%  │  0x00007f8e451f8b93: mov    %rdx,%r9
           0.02%  │  0x00007f8e451f8b96: shr    $0x9,%r8
  3.25%    2.20%  │  0x00007f8e451f8b9a: shr    $0x9,%r9
  0.11%    0.04%  │  0x00007f8e451f8b9e: mov    %r10,%rcx
  0.16%    0.11%  │  0x00007f8e451f8ba1: mov    %rbx,%r10
                  │  0x00007f8e451f8ba4: shr    $0x9,%rcx
  3.04%    1.17%  │  0x00007f8e451f8ba8: shr    $0x9,%r10
  0.09%    0.09%  │  0x00007f8e451f8bac: mov    $0x7f8e566de000,%rbx
  0.16%    0.14%  │  0x00007f8e451f8bb6: mov    %r12b,(%rbx,%r10,1)
  6.02%    6.15%  │  0x00007f8e451f8bba: mov    $0x7f8e566de000,%r10
  0.07%    0.05%  │  0x00007f8e451f8bc4: mov    %r12b,(%r10,%rcx,1)
  3.41%    3.01%  │  0x00007f8e451f8bc8: mov    %r12b,(%r10,%r9,1)
  2.42%    2.75%  │  0x00007f8e451f8bcc: mov    %r12b,(%r10,%r8,1)
  0.82%    1.31%  │  0x00007f8e451f8bd0: mov    %r12b,(%r10,%r11,1)
  0.82%    1.06%  │  0x00007f8e451f8bd4: mov    %rbp,%r10
  0.82%    0.82%  │  0x00007f8e451f8bd7: mov    %r13,%r11
  0.82%    0.94%  │  0x00007f8e451f8bda: shr    $0x9,%r10
  0.69%    1.15%  │  0x00007f8e451f8bde: mov    $0x7f8e566de000,%r8
  0.89%    0.99%  │  0x00007f8e451f8be8: mov    %r12b,(%r8,%r10,1)
  3.22%    3.90%  │  0x00007f8e451f8bec: shr    $0x9,%r11
  0.02%    0.12%  │  0x00007f8e451f8bf0: mov    $0x7f8e566de000,%r10
           0.02%  │  0x00007f8e451f8bfa: mov    %r12b,(%r10,%r11,1)  ;*aastore
                  │                                                ; - net.greypanther.BenchmarkObjectArrayCopy::copy@11 (line 31)
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  3.61%    3.90%  │  0x00007f8e451f8bfe: add    $0x8,%r14d         ;*iinc
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  │                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.05%    0.09%  │  0x00007f8e451f8c02: cmp    (%rsp),%r14d
                  ╰  0x00007f8e451f8c06: jl     0x00007f8e451f8af1  ;*if_icmpge
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.09%    0.18%     0x00007f8e451f8c0c: vmovq  %xmm0,%rbx
  0.07%    0.11%     0x00007f8e451f8c11: vmovq  %xmm1,%rcx
                     0x00007f8e451f8c16: vmovq  %xmm2,%rax
                     0x00007f8e451f8c1b: vmovq  %xmm3,%rbp
                     0x00007f8e451f8c20: vmovd  %xmm4,%edx
           0.02%     0x00007f8e451f8c24: cmp    %edx,%r14d
                     0x00007f8e451f8c27: jl     0x00007f8e451f89ec
                     0x00007f8e451f8c2d: jmpq   0x00007f8e451f8a1d
                     0x00007f8e451f8c32: mov    $0x1,%ebp          ;*aload_2
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@30 (line 107)
                     0x00007f8e451f8c37: mov    $0x7f8e5c8ebe10,%r10
                     0x00007f8e451f8c41: callq  *%r10              ;*invokestatic nanoTime
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@31 (line 107)
                     0x00007f8e451f8c44: mov    %rbp,0x18(%rbx)    ;*putfield measuredOps
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@46 (line 109)
                     0x00007f8e451f8c48: mov    %rax,0x30(%rbx)    ;*putfield stopTime
....................................................................................................
 70.63%   70.64%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f8e451faabb:0x7f8e451fac12] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

                     0x00007f8e451faabb: mov    $0x1,%eax
                     0x00007f8e451faac0: vmovq  %rbx,%xmm0
                     0x00007f8e451faac5: vmovq  %r14,%xmm1
                     0x00007f8e451faaca: vmovq  %rdx,%xmm2
                     0x00007f8e451faacf: vmovq  %r13,%xmm3
                     0x00007f8e451faad4: vmovd  %edi,%xmm5
                     0x00007f8e451faad8: mov    %r8d,(%rsp)
                     0x00007f8e451faadc: nopl   0x0(%rax)          ;*aload_0
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.23%    0.27%  ↗  0x00007f8e451faae0: mov    0x10(%rcx,%rax,4),%r11d
  0.04%           │  0x00007f8e451faae5: lea    0x10(%rsi,%rax,4),%r9
  0.34%    0.35%  │  0x00007f8e451faaea: mov    %r11d,(%r9)
  0.27%    0.25%  │  0x00007f8e451faaed: movslq %eax,%r10
  0.32%    0.43%  │  0x00007f8e451faaf0: lea    0x14(%rsi,%r10,4),%r14
           0.02%  │  0x00007f8e451faaf5: lea    0x2c(%rsi,%r10,4),%rbp
  0.44%    0.67%  │  0x00007f8e451faafa: mov    0x14(%rcx,%r10,4),%r8d
  0.14%    0.21%  │  0x00007f8e451faaff: lea    0x18(%rsi,%r10,4),%r13
  0.25%    0.20%  │  0x00007f8e451fab04: mov    %r8d,(%r14)
  0.28%    0.16%  │  0x00007f8e451fab07: lea    0x1c(%rsi,%r10,4),%rbx
  0.32%    0.55%  │  0x00007f8e451fab0c: mov    0x18(%rcx,%r10,4),%r8d
  0.23%    0.05%  │  0x00007f8e451fab11: lea    0x20(%rsi,%r10,4),%rdi
  0.20%    0.20%  │  0x00007f8e451fab16: mov    %r8d,0x0(%r13)
  0.34%    0.34%  │  0x00007f8e451fab1a: lea    0x24(%rsi,%r10,4),%r11
  0.34%    0.43%  │  0x00007f8e451fab1f: mov    0x1c(%rcx,%r10,4),%r8d
  0.20%    0.07%  │  0x00007f8e451fab24: lea    0x28(%rsi,%r10,4),%rdx
  0.23%    0.25%  │  0x00007f8e451fab29: mov    %r8d,(%rbx)
  0.34%    0.41%  │  0x00007f8e451fab2c: mov    0x20(%rcx,%r10,4),%r8d
  0.32%    0.37%  │  0x00007f8e451fab31: mov    %r8d,(%rdi)
  0.23%    0.16%  │  0x00007f8e451fab34: mov    0x24(%rcx,%r10,4),%r8d
  0.21%    0.12%  │  0x00007f8e451fab39: mov    %r8d,(%r11)
  0.57%    0.64%  │  0x00007f8e451fab3c: mov    0x28(%rcx,%r10,4),%r8d
  0.04%           │  0x00007f8e451fab41: mov    %r8d,(%rdx)
  0.57%    0.71%  │  0x00007f8e451fab44: mov    0x2c(%rcx,%r10,4),%r8d
  0.02%    0.04%  │  0x00007f8e451fab49: mov    %r8d,0x0(%rbp)
  1.01%    0.60%  │  0x00007f8e451fab4d: mov    %r9,%r8
                  │  0x00007f8e451fab50: mov    %rdx,%r10
  0.05%    0.04%  │  0x00007f8e451fab53: shr    $0x9,%r8
  0.02%    0.02%  │  0x00007f8e451fab57: mov    $0x7f8e566de000,%r9
  0.87%    0.92%  │  0x00007f8e451fab61: mov    %r12b,(%r9,%r8,1)
           0.04%  │  0x00007f8e451fab65: shr    $0x9,%r10
  0.02%    0.04%  │  0x00007f8e451fab69: mov    %r11,%r8
           0.02%  │  0x00007f8e451fab6c: mov    %rdi,%r9
  0.71%    1.12%  │  0x00007f8e451fab6f: shr    $0x9,%r8
                  │  0x00007f8e451fab73: shr    $0x9,%r9
  0.05%    0.07%  │  0x00007f8e451fab77: mov    %r13,%rdi
           0.02%  │  0x00007f8e451fab7a: shr    $0x9,%rbx
  1.07%    0.96%  │  0x00007f8e451fab7e: shr    $0x9,%rdi
  0.04%    0.04%  │  0x00007f8e451fab82: mov    %rbp,%rdx
  0.09%    0.04%  │  0x00007f8e451fab85: mov    %r14,%r11
  0.02%    0.02%  │  0x00007f8e451fab88: shr    $0x9,%rdx
  0.98%    1.19%  │  0x00007f8e451fab8c: shr    $0x9,%r11
  0.02%           │  0x00007f8e451fab90: mov    $0x7f8e566de000,%rbp
  0.02%    0.04%  │  0x00007f8e451fab9a: mov    %r12b,0x0(%rbp,%r11,1)
  0.07%    0.05%  │  0x00007f8e451fab9f: mov    $0x7f8e566de000,%r11
  0.80%    0.92%  │  0x00007f8e451faba9: mov    %r12b,(%r11,%rdi,1)
  0.02%    0.07%  │  0x00007f8e451fabad: mov    %r12b,(%r11,%rbx,1)
  0.11%    0.12%  │  0x00007f8e451fabb1: mov    %r12b,(%r11,%r9,1)
  0.09%    0.04%  │  0x00007f8e451fabb5: mov    %r12b,(%r11,%r8,1)
  1.24%    0.90%  │  0x00007f8e451fabb9: mov    %r12b,(%r11,%r10,1)
  0.94%    0.83%  │  0x00007f8e451fabbd: mov    $0x7f8e566de000,%r10
  0.04%    0.07%  │  0x00007f8e451fabc7: mov    %r12b,(%r10,%rdx,1)  ;*aastore
                  │                                                ; - net.greypanther.BenchmarkObjectArrayCopy::copy@11 (line 31)
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.53%    0.34%  │  0x00007f8e451fabcb: add    $0x8,%eax          ;*iinc
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  │                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.02%    0.02%  │  0x00007f8e451fabce: cmp    (%rsp),%eax
                  ╰  0x00007f8e451fabd1: jl     0x00007f8e451faae0  ;*if_icmpge
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                     0x00007f8e451fabd7: vmovq  %xmm0,%rbx
                     0x00007f8e451fabdc: vmovq  %xmm1,%r14
           0.02%     0x00007f8e451fabe1: vmovq  %xmm2,%rdx
                     0x00007f8e451fabe6: vmovq  %xmm3,%r13
                     0x00007f8e451fabeb: vmovd  %xmm5,%edi
           0.02%     0x00007f8e451fabef: cmp    %edi,%eax
                     0x00007f8e451fabf1: jl     0x00007f8e451fa9e0
                     0x00007f8e451fabf7: jmpq   0x00007f8e451faa08
                     0x00007f8e451fabfc: mov    $0x7f8e5c8ebe10,%r10
                     0x00007f8e451fac06: callq  *%r10              ;*invokestatic nanoTime
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@31 (line 107)
                     0x00007f8e451fac09: mov    %rax,0x30(%r13)    ;*putfield stopTime
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@34 (line 107)
                                                                   ; implicit exception: dispatches to 0x00007f8e451facad
                     0x00007f8e451fac0d: mov    0x18(%rsp),%r10
                     0x00007f8e451fac12: mov    %r10,0x20(%r13)    ;*putfield realTime
....................................................................................................
 15.26%   15.43%  <total for region 2>

....[Hottest Regions]...............................................................................
 70.63%   70.64%  [0x7f8e451f8a8b:0x7f8e451f8c48] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
 15.26%   15.43%  [0x7f8e451faabb:0x7f8e451fac12] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  6.59%    6.49%  [0x7f8e451f4b35:0x7f8e451f4c79] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  1.94%    2.34%  [0x7f8e451f2958:0x7f8e451f2aca] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.59%    0.57%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.34%    0.23%  [0x7f8e451f89e3:0x7f8e451f8a93] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  0.12%    0.04%  [0x7f8e451fa9c5:0x7f8e451faa08] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  0.11%    0.05%  [0xffffffff811fcf70:0xffffffff811fcfe7] in [unknown] ([unknown])
  0.09%    0.07%  [0xffffffff810dd290:0xffffffff810dd2d3] in [unknown] ([unknown])
  0.09%    0.04%  [0xffffffff813d3035:0xffffffff813d3037] in [unknown] ([unknown])
  0.09%    0.05%  [0xffffffff817efb39:0xffffffff817efb49] in [unknown] ([unknown])
  0.09%           [0xffffffff817f1c10:0xffffffff817f1c27] in [unknown] ([unknown])
  0.09%    0.11%  [0x7f8e5c8fe230:0x7f8e5c8fe247] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.05%  [0xffffffff811ffe46:0xffffffff811ffe7f] in [unknown] ([unknown])
  0.07%    0.05%  [0xffffffff8121abd4:0xffffffff8121ac06] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff81173887:0xffffffff81173887] in [unknown] ([unknown])
  0.05%           [0xffffffff811b227a:0xffffffff811b227a] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff811ff4ba:0xffffffff811ff4ba] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff817efbc5:0xffffffff817efbd2] in [unknown] ([unknown])
  0.05%    0.09%  [0xffffffff817f16a0:0xffffffff817f16bb] in [unknown] ([unknown])
  3.54%    3.63%  <...other 285 warm regions...>
....................................................................................................
 99.96%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 92.96%   92.87%  net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  2.88%    2.45%  [unknown] ([unknown])
  1.95%    2.34%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.12%    0.02%  _IO_fflush (libc-2.21.so)
  0.11%    0.16%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.12%  _IO_fwrite (libc-2.21.so)
  0.07%    0.11%  vfprintf (libc-2.21.so)
  0.05%    0.05%  _IO_default_xsputn (libc-2.21.so)
  0.05%    0.02%  jio_print (libjvm.so)
  0.05%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.05%           _ZN7nmethod14embeddedOop_atEPh (libjvm.so)
  0.05%    0.05%  __strchr_sse2 (libc-2.21.so)
  0.05%    0.02%  pthread_getspecific (libpthread-2.21.so)
  0.05%           oappend (hsdis-amd64.so)
  0.05%    0.11%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.04%    0.02%  _ZN12stringStream5writeEPKcm (libjvm.so)
  0.04%    0.02%  _IO_str_init_static_internal (libc-2.21.so)
  0.04%           decode_instructions (hsdis-amd64.so)
  0.04%           _ZN12PhaseChaitin19interfere_with_liveEjP8IndexSet (libjvm.so)
  0.04%    0.14%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  1.19%    0.50%  <...other 63 warm methods...>
....................................................................................................
 99.96%   98.99%  <totals>

....[Distribution by Area]..........................................................................
 95.01%   95.23%  <generated code>
  2.88%    2.45%  <native code in ([unknown])>
  1.28%    1.49%  <native code in (libjvm.so)>
  0.53%    0.74%  <native code in (libc-2.21.so)>
  0.18%    0.07%  <native code in (hsdis-amd64.so)>
  0.09%    0.02%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.96%  100.00%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkObjectArrayCopy.benchmarkArrayManualCopy_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 63.33% complete, ETA 00:01:47
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 569114.129 ops/s
# Warmup Iteration   2: 499148.092 ops/s
# Warmup Iteration   3: 465304.319 ops/s
Iteration   1: 481279.679 ops/s
Iteration   2: 489849.901 ops/s
Iteration   3: 451143.530 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Dec":
  474091.037 ±(99.9%) 370892.333 ops/s [Average]
  (min, avg, max) = (451143.530, 474091.037, 489849.901), stdev = 20329.860
  CI (99.9%): [103198.704, 844983.370] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 129693 total address lines.
Perf output processed (skipped 3.138 seconds):
 Column 1: cycles (5765 events)
 Column 2: instructions (5756 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7fb9e91e8332:0x7fb9e91e8517] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                       0x00007fb9e91e8332: test   %r10d,%r10d
                       0x00007fb9e91e8335: jbe    0x00007fb9e91e852b
                       0x00007fb9e91e833b: cmp    %r10d,%r14d
                       0x00007fb9e91e833e: jae    0x00007fb9e91e852b  ;*aload_0
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                       0x00007fb9e91e8344: mov    0x2c(%r9),%r10d    ;*getfield objectTarget
                                                                     ; - net.greypanther.BenchmarkObjectArrayCopy::copy@1 (line 31)
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.02%       0x00007fb9e91e8348: mov    0xc(%r12,%r10,8),%edi  ;*aastore
                                                                     ; - net.greypanther.BenchmarkObjectArrayCopy::copy@11 (line 31)
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                                                                     ; implicit exception: dispatches to 0x00007fb9e91e852b
  0.02%                0x00007fb9e91e834d: test   %edi,%edi
                       0x00007fb9e91e834f: jbe    0x00007fb9e91e852b
                       0x00007fb9e91e8355: cmp    %edi,%r14d
                       0x00007fb9e91e8358: jae    0x00007fb9e91e852b
                       0x00007fb9e91e835e: mov    0x8(%r12,%r10,8),%edx
           0.02%       0x00007fb9e91e8363: cmp    $0xf80022f2,%edx   ;   {metadata(&apos;java/lang/Object&apos;[])}
                       0x00007fb9e91e8369: jne    0x00007fb9e91e852b  ;*aload_0
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%                0x00007fb9e91e836f: lea    (%r12,%r10,8),%rdi  ;*getfield objectTarget
                                                                     ; - net.greypanther.BenchmarkObjectArrayCopy::copy@1 (line 31)
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                       0x00007fb9e91e8373: add    $0xfffffffffffffffe,%r11d
                       0x00007fb9e91e8377: lea    (%r12,%rcx,8),%r13  ;*aload_0
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.02%  ↗    0x00007fb9e91e837b: movslq %r14d,%rcx
  0.03%           │    0x00007fb9e91e837e: shl    $0x2,%rcx          ;*aaload
                  │                                                  ; - net.greypanther.BenchmarkObjectArrayCopy::copy@10 (line 31)
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │                                                  ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │    0x00007fb9e91e8382: mov    0x10(%r13,%rcx,1),%r10d
                  │    0x00007fb9e91e8387: lea    0x10(%rdi,%rcx,1),%rcx
                  │    0x00007fb9e91e838c: mov    %r10d,(%rcx)
           0.02%  │    0x00007fb9e91e838f: mov    %rcx,%r10
                  │    0x00007fb9e91e8392: shr    $0x9,%r10
                  │    0x00007fb9e91e8396: mov    $0x7fb9f9138000,%rcx
                  │    0x00007fb9e91e83a0: mov    %r12b,(%rcx,%r10,1)  ;*aastore
                  │                                                  ; - net.greypanther.BenchmarkObjectArrayCopy::copy@11 (line 31)
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │                                                  ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%           │    0x00007fb9e91e83a4: dec    %r14d              ;*iinc
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  │                                                  ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │    0x00007fb9e91e83a7: cmp    %r11d,%r14d
                  ╰    0x00007fb9e91e83aa: jg     0x00007fb9e91e837b  ;*iflt
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                       0x00007fb9e91e83ac: cmp    $0x6,%r14d
                   ╭   0x00007fb9e91e83b0: jle    0x00007fb9e91e84f2
           0.02%   │   0x00007fb9e91e83b6: vmovq  %rbx,%xmm0
                   │   0x00007fb9e91e83bb: vmovq  %r9,%xmm1
                   │   0x00007fb9e91e83c0: vmovq  %r8,%xmm2
                   │   0x00007fb9e91e83c5: vmovq  %rbp,%xmm3
                   │   0x00007fb9e91e83ca: nopw   0x0(%rax,%rax,1)   ;*aload_0
                   │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                   │                                                 ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.03%    0.07%   │↗  0x00007fb9e91e83d0: movslq %r14d,%r10
  0.03%    0.10%   ││  0x00007fb9e91e83d3: shl    $0x2,%r10
  3.00%    3.96%   ││  0x00007fb9e91e83d7: mov    %r13,%r11
  0.05%    0.09%   ││  0x00007fb9e91e83da: add    %r10,%r11          ;*aaload
                   ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::copy@10 (line 31)
                   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                   ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.10%   ││  0x00007fb9e91e83dd: mov    %rdi,%r8
  0.10%    0.12%   ││  0x00007fb9e91e83e0: add    %r10,%r8
  2.78%    3.75%   ││  0x00007fb9e91e83e3: mov    0x10(%r11),%r10d
  0.03%    0.03%   ││  0x00007fb9e91e83e7: mov    %r8,%r9
  0.07%    0.03%   ││  0x00007fb9e91e83ea: add    $0xfffffffffffffff8,%r9
  0.02%    0.09%   ││  0x00007fb9e91e83ee: mov    %r8,%rbp
  3.09%    3.63%   ││  0x00007fb9e91e83f1: add    $0xfffffffffffffffc,%rbp
  0.12%    0.14%   ││  0x00007fb9e91e83f5: mov    %r8,%rax
  0.03%    0.02%   ││  0x00007fb9e91e83f8: add    $0xfffffffffffffff4,%rax
  0.17%    0.09%   ││  0x00007fb9e91e83fc: mov    %r8,%rcx
  3.16%    4.13%   ││  0x00007fb9e91e83ff: add    $0x10,%rcx
  0.02%    0.02%   ││  0x00007fb9e91e8403: mov    %r10d,(%rcx)
  0.28%    0.31%   ││  0x00007fb9e91e8406: mov    %r8,%rdx
  0.03%            ││  0x00007fb9e91e8409: add    $0xc,%rdx
  3.17%    3.82%   ││  0x00007fb9e91e840d: mov    0xc(%r11),%r10d
  0.09%    0.05%   ││  0x00007fb9e91e8411: mov    %r10d,(%rdx)
  0.12%    0.14%   ││  0x00007fb9e91e8414: mov    %r8,%r10
  0.03%    0.02%   ││  0x00007fb9e91e8417: add    $0x8,%r10
  3.12%    3.30%   ││  0x00007fb9e91e841b: mov    0x8(%r11),%ebx
  0.12%    0.12%   ││  0x00007fb9e91e841f: mov    %ebx,(%r10)
  0.24%    0.21%   ││  0x00007fb9e91e8422: mov    %r8,%rsi
  0.02%    0.02%   ││  0x00007fb9e91e8425: add    $0x4,%rsi
  3.16%    3.54%   ││  0x00007fb9e91e8429: mov    0x4(%r11),%ebx
           0.10%   ││  0x00007fb9e91e842d: mov    %ebx,(%rsi)
  0.40%    0.28%   ││  0x00007fb9e91e842f: mov    (%r11),%ebx
  0.10%    0.12%   ││  0x00007fb9e91e8432: mov    %ebx,(%r8)
  3.38%    3.27%   ││  0x00007fb9e91e8435: mov    -0x4(%r11),%ebx
  0.03%    0.02%   ││  0x00007fb9e91e8439: mov    %ebx,0x0(%rbp)
  0.29%    0.23%   ││  0x00007fb9e91e843c: mov    -0x8(%r11),%ebx
  0.07%    0.03%   ││  0x00007fb9e91e8440: mov    %ebx,(%r9)
  3.24%    3.58%   ││  0x00007fb9e91e8443: mov    -0xc(%r11),%ebx
  0.03%    0.03%   ││  0x00007fb9e91e8447: mov    %ebx,(%rax)
  0.28%    0.33%   ││  0x00007fb9e91e8449: mov    %rcx,%r11
  0.05%    0.02%   ││  0x00007fb9e91e844c: shr    $0x9,%r9
  3.07%    3.94%   ││  0x00007fb9e91e8450: shr    $0x9,%r11
  0.02%    0.02%   ││  0x00007fb9e91e8454: mov    $0x7fb9f9138000,%rcx
  0.23%    0.26%   ││  0x00007fb9e91e845e: mov    %r12b,(%rcx,%r11,1)
  3.05%    3.77%   ││  0x00007fb9e91e8462: mov    %r8,%r11
  0.10%    0.16%   ││  0x00007fb9e91e8465: mov    %rsi,%r8
                   ││  0x00007fb9e91e8468: shr    $0x9,%r11
  0.14%    0.17%   ││  0x00007fb9e91e846c: shr    $0x9,%r8
  3.16%    0.66%   ││  0x00007fb9e91e8470: mov    %r10,%rcx
  0.09%    0.05%   ││  0x00007fb9e91e8473: mov    %rdx,%r10
  0.02%    0.03%   ││  0x00007fb9e91e8476: shr    $0x9,%rcx
  0.19%    0.14%   ││  0x00007fb9e91e847a: shr    $0x9,%r10
  3.54%    1.23%   ││  0x00007fb9e91e847e: mov    $0x7fb9f9138000,%rbx
  0.09%    0.07%   ││  0x00007fb9e91e8488: mov    %r12b,(%rbx,%r10,1)
  0.29%    0.26%   ││  0x00007fb9e91e848c: mov    $0x7fb9f9138000,%r10
  0.14%    0.14%   ││  0x00007fb9e91e8496: mov    %r12b,(%r10,%rcx,1)
  4.91%    5.32%   ││  0x00007fb9e91e849a: mov    %r12b,(%r10,%r8,1)
  3.50%    2.28%   ││  0x00007fb9e91e849e: mov    %r12b,(%r10,%r11,1)
  1.86%    0.19%   ││  0x00007fb9e91e84a2: mov    %rax,%r8
  0.09%    0.07%   ││  0x00007fb9e91e84a5: mov    %rbp,%r10
  0.09%    0.03%   ││  0x00007fb9e91e84a8: shr    $0x9,%r8
  1.54%    0.43%   ││  0x00007fb9e91e84ac: shr    $0x9,%r10
  1.61%    0.66%   ││  0x00007fb9e91e84b0: mov    $0x7fb9f9138000,%r11
  0.07%    0.02%   ││  0x00007fb9e91e84ba: mov    %r12b,(%r11,%r10,1)
  0.29%    0.36%   ││  0x00007fb9e91e84be: mov    $0x7fb9f9138000,%r10
  1.67%    2.59%   ││  0x00007fb9e91e84c8: mov    %r12b,(%r10,%r9,1)
  4.74%    5.70%   ││  0x00007fb9e91e84cc: mov    %r12b,(%r10,%r8,1)  ;*aastore
                   ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::copy@11 (line 31)
                   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                   ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  2.91%    4.34%   ││  0x00007fb9e91e84d0: add    $0xfffffffffffffff8,%r14d
                   ││                                                ;*iinc
                   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                   ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
           0.02%   ││  0x00007fb9e91e84d4: cmp    $0x6,%r14d
                   │╰  0x00007fb9e91e84d8: jg     0x00007fb9e91e83d0  ;*iflt
                   │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                   │                                                 ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%            │   0x00007fb9e91e84de: vmovq  %xmm0,%rbx
  0.07%    0.07%   │   0x00007fb9e91e84e3: vmovq  %xmm1,%r9
  0.02%            │   0x00007fb9e91e84e8: vmovq  %xmm2,%r8
  0.02%    0.02%   │   0x00007fb9e91e84ed: vmovq  %xmm3,%rbp
           0.02%   ↘   0x00007fb9e91e84f2: cmp    $0xffffffffffffffff,%r14d
                       0x00007fb9e91e84f6: jg     0x00007fb9e91e82d0
                       0x00007fb9e91e84fc: jmpq   0x00007fb9e91e82ff
                       0x00007fb9e91e8501: mov    $0x1,%ebp          ;*aload_2
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@30 (line 107)
                       0x00007fb9e91e8506: mov    $0x7fb9ff345e10,%r10
                       0x00007fb9e91e8510: callq  *%r10              ;*invokestatic nanoTime
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@31 (line 107)
                       0x00007fb9e91e8513: mov    %rbp,0x18(%rbx)    ;*putfield measuredOps
                                                                     ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@46 (line 109)
                       0x00007fb9e91e8517: mov    %rax,0x30(%rbx)    ;*putfield stopTime
....................................................................................................
 68.69%   69.04%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7fb9e91ea428:0x7fb9e91ea566] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     0x00007fb9e91ea428: cmp    $0x6,%ebp
                     0x00007fb9e91ea42b: jle    0x00007fb9e91ea566
                     0x00007fb9e91ea431: vmovq  %rbx,%xmm0
                     0x00007fb9e91ea436: vmovq  %r9,%xmm1
                     0x00007fb9e91ea43b: vmovq  %r13,%xmm2
                     0x00007fb9e91ea440: vmovq  %r8,%xmm3
                     0x00007fb9e91ea445: nopw   0x0(%rax,%rax,1)   ;*aload_0
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.24%    0.28%  ↗  0x00007fb9e91ea450: movslq %ebp,%r10
  0.12%    0.45%  │  0x00007fb9e91ea453: lea    (%rsi,%r10,4),%r10
  0.47%    0.40%  │  0x00007fb9e91ea457: mov    %r10,%r13
                  │  0x00007fb9e91ea45a: add    $0x10,%r13
  0.23%    0.23%  │  0x00007fb9e91ea45e: mov    %r10,%rax
  0.23%    0.21%  │  0x00007fb9e91ea461: add    $0xc,%rax
  0.49%    0.49%  │  0x00007fb9e91ea465: mov    %r10,%rdx
  0.02%           │  0x00007fb9e91ea468: add    $0x8,%rdx
  0.24%    0.31%  │  0x00007fb9e91ea46c: mov    %r10,%r11
  0.19%    0.33%  │  0x00007fb9e91ea46f: add    $0x4,%r11
  0.47%    0.16%  │  0x00007fb9e91ea473: mov    %r10,%r8
                  │  0x00007fb9e91ea476: add    $0xfffffffffffffffc,%r8
  0.10%    0.23%  │  0x00007fb9e91ea47a: mov    %r10,%r9
  0.21%    0.12%  │  0x00007fb9e91ea47d: add    $0xfffffffffffffff8,%r9
  0.24%    0.35%  │  0x00007fb9e91ea481: mov    %r10,%rcx
  0.02%           │  0x00007fb9e91ea484: add    $0xfffffffffffffff4,%rcx  ;*aastore
                  │                                                ; - net.greypanther.BenchmarkObjectArrayCopy::copy@11 (line 31)
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.14%    0.16%  │  0x00007fb9e91ea488: movslq %ebp,%rbx
  0.21%    0.21%  │  0x00007fb9e91ea48b: vmovq  %xmm3,%rdi
  0.28%    0.16%  │  0x00007fb9e91ea490: lea    (%rdi,%rbx,4),%rbx  ;*aaload
                  │                                                ; - net.greypanther.BenchmarkObjectArrayCopy::copy@10 (line 31)
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │  0x00007fb9e91ea494: mov    0x10(%rbx),%edi
  0.23%    0.23%  │  0x00007fb9e91ea497: mov    %edi,0x0(%r13)
  0.66%    0.57%  │  0x00007fb9e91ea49b: mov    0xc(%rbx),%edi
  0.12%    0.09%  │  0x00007fb9e91ea49e: mov    %edi,(%rax)
  0.33%    0.36%  │  0x00007fb9e91ea4a0: mov    0x8(%rbx),%edi
  0.02%    0.02%  │  0x00007fb9e91ea4a3: mov    %edi,(%rdx)
  0.73%    0.57%  │  0x00007fb9e91ea4a5: mov    0x4(%rbx),%edi
  0.07%    0.05%  │  0x00007fb9e91ea4a8: mov    %edi,(%r11)
  0.24%    0.26%  │  0x00007fb9e91ea4ab: mov    (%rbx),%edi
  0.05%    0.03%  │  0x00007fb9e91ea4ad: mov    %edi,(%r10)
  0.73%    0.56%  │  0x00007fb9e91ea4b0: mov    -0x4(%rbx),%edi
  0.07%    0.02%  │  0x00007fb9e91ea4b3: mov    %edi,(%r8)
  0.43%    0.54%  │  0x00007fb9e91ea4b6: mov    -0x8(%rbx),%edi
  0.02%    0.10%  │  0x00007fb9e91ea4b9: mov    %edi,(%r9)
  0.76%    0.85%  │  0x00007fb9e91ea4bc: mov    -0xc(%rbx),%edi
  0.02%    0.05%  │  0x00007fb9e91ea4bf: mov    %edi,(%rcx)
  0.88%    1.03%  │  0x00007fb9e91ea4c1: shr    $0x9,%rcx
                  │  0x00007fb9e91ea4c5: shr    $0x9,%r9
  0.07%    0.07%  │  0x00007fb9e91ea4c9: shr    $0x9,%r8
                  │  0x00007fb9e91ea4cd: shr    $0x9,%r11
  0.62%    0.63%  │  0x00007fb9e91ea4d1: mov    %rdx,%rbx
                  │  0x00007fb9e91ea4d4: mov    %rax,%rdi
  0.14%    0.10%  │  0x00007fb9e91ea4d7: shr    $0x9,%rbx
                  │  0x00007fb9e91ea4db: shr    $0x9,%rdi
  0.54%    0.45%  │  0x00007fb9e91ea4df: mov    %r13,%rdx
                  │  0x00007fb9e91ea4e2: shr    $0x9,%rdx
  0.09%    0.12%  │  0x00007fb9e91ea4e6: mov    $0x7fb9f9138000,%rax
           0.02%  │  0x00007fb9e91ea4f0: mov    %r12b,(%rax,%rdx,1)
  0.52%    0.49%  │  0x00007fb9e91ea4f4: mov    $0x7fb9f9138000,%rdx
                  │  0x00007fb9e91ea4fe: mov    %r12b,(%rdx,%rdi,1)
  0.19%    0.28%  │  0x00007fb9e91ea502: mov    $0x7fb9f9138000,%rdi
                  │  0x00007fb9e91ea50c: mov    %r12b,(%rdi,%rbx,1)
  0.52%    0.50%  │  0x00007fb9e91ea510: mov    $0x7fb9f9138000,%rbx
                  │  0x00007fb9e91ea51a: mov    %r12b,(%rbx,%r11,1)
  0.10%    0.10%  │  0x00007fb9e91ea51e: shr    $0x9,%r10
                  │  0x00007fb9e91ea522: mov    $0x7fb9f9138000,%r11
  0.56%    0.38%  │  0x00007fb9e91ea52c: mov    %r12b,(%r11,%r10,1)
  1.09%    1.15%  │  0x00007fb9e91ea530: mov    $0x7fb9f9138000,%r10
  0.02%           │  0x00007fb9e91ea53a: mov    %r12b,(%r10,%r8,1)
  1.01%    1.09%  │  0x00007fb9e91ea53e: mov    %r12b,(%r10,%r9,1)
  0.19%    0.26%  │  0x00007fb9e91ea542: mov    %r12b,(%r10,%rcx,1)  ;*aastore
                  │                                                ; - net.greypanther.BenchmarkObjectArrayCopy::copy@11 (line 31)
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.43%    0.49%  │  0x00007fb9e91ea546: add    $0xfffffffffffffff8,%ebp  ;*iinc
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  │                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%           │  0x00007fb9e91ea549: cmp    $0x6,%ebp
                  ╰  0x00007fb9e91ea54c: jg     0x00007fb9e91ea450  ;*iflt
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                     0x00007fb9e91ea552: vmovq  %xmm0,%rbx
                     0x00007fb9e91ea557: vmovq  %xmm1,%r9
                     0x00007fb9e91ea55c: vmovq  %xmm2,%r13
                     0x00007fb9e91ea561: vmovq  %xmm3,%r8
                     0x00007fb9e91ea566: cmp    $0xffffffffffffffff,%ebp
....................................................................................................
 15.35%   15.53%  <total for region 2>

....[Hottest Regions]...............................................................................
 68.69%   69.04%  [0x7fb9e91e8332:0x7fb9e91e8517] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
 15.35%   15.53%  [0x7fb9e91ea428:0x7fb9e91ea566] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  5.76%    5.77%  [0x7fb9e91de533:0x7fb9e91de629] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  2.13%    2.12%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  1.65%    1.56%  [0x7fb9e91e379e:0x7fb9e91e38a8] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.82%    0.69%  [0xffffffff811aa500:0xffffffff811aa518] in [unknown] ([unknown])
  0.45%    0.17%  [0x7fb9e91e82be:0x7fb9e91e830b] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  0.16%    0.07%  [0xffffffff810dd2ae:0xffffffff810dd2cc] in [unknown] ([unknown])
  0.14%    0.02%  [0xffffffff817f1c10:0xffffffff817f1c3c] in [unknown] ([unknown])
  0.12%    0.07%  [0xffffffff817efbcd:0xffffffff817efbd0] in [unknown] ([unknown])
  0.12%    0.03%  [0xffffffff817f1a0b:0xffffffff817f1a26] in [unknown] ([unknown])
  0.12%    0.14%  [0x7fb9ff3cdb03:0x7fb9ff3cdb69] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.10%    0.03%  [0xffffffff811fff0b:0xffffffff811fff18] in [unknown] ([unknown])
  0.10%    0.05%  [0x7fb9e91ea34c:0x7fb9e91ea386] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  0.10%    0.17%  [0x7fb9ff358230:0x7fb9ff35824d] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.05%  [0xffffffff817f16a0:0xffffffff817f16b5] in [unknown] ([unknown])
  0.07%           [0x7fb9fd01126d:0x7fb9fd0112a0] in oappend (hsdis-amd64.so)
  0.07%    0.03%  [0x7fb9ff50c0c0:0x7fb9ff50c0da] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%    0.05%  [0x7fb9ffa59b01:0x7fb9ffa59b28] in vfprintf (libc-2.21.so)
  0.07%    0.03%  [0x7fba00200bf1:0x7fba00200c07] in pthread_getspecific (libpthread-2.21.so)
  3.80%    4.26%  <...other 331 warm regions...>
....................................................................................................
 99.97%   99.91%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 90.37%   90.60%  net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  5.26%    5.13%  [unknown] ([unknown])
  1.67%    1.58%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.21%    0.23%  vfprintf (libc-2.21.so)
  0.14%    0.17%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.14%    0.14%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.10%    0.09%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.09%    0.03%  print_insn (hsdis-amd64.so)
  0.07%    0.10%  _IO_default_xsputn (libc-2.21.so)
  0.07%    0.05%  pthread_getspecific (libpthread-2.21.so)
  0.07%    0.07%  _IO_fflush (libc-2.21.so)
  0.07%           oappend (hsdis-amd64.so)
  0.05%    0.07%  strlen (libc-2.21.so)
  0.05%           _ZN2os17current_thread_idEv (libjvm.so)
  0.05%    0.07%  __strchrnul (libc-2.21.so)
  0.05%    0.03%  _ZN12outputStream5printEPKcz (libjvm.so)
  0.03%           _ZN7Monitor6unlockEv (libjvm.so)
  0.03%    0.02%  _ZN13defaultStream4holdEl (libjvm.so)
  0.03%           _ZN12outputStream12do_vsnprintfEPcmPKcP13__va_list_tagbRm (libjvm.so)
  0.03%    0.07%  _IO_fwrite (libc-2.21.so)
  1.37%    0.50%  <...other 72 warm methods...>
....................................................................................................
 99.97%   98.96%  <totals>

....[Distribution by Area]..........................................................................
 92.12%   92.25%  <generated code>
  5.26%    5.13%  <native code in ([unknown])>
  1.61%    1.42%  <native code in (libjvm.so)>
  0.64%    0.96%  <native code in (libc-2.21.so)>
  0.24%    0.07%  <native code in (hsdis-amd64.so)>
  0.09%    0.09%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.97%   99.91%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkObjectArrayCopy.benchmarkArrayManualCopy_Overlap_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 66.67% complete, ETA 00:01:37
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 570516.273 ops/s
# Warmup Iteration   2: 556321.844 ops/s
# Warmup Iteration   3: 608588.730 ops/s
Iteration   1: 609470.255 ops/s
Iteration   2: 568279.364 ops/s
Iteration   3: 477063.512 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Overlap_Dec":
  551604.377 ±(99.9%) 1236196.026 ops/s [Average]
  (min, avg, max) = (477063.512, 551604.377, 609470.255), stdev = 67760.076
  CI (99.9%): [≈ 0, 1787800.403] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 127631 total address lines.
Perf output processed (skipped 3.113 seconds):
 Column 1: cycles (5659 events)
 Column 2: instructions (5645 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f636d1e693f:0x7f636d1e6a9f] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                         0x00007f636d1e693f: cmp    %r10d,%ebp
                  ╭      0x00007f636d1e6942: jae    0x00007f636d1e6a85  ;*aload_0
                  │                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                  │                                                    ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │      0x00007f636d1e6948: mov    0x8(%r12,%rsi,8),%r10d  ;*aastore
                  │                                                    ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  │                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  │                                                    ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │      0x00007f636d1e694d: cmp    $0xf80022f2,%r10d  ;   {metadata(&apos;java/lang/Object&apos;[])}
                  │╭     0x00007f636d1e6954: jne    0x00007f636d1e6a85
           0.02%  ││     0x00007f636d1e695a: lea    (%r12,%rsi,8),%rdi  ;*aload_0
                  ││                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                  ││                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.04%           ││↗    0x00007f636d1e695e: movslq %ebp,%r10
                  │││    0x00007f636d1e6961: lea    (%rdi,%r10,4),%r10
                  │││    0x00007f636d1e6965: mov    %r10,%r9
                  │││    0x00007f636d1e6968: add    $0x10,%r9
                  │││    0x00007f636d1e696c: mov    0xc(%r10),%esi
           0.02%  │││    0x00007f636d1e6970: mov    %esi,(%r9)
                  │││    0x00007f636d1e6973: mov    %r9,%r10
           0.02%  │││    0x00007f636d1e6976: shr    $0x9,%r10
  0.02%    0.02%  │││    0x00007f636d1e697a: mov    %r12b,0x0(%r13,%r10,1)  ;*aastore
                  │││                                                  ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  │││                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  │││                                                  ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │││    0x00007f636d1e697f: dec    %ebp               ;*isub
                  │││                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  │││                                                  ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │││    0x00007f636d1e6981: cmp    %r8d,%ebp
                  ││╰    0x00007f636d1e6984: jg     0x00007f636d1e695e  ;*ifle
                  ││                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                  ││                                                   ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
           0.02%  ││     0x00007f636d1e6986: cmp    $0x7,%ebp
                  ││ ╭   0x00007f636d1e6989: jle    0x00007f636d1e6a78
                  ││ │   0x00007f636d1e698f: vmovq  %rbx,%xmm0
           0.02%  ││ │   0x00007f636d1e6994: vmovq  %rdx,%xmm1
                  ││ │   0x00007f636d1e6999: vmovq  %r11,%xmm2
           0.02%  ││ │   0x00007f636d1e699e: xchg   %ax,%ax            ;*aload_0
                  ││ │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                  ││ │                                                 ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.64%    0.41%  ││ │↗  0x00007f636d1e69a0: movslq %ebp,%r10
  0.05%    0.05%  ││ ││  0x00007f636d1e69a3: lea    (%rdi,%r10,4),%r11
  3.15%    2.23%  ││ ││  0x00007f636d1e69a7: mov    %r11,%rdx
  0.23%    0.14%  ││ ││  0x00007f636d1e69aa: add    $0x10,%rdx         ;*aastore
                  ││ ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  ││ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││ ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.76%    1.01%  ││ ││  0x00007f636d1e69ae: mov    %r11,%rax
  0.11%    0.05%  ││ ││  0x00007f636d1e69b1: add    $0xfffffffffffffff4,%rax
  3.30%    4.16%  ││ ││  0x00007f636d1e69b5: mov    %r11,%rsi
  0.11%    0.09%  ││ ││  0x00007f636d1e69b8: add    $0xc,%rsi          ;*aaload
                  ││ ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@10 (line 36)
                  ││ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││ ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.78%    0.90%  ││ ││  0x00007f636d1e69bc: mov    %r11,%r8
  0.04%    0.02%  ││ ││  0x00007f636d1e69bf: add    $0x8,%r8           ;*aastore
                  ││ ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  ││ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││ ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  3.69%    3.91%  ││ ││  0x00007f636d1e69c3: mov    %r11,%r9
  0.14%    0.09%  ││ ││  0x00007f636d1e69c6: add    $0x4,%r9
  0.74%    0.85%  ││ ││  0x00007f636d1e69ca: mov    %r11,%rcx
           0.05%  ││ ││  0x00007f636d1e69cd: add    $0xfffffffffffffffc,%rcx  ;*aaload
                  ││ ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@10 (line 36)
                  ││ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││ ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  3.11%    4.23%  ││ ││  0x00007f636d1e69d1: mov    %r11,%rbx
  0.19%    0.04%  ││ ││  0x00007f636d1e69d4: add    $0xfffffffffffffff8,%rbx
  0.81%    1.06%  ││ ││  0x00007f636d1e69d8: mov    (%rsi),%r10d
  0.18%    0.12%  ││ ││  0x00007f636d1e69db: mov    %r10d,(%rdx)
  3.48%    4.07%  ││ ││  0x00007f636d1e69de: mov    (%r8),%r10d
  0.25%    0.12%  ││ ││  0x00007f636d1e69e1: mov    %r10d,(%rsi)
  0.92%    0.87%  ││ ││  0x00007f636d1e69e4: mov    (%r9),%r10d
  0.30%    0.32%  ││ ││  0x00007f636d1e69e7: mov    %r10d,(%r8)
  3.09%    4.16%  ││ ││  0x00007f636d1e69ea: mov    (%r11),%r10d
  0.19%    0.12%  ││ ││  0x00007f636d1e69ed: mov    %r10d,(%r9)
  1.18%    0.81%  ││ ││  0x00007f636d1e69f0: mov    (%rcx),%r10d
  0.41%    0.39%  ││ ││  0x00007f636d1e69f3: mov    %r10d,(%r11)
  3.07%    3.77%  ││ ││  0x00007f636d1e69f6: mov    (%rbx),%r10d
  0.14%    0.16%  ││ ││  0x00007f636d1e69f9: mov    %r10d,(%rcx)
  0.87%    0.90%  ││ ││  0x00007f636d1e69fc: mov    (%rax),%r10d
  0.07%    0.09%  ││ ││  0x00007f636d1e69ff: mov    %r10d,(%rbx)
  3.15%    3.84%  ││ ││  0x00007f636d1e6a02: mov    -0x10(%r11),%r10d
  0.05%    0.07%  ││ ││  0x00007f636d1e6a06: mov    %r10d,(%rax)
  1.15%    1.22%  ││ ││  0x00007f636d1e6a09: mov    %rdx,%r10
  0.04%    0.05%  ││ ││  0x00007f636d1e6a0c: shr    $0x9,%r10
  3.15%    3.29%  ││ ││  0x00007f636d1e6a10: mov    %r12b,0x0(%r13,%r10,1)
  0.44%    0.43%  ││ ││  0x00007f636d1e6a15: shr    $0x9,%rbx
  1.01%    0.89%  ││ ││  0x00007f636d1e6a19: mov    %rcx,%r10
  0.05%    0.02%  ││ ││  0x00007f636d1e6a1c: shr    $0x9,%r10
  3.07%    3.53%  ││ ││  0x00007f636d1e6a20: shr    $0x9,%r9
  0.18%    0.27%  ││ ││  0x00007f636d1e6a24: shr    $0x9,%r11
  0.69%    0.81%  ││ ││  0x00007f636d1e6a28: shr    $0x9,%r8
  0.09%    0.07%  ││ ││  0x00007f636d1e6a2c: mov    %rsi,%rcx
  3.22%    3.93%  ││ ││  0x00007f636d1e6a2f: mov    %rax,%rdx
  0.35%    0.35%  ││ ││  0x00007f636d1e6a32: shr    $0x9,%rcx
  0.71%    0.81%  ││ ││  0x00007f636d1e6a36: mov    %r12b,0x0(%r13,%rcx,1)
  0.67%    1.06%  ││ ││  0x00007f636d1e6a3b: mov    %r12b,0x0(%r13,%r8,1)
  3.55%    4.78%  ││ ││  0x00007f636d1e6a40: mov    %r12b,0x0(%r13,%r9,1)
  1.68%    1.91%  ││ ││  0x00007f636d1e6a45: mov    %r12b,0x0(%r13,%r11,1)
  2.49%    1.82%  ││ ││  0x00007f636d1e6a4a: mov    %r12b,0x0(%r13,%r10,1)
  5.14%    2.60%  ││ ││  0x00007f636d1e6a4f: mov    %r12b,0x0(%r13,%rbx,1)
  3.48%    1.93%  ││ ││  0x00007f636d1e6a54: shr    $0x9,%rdx
  0.04%    0.07%  ││ ││  0x00007f636d1e6a58: mov    %r12b,0x0(%r13,%rdx,1)  ;*aastore
                  ││ ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  ││ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││ ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  3.25%    1.12%  ││ ││  0x00007f636d1e6a5d: add    $0xfffffffffffffff8,%ebp  ;*isub
                  ││ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  ││ ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.18%    0.07%  ││ ││  0x00007f636d1e6a60: cmp    $0x7,%ebp
                  ││ │╰  0x00007f636d1e6a63: jg     0x00007f636d1e69a0  ;*ifle
                  ││ │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                  ││ │                                                 ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  ││ │   0x00007f636d1e6a69: vmovq  %xmm0,%rbx
  0.02%    0.05%  ││ │   0x00007f636d1e6a6e: vmovq  %xmm1,%rdx
  0.04%           ││ │   0x00007f636d1e6a73: vmovq  %xmm2,%r11
           0.02%  ││ ↘   0x00007f636d1e6a78: test   %ebp,%ebp
                  ││     0x00007f636d1e6a7a: jg     0x00007f636d1e68cc
                  ││     0x00007f636d1e6a80: jmpq   0x00007f636d1e68f3
                  ↘↘     0x00007f636d1e6a85: mov    $0xffffff86,%esi
                         0x00007f636d1e6a8a: mov    %r11,(%rsp)
                         0x00007f636d1e6a8e: mov    %rbx,0x8(%rsp)
                         0x00007f636d1e6a93: mov    %r14,0x18(%rsp)
                         0x00007f636d1e6a98: mov    %rdx,0x20(%rsp)
                         0x00007f636d1e6a9d: xchg   %ax,%ax
                         0x00007f636d1e6a9f: callq  0x00007f636d0051a0  ; OopMap{[0]=Oop [8]=Oop [32]=Oop off=1028}
                                                                       ;*aload_0
....................................................................................................
 69.92%   70.40%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f636d1e88d4:0x7f636d1e89f3] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                                                                    ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                                                                    ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                      0x00007f636d1e88d4: dec    %eax               ;*isub
                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                                                                    ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                      0x00007f636d1e88d6: cmp    %r10d,%eax
                      0x00007f636d1e88d9: jg     0x00007f636d1e88c0  ;*ifle
                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                    ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
           0.02%      0x00007f636d1e88db: cmp    $0x7,%eax
                  ╭   0x00007f636d1e88de: jle    0x00007f636d1e89d5
                  │   0x00007f636d1e88e4: mov    %rbx,%rbp
                  │   0x00007f636d1e88e7: vmovq  %r14,%xmm0
                  │   0x00007f636d1e88ec: vmovq  %r11,%xmm1
  0.02%           │   0x00007f636d1e88f1: vmovq  %r13,%xmm2
                  │   0x00007f636d1e88f6: nopw   0x0(%rax,%rax,1)   ;*aload_0
                  │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                  │                                                 ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.09%           │↗  0x00007f636d1e8900: movslq %eax,%r10
  0.21%    0.12%  ││  0x00007f636d1e8903: lea    (%rdi,%r10,4),%r11
  0.48%    0.11%  ││  0x00007f636d1e8907: mov    %r11,%r8
  0.04%    0.07%  ││  0x00007f636d1e890a: add    $0x10,%r8          ;*aastore
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.04%    0.04%  ││  0x00007f636d1e890e: mov    %r11,%r9
  0.19%    0.25%  ││  0x00007f636d1e8911: add    $0xc,%r9           ;*aaload
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@10 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.72%    0.80%  ││  0x00007f636d1e8915: mov    %r11,%rcx
  0.07%    0.09%  ││  0x00007f636d1e8918: add    $0x8,%rcx
  0.07%    0.07%  ││  0x00007f636d1e891c: mov    (%r9),%r10d
  0.19%    0.23%  ││  0x00007f636d1e891f: mov    %r10d,(%r8)        ;*aastore
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.64%    0.83%  ││  0x00007f636d1e8922: mov    %r11,%rbx
  0.05%    0.05%  ││  0x00007f636d1e8925: add    $0x4,%rbx          ;*aaload
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@10 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.09%    0.02%  ││  0x00007f636d1e8929: mov    (%rcx),%r10d
  0.21%    0.43%  ││  0x00007f636d1e892c: mov    %r10d,(%r9)        ;*aastore
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.55%    0.92%  ││  0x00007f636d1e892f: mov    %r11,%r13
  0.02%    0.04%  ││  0x00007f636d1e8932: add    $0xfffffffffffffffc,%r13  ;*aaload
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@10 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
           0.04%  ││  0x00007f636d1e8936: mov    (%rbx),%r10d
  0.28%    0.32%  ││  0x00007f636d1e8939: mov    %r10d,(%rcx)       ;*aastore
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.65%    0.60%  ││  0x00007f636d1e893c: mov    %r11,%r14
  0.04%    0.07%  ││  0x00007f636d1e893f: add    $0xfffffffffffffff8,%r14  ;*aaload
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@10 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.04%  ││  0x00007f636d1e8943: mov    (%r11),%r10d
  0.19%    0.35%  ││  0x00007f636d1e8946: mov    %r10d,(%rbx)       ;*aastore
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.64%    0.89%  ││  0x00007f636d1e8949: mov    %r11,%rdx
  0.02%           ││  0x00007f636d1e894c: add    $0xfffffffffffffff4,%rdx  ;*aaload
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@10 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  ││  0x00007f636d1e8950: mov    0x0(%r13),%r10d
  0.44%    0.34%  ││  0x00007f636d1e8954: mov    %r10d,(%r11)
  0.76%    0.81%  ││  0x00007f636d1e8957: mov    (%r14),%r10d
  0.04%    0.04%  ││  0x00007f636d1e895a: mov    %r10d,0x0(%r13)
  0.09%    0.07%  ││  0x00007f636d1e895e: mov    (%rdx),%r10d
  0.21%    0.27%  ││  0x00007f636d1e8961: mov    %r10d,(%r14)
  0.74%    0.57%  ││  0x00007f636d1e8964: mov    -0x10(%r11),%r10d
           0.02%  ││  0x00007f636d1e8968: mov    %r10d,(%rdx)
  0.21%    0.14%  ││  0x00007f636d1e896b: mov    %r11,%r10
  0.21%    0.14%  ││  0x00007f636d1e896e: mov    %r9,%r11
  0.58%    0.55%  ││  0x00007f636d1e8971: shr    $0x9,%r10
  0.02%    0.02%  ││  0x00007f636d1e8975: shr    $0x9,%r11
  0.11%    0.12%  ││  0x00007f636d1e8979: mov    %rdx,%r9
  0.21%    0.28%  ││  0x00007f636d1e897c: mov    %r14,%rdx
  0.57%    0.64%  ││  0x00007f636d1e897f: shr    $0x9,%r9
           0.02%  ││  0x00007f636d1e8983: shr    $0x9,%rdx
  0.12%    0.12%  ││  0x00007f636d1e8987: shr    $0x9,%r13
  0.19%    0.21%  ││  0x00007f636d1e898b: shr    $0x9,%rbx
  0.51%    0.78%  ││  0x00007f636d1e898f: shr    $0x9,%rcx
           0.02%  ││  0x00007f636d1e8993: shr    $0x9,%r8
  0.09%    0.12%  ││  0x00007f636d1e8997: mov    %r12b,(%rsi,%r8,1)
  0.53%    0.39%  ││  0x00007f636d1e899b: mov    %r12b,(%rsi,%r11,1)
  0.62%    0.80%  ││  0x00007f636d1e899f: mov    %r12b,(%rsi,%rcx,1)
  0.09%    0.05%  ││  0x00007f636d1e89a3: mov    %r12b,(%rsi,%rbx,1)
  0.25%    0.32%  ││  0x00007f636d1e89a7: mov    %r12b,(%rsi,%r10,1)
  1.25%    1.26%  ││  0x00007f636d1e89ab: mov    %r12b,(%rsi,%r13,1)
  0.81%    0.67%  ││  0x00007f636d1e89af: mov    %r12b,(%rsi,%rdx,1)
  0.78%    0.27%  ││  0x00007f636d1e89b3: mov    %r12b,(%rsi,%r9,1)  ;*aastore
                  ││                                                ; - net.greypanther.BenchmarkObjectArrayCopy::selfCopy@11 (line 36)
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.60%    0.30%  ││  0x00007f636d1e89b7: add    $0xfffffffffffffff8,%eax  ;*isub
                  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  ││                                                ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.04%    0.04%  ││  0x00007f636d1e89ba: cmp    $0x7,%eax
                  │╰  0x00007f636d1e89bd: jg     0x00007f636d1e8900  ;*ifle
                  │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                  │                                                 ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │   0x00007f636d1e89c3: mov    %rbp,%rbx
                  │   0x00007f636d1e89c6: vmovq  %xmm0,%r14
                  │   0x00007f636d1e89cb: vmovq  %xmm1,%r11
  0.02%           │   0x00007f636d1e89d0: vmovq  %xmm2,%r13
                  ↘   0x00007f636d1e89d5: test   %eax,%eax
                      0x00007f636d1e89d7: jg     0x00007f636d1e8828
                      0x00007f636d1e89dd: jmpq   0x00007f636d1e8846
                      0x00007f636d1e89e2: mov    $0x7f63834dce10,%r10
                      0x00007f636d1e89ec: callq  *%r10              ;*invokestatic nanoTime
                                                                    ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@31 (line 107)
                      0x00007f636d1e89ef: mov    %rax,0x30(%r13)    ;*putfield stopTime
                                                                    ; - net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@34 (line 107)
                                                                    ; implicit exception: dispatches to 0x00007f636d1e8a91
                      0x00007f636d1e89f3: mov    %rbx,0x20(%r13)    ;*putfield realTime
....................................................................................................
 15.60%   15.75%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.92%   70.40%  [0x7f636d1e693f:0x7f636d1e6a9f] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
 15.60%   15.75%  [0x7f636d1e88d4:0x7f636d1e89f3] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  5.48%    5.47%  [0x7f636d1e3a5e:0x7f636d1e3b57] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  1.87%    1.91%  [0x7f636d1e1953:0x7f636d1e1a40] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  0.88%    0.85%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.55%    0.28%  [0x7f636d1e68ba:0x7f636d1e6911] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  0.41%    0.51%  [0xffffffff811aa504:0xffffffff811aa518] in [unknown] ([unknown])
  0.12%    0.07%  [0xffffffff810dd298:0xffffffff810dd2d3] in [unknown] ([unknown])
  0.12%           [0x7f636d1e880c:0x7f636d1e8857] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  0.12%    0.16%  [0x7f63834ef221:0x7f63834ef24d] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.11%    0.05%  [0xffffffff811fff0b:0xffffffff811fff18] in [unknown] ([unknown])
  0.09%    0.18%  [0xffffffff811aa63a:0xffffffff811aa687] in [unknown] ([unknown])
  0.07%           [0xffffffff811fda1d:0xffffffff811fda33] in [unknown] ([unknown])
  0.07%           [0xffffffff813d3035:0xffffffff813d3037] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff813eebc4:0xffffffff813eebe3] in [unknown] ([unknown])
  0.07%    0.02%  [0x7f63811a8290:0x7f63811a8292] in oappend (hsdis-amd64.so)
  0.07%    0.11%  [0x7f6383564b19:0x7f6383564b5f] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.07%    0.05%  [0x7f6383c15b74:0x7f6383c15b74] in _IO_fwrite (libc-2.21.so)
  0.05%    0.05%  [0xffffffff8102c3c1:0xffffffff8102c3c1] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff8116eb23:0xffffffff8116eb23] in [unknown] ([unknown])
  4.15%    4.04%  <...other 329 warm regions...>
....................................................................................................
 99.96%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.73%   91.96%  net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  3.91%    3.76%  [unknown] ([unknown])
  1.91%    1.93%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  0.14%    0.16%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.14%    0.14%  _IO_fwrite (libc-2.21.so)
  0.14%    0.27%  vfprintf (libc-2.21.so)
  0.12%    0.02%  _ZN13defaultStream4holdEl (libjvm.so)
  0.07%    0.02%  oappend (hsdis-amd64.so)
  0.07%    0.09%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%    0.12%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.07%    0.05%  _ZN12outputStream5printEPKcz (libjvm.so)
  0.05%           _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ (libjvm.so)
  0.05%    0.02%  _IO_no_init (libc-2.21.so)
  0.05%           _ZN4UTF815as_quoted_asciiEPKciPci (libjvm.so)
  0.05%    0.04%  print_insn (hsdis-amd64.so)
  0.04%    0.02%  __strchr_sse2 (libc-2.21.so)
  0.04%           _ZN7Monitor6unlockEv (libjvm.so)
  0.04%    0.02%  _IO_fflush (libc-2.21.so)
  0.04%    0.02%  putop (hsdis-amd64.so)
  0.04%           _ZN15ciObjectFactory12get_metadataEP8Metadata (libjvm.so)
  1.20%    0.66%  <...other 64 warm methods...>
....................................................................................................
 99.96%   99.27%  <totals>

....[Distribution by Area]..........................................................................
 93.80%   93.92%  <generated code>
  3.91%    3.76%  <native code in ([unknown])>
  1.38%    1.33%  <native code in (libjvm.so)>
  0.62%    0.87%  <native code in (libc-2.21.so)>
  0.19%    0.07%  <native code in (hsdis-amd64.so)>
  0.07%    0.04%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.96%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkObjectArrayCopy.benchmarkArraySystemArraycopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 70.00% complete, ETA 00:01:27
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4616406.435 ops/s
# Warmup Iteration   2: 4217037.496 ops/s
# Warmup Iteration   3: 4705695.294 ops/s
Iteration   1: 4528810.522 ops/s
Iteration   2: 4432439.032 ops/s
Iteration   3: 4667047.508 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy":
  4542765.687 ±(99.9%) 2151393.984 ops/s [Average]
  (min, avg, max) = (4432439.032, 4542765.687, 4667047.508), stdev = 117925.164
  CI (99.9%): [2391371.704, 6694159.671] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 137167 total address lines.
Perf output processed (skipped 3.106 seconds):
 Column 1: cycles (5779 events)
 Column 2: instructions (5743 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f0d48a1e870:0x7f0d48a1e97d] in StubRoutines::oop_disjoint_arraycopy

                              0x00007f0d48a1e870: (bad)  
                              0x00007f0d48a1e873: rol    $0xf5,%ch
                              0x00007f0d48a1e876: out    %eax,(%dx)
                              0x00007f0d48a1e877: leaveq 
                              0x00007f0d48a1e878: add    $0x4,%rdx
                              0x00007f0d48a1e87c: jg     Stub::jlong_arraycopy+31 0x0x7f0d48a1e81f
                              0x00007f0d48a1e87e: xor    %rax,%rax
                              0x00007f0d48a1e881: leaveq 
                              0x00007f0d48a1e882: retq   
                            StubRoutines::oop_disjoint_arraycopy [0x00007f0d48a1e8a0, 0x00007f0d48a1e95b[ (187 bytes)
  0.12%    0.10%              0x00007f0d48a1e8a0: push   %rbp
           0.02%              0x00007f0d48a1e8a1: mov    %rsp,%rbp
  0.07%    0.05%          ↗↗  0x00007f0d48a1e8a4: mov    %rsi,%r11
  0.02%                   ││  0x00007f0d48a1e8a7: mov    %rdx,%rcx
                          ││  0x00007f0d48a1e8aa: shr    $0x1,%rdx
                          ││  0x00007f0d48a1e8ae: lea    -0x8(%rdi,%rdx,8),%rdi
  0.21%    0.09%          ││  0x00007f0d48a1e8b3: lea    -0x8(%rsi,%rdx,8),%rsi
                          ││  0x00007f0d48a1e8b8: neg    %rdx
                  ╭       ││  0x00007f0d48a1e8bb: jmpq   Stub::oop_disjoint_arraycopy+136 0x0x7f0d48a1e928
                  │↗    ↗ ││  0x00007f0d48a1e8c0: mov    0x8(%rdi,%rdx,8),%rax
                  ││    │ ││  0x00007f0d48a1e8c5: mov    %rax,0x8(%rsi,%rdx,8)
                  ││    │ ││  0x00007f0d48a1e8ca: inc    %rdx
                  │╰    │ ││  0x00007f0d48a1e8cd: jne    Stub::oop_disjoint_arraycopy+32 0x0x7f0d48a1e8c0
  0.10%    0.19%  │     │↗││  0x00007f0d48a1e8cf: test   $0x1,%ecx
                  │ ╭   ││││  0x00007f0d48a1e8d5: je     Stub::oop_disjoint_arraycopy+61 0x0x7f0d48a1e8dd
                  │ │   ││││  0x00007f0d48a1e8d7: mov    0x8(%rdi),%eax
                  │ │   ││││  0x00007f0d48a1e8da: mov    %eax,0x8(%rsi)
  0.09%    0.47%  │ ↘   ││││  0x00007f0d48a1e8dd: lea    (%r11,%rcx,4),%rcx
                  │     ││││  0x00007f0d48a1e8e1: sub    $0x4,%rcx
                  │     ││││  0x00007f0d48a1e8e5: shr    $0x9,%r11
                  │     ││││  0x00007f0d48a1e8e9: shr    $0x9,%rcx
  0.16%    0.42%  │     ││││  0x00007f0d48a1e8ed: sub    %r11,%rcx
                  │     ││││  0x00007f0d48a1e8f0: mov    $0x7f0d44477000,%rax
                  │     ││││  0x00007f0d48a1e8fa: add    %rax,%r11
  2.65%    4.61%  │  ↗  ││││  0x00007f0d48a1e8fd: movb   $0x0,(%r11,%rcx,1)
  0.69%    0.80%  │  │  ││││  0x00007f0d48a1e902: dec    %rcx
                  │  ╰  ││││  0x00007f0d48a1e905: jge    Stub::oop_disjoint_arraycopy+93 0x0x7f0d48a1e8fd
                  │     ││││  0x00007f0d48a1e907: xor    %rax,%rax
                  │     ││││  0x00007f0d48a1e90a: leaveq 
  0.12%    0.28%  │     ││││  0x00007f0d48a1e90b: retq   
                  │     ││││  0x00007f0d48a1e90c: nopl   0x0(%rax)
  2.77%    1.27%  │   ↗ ││││  0x00007f0d48a1e910: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 13.12%   10.85%  │   │ ││││  0x00007f0d48a1e916: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
 46.13%   60.75%  │   │ ││││  0x00007f0d48a1e91c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
 20.92%    7.59%  │   │ ││││  0x00007f0d48a1e922: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
  3.95%    2.05%  ↘   │ ││││  0x00007f0d48a1e928: add    $0x8,%rdx
                      ╰ ││││  0x00007f0d48a1e92c: jle    Stub::oop_disjoint_arraycopy+112 0x0x7f0d48a1e910
  0.02%    0.07%        ││││  0x00007f0d48a1e92e: sub    $0x4,%rdx
                       ╭││││  0x00007f0d48a1e932: jg     Stub::oop_disjoint_arraycopy+164 0x0x7f0d48a1e944
                       │││││  0x00007f0d48a1e934: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                       │││││  0x00007f0d48a1e93a: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
                       │││││  0x00007f0d48a1e940: add    $0x4,%rdx
  0.16%    0.24%       ↘││││  0x00007f0d48a1e944: (bad)  
                        ││││  0x00007f0d48a1e947: rol    $0xf5,%ch
                        ││││  0x00007f0d48a1e94a: out    %eax,(%dx)
                        ││││  0x00007f0d48a1e94b: leaveq 
                        ││││  0x00007f0d48a1e94c: sub    $0x4,%rdx
                        ╰│││  0x00007f0d48a1e950: jl     Stub::oop_disjoint_arraycopy+32 0x0x7f0d48a1e8c0
           0.05%         ╰││  0x00007f0d48a1e956: jmpq   Stub::oop_disjoint_arraycopy+47 0x0x7f0d48a1e8cf
                          ││StubRoutines::oop_arraycopy [0x00007f0d48a1e960, 0x00007f0d48a1ea2c[ (204 bytes)
                          ││  0x00007f0d48a1e960: push   %rbp
                          ││  0x00007f0d48a1e961: mov    %rsp,%rbp
                          ││  0x00007f0d48a1e964: cmp    %rdi,%rsi
                          ││  0x00007f0d48a1e967: lea    (%rdi,%rdx,4),%rax
                          ╰│  0x00007f0d48a1e96b: jbe    Stub::oop_disjoint_arraycopy+4 0x0x7f0d48a1e8a4
                           │  0x00007f0d48a1e971: cmp    %rax,%rsi
                           ╰  0x00007f0d48a1e974: jae    Stub::oop_disjoint_arraycopy+4 0x0x7f0d48a1e8a4
                              0x00007f0d48a1e97a: mov    %rdx,%rcx
                              0x00007f0d48a1e97d: shr    $0x1,%rdx
....................................................................................................
 91.28%   89.92%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.28%   89.92%  [0x7f0d48a1e870:0x7f0d48a1e97d] in StubRoutines::oop_disjoint_arraycopy
  2.27%    3.78%  [0x7f0d48bc9f5b:0x7f0d48bca069] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.57%    0.54%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.52%    0.57%  [0xffffffff811aa504:0xffffffff811aa518] in [unknown] ([unknown])
  0.52%    0.63%  [0x7f0d48bc77ee:0x7f0d48bc7903] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.16%    0.12%  [0x7f0d5d7a7b03:0x7f0d5d7a7b69] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.14%    0.07%  [0xffffffff810dd2ae:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.14%    0.38%  [0x7f0d48bc872e:0x7f0d48bc8842] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.10%    0.17%  [0x7f0d5d732230:0x7f0d5d73224d] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.05%  [0xffffffff817efb41:0xffffffff817efb49] in [unknown] ([unknown])
  0.07%    0.03%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.07%           [0x7f0d5d36a2bf:0x7f0d5d36a2bf] in _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.07%    0.09%  [0x7f0d5d72f57f:0x7f0d5d72f5a5] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.07%    0.03%  [0x7f0d5d7321f0:0x7f0d5d7321f0] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.03%  [0x7f0d5d8e60ae:0x7f0d5d8e60da] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%           [0x7f0d5de58b74:0x7f0d5de58b74] in _IO_fwrite (libc-2.21.so)
  0.05%    0.05%  [0xffffffff810f8f69:0xffffffff810f8f69] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff811738a6:0xffffffff811738a6] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff811fff08:0xffffffff811fff0b] in [unknown] ([unknown])
  0.05%    0.03%  [0xffffffff8121b125:0xffffffff8121b12d] in [unknown] ([unknown])
  3.60%    3.36%  <...other 288 warm regions...>
....................................................................................................
 99.98%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.28%   89.92%  StubRoutines::oop_disjoint_arraycopy
  3.20%    3.26%  [unknown] ([unknown])
  3.01%    4.88%  net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.21%    0.16%  vfprintf (libc-2.21.so)
  0.17%    0.21%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.16%    0.16%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.10%    0.02%  _IO_fwrite (libc-2.21.so)
  0.10%    0.09%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.09%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.09%    0.02%  print_insn (hsdis-amd64.so)
  0.07%           _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.07%    0.09%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.02%  jio_print (libjvm.so)
  0.03%    0.09%  _IO_default_xsputn (libc-2.21.so)
  0.03%           _ZN10ValueStackC1EPS_NS_4KindEi (libjvm.so)
  0.03%    0.07%  _ZN13defaultStream4holdEl (libjvm.so)
  0.03%           _IO_fflush (libc-2.21.so)
  0.03%    0.12%  strlen (libc-2.21.so)
  0.03%           oappend (hsdis-amd64.so)
  0.03%           _Z17is_error_reportedv (libjvm.so)
  1.14%    0.26%  <...other 62 warm methods...>
....................................................................................................
 99.98%   99.34%  <totals>

....[Distribution by Area]..........................................................................
 94.43%   94.90%  <generated code>
  3.20%    3.26%  <native code in ([unknown])>
  1.54%    1.20%  <native code in (libjvm.so)>
  0.64%    0.54%  <native code in (libc-2.21.so)>
  0.14%    0.05%  <native code in (hsdis-amd64.so)>
  0.03%    0.02%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.98%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkObjectArrayCopy.benchmarkArraySystemArraycopy_Overlap
# Parameters: (arraySizeInKb = 10)

# Run progress: 73.33% complete, ETA 00:01:17
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4304581.242 ops/s
# Warmup Iteration   2: 4525831.677 ops/s
# Warmup Iteration   3: 4567319.985 ops/s
Iteration   1: 4148091.886 ops/s
Iteration   2: 4461990.014 ops/s
Iteration   3: 4554477.227 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy_Overlap":
  4388186.376 ±(99.9%) 3886062.562 ops/s [Average]
  (min, avg, max) = (4148091.886, 4388186.376, 4554477.227), stdev = 213008.202
  CI (99.9%): [502123.814, 8274248.938] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 137355 total address lines.
Perf output processed (skipped 3.121 seconds):
 Column 1: cycles (5668 events)
 Column 2: instructions (5641 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f230ca1e877:0x7f230ca1e99a] in StubRoutines::oop_disjoint_arraycopy; StubRoutines::oop_arraycopy

                              0x00007f230ca1e877: leaveq 
                              0x00007f230ca1e878: add    $0x4,%rdx
                              0x00007f230ca1e87c: jg     Stub::jlong_arraycopy+31 0x0x7f230ca1e81f
                              0x00007f230ca1e87e: xor    %rax,%rax
                              0x00007f230ca1e881: leaveq 
                              0x00007f230ca1e882: retq   
                            StubRoutines::oop_disjoint_arraycopy [0x00007f230ca1e8a0, 0x00007f230ca1e95b[ (187 bytes)
                              0x00007f230ca1e8a0: push   %rbp
                              0x00007f230ca1e8a1: mov    %rsp,%rbp
                          ↗↗  0x00007f230ca1e8a4: mov    %rsi,%r11
  0.04%    0.04%          ││  0x00007f230ca1e8a7: mov    %rdx,%rcx
  0.11%    0.14%          ││  0x00007f230ca1e8aa: shr    $0x1,%rdx
           0.02%          ││  0x00007f230ca1e8ae: lea    -0x8(%rdi,%rdx,8),%rdi
                          ││  0x00007f230ca1e8b3: lea    -0x8(%rsi,%rdx,8),%rsi
  0.05%    0.05%          ││  0x00007f230ca1e8b8: neg    %rdx
  0.11%    0.20%  ╭       ││  0x00007f230ca1e8bb: jmpq   Stub::oop_disjoint_arraycopy+136 0x0x7f230ca1e928
                  │↗    ↗ ││  0x00007f230ca1e8c0: mov    0x8(%rdi,%rdx,8),%rax
  0.21%           ││    │ ││  0x00007f230ca1e8c5: mov    %rax,0x8(%rsi,%rdx,8)
  0.21%           ││    │ ││  0x00007f230ca1e8ca: inc    %rdx
                  │╰    │ ││  0x00007f230ca1e8cd: jne    Stub::oop_disjoint_arraycopy+32 0x0x7f230ca1e8c0
  0.16%           │     │↗││  0x00007f230ca1e8cf: test   $0x1,%ecx
                  │ ╭   ││││  0x00007f230ca1e8d5: je     Stub::oop_disjoint_arraycopy+61 0x0x7f230ca1e8dd
                  │ │   ││││  0x00007f230ca1e8d7: mov    0x8(%rdi),%eax
  0.02%           │ │   ││││  0x00007f230ca1e8da: mov    %eax,0x8(%rsi)
                  │ ↘   ││││  0x00007f230ca1e8dd: lea    (%r11,%rcx,4),%rcx
  0.18%           │     ││││  0x00007f230ca1e8e1: sub    $0x4,%rcx
                  │     ││││  0x00007f230ca1e8e5: shr    $0x9,%r11
                  │     ││││  0x00007f230ca1e8e9: shr    $0x9,%rcx
                  │     ││││  0x00007f230ca1e8ed: sub    %r11,%rcx
  0.16%           │     ││││  0x00007f230ca1e8f0: mov    $0x7f2308477000,%rax
                  │     ││││  0x00007f230ca1e8fa: add    %rax,%r11
  2.45%    5.44%  │  ↗  ││││  0x00007f230ca1e8fd: movb   $0x0,(%r11,%rcx,1)
  0.30%    0.27%  │  │  ││││  0x00007f230ca1e902: dec    %rcx
                  │  ╰  ││││  0x00007f230ca1e905: jge    Stub::oop_disjoint_arraycopy+93 0x0x7f230ca1e8fd
                  │     ││││  0x00007f230ca1e907: xor    %rax,%rax
                  │     ││││  0x00007f230ca1e90a: leaveq 
  0.16%    0.28%  │     ││││  0x00007f230ca1e90b: retq   
                  │     ││││  0x00007f230ca1e90c: nopl   0x0(%rax)
  1.61%    0.35%  │   ↗ ││││  0x00007f230ca1e910: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  1.78%    0.98%  │   │ ││││  0x00007f230ca1e916: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
  2.31%    0.98%  │   │ ││││  0x00007f230ca1e91c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
 26.27%   11.63%  │   │ ││││  0x00007f230ca1e922: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
 55.86%   70.59%  ↘   │ ││││  0x00007f230ca1e928: add    $0x8,%rdx
                      ╰ ││││  0x00007f230ca1e92c: jle    Stub::oop_disjoint_arraycopy+112 0x0x7f230ca1e910
  0.18%                 ││││  0x00007f230ca1e92e: sub    $0x4,%rdx
                       ╭││││  0x00007f230ca1e932: jg     Stub::oop_disjoint_arraycopy+164 0x0x7f230ca1e944
                       │││││  0x00007f230ca1e934: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                       │││││  0x00007f230ca1e93a: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
                       │││││  0x00007f230ca1e940: add    $0x4,%rdx
  0.14%                ↘││││  0x00007f230ca1e944: (bad)  
                        ││││  0x00007f230ca1e947: rol    $0xf5,%ch
                        ││││  0x00007f230ca1e94a: out    %eax,(%dx)
                        ││││  0x00007f230ca1e94b: leaveq 
                        ││││  0x00007f230ca1e94c: sub    $0x4,%rdx
                        ╰│││  0x00007f230ca1e950: jl     Stub::oop_disjoint_arraycopy+32 0x0x7f230ca1e8c0
                         ╰││  0x00007f230ca1e956: jmpq   Stub::oop_disjoint_arraycopy+47 0x0x7f230ca1e8cf
                          ││StubRoutines::oop_arraycopy [0x00007f230ca1e960, 0x00007f230ca1ea2c[ (204 bytes)
           0.05%          ││  0x00007f230ca1e960: push   %rbp
  0.11%    0.25%          ││  0x00007f230ca1e961: mov    %rsp,%rbp
                          ││  0x00007f230ca1e964: cmp    %rdi,%rsi
  0.04%    0.04%          ││  0x00007f230ca1e967: lea    (%rdi,%rdx,4),%rax
  0.14%    0.14%          ╰│  0x00007f230ca1e96b: jbe    Stub::oop_disjoint_arraycopy+4 0x0x7f230ca1e8a4
                           │  0x00007f230ca1e971: cmp    %rax,%rsi
                           ╰  0x00007f230ca1e974: jae    Stub::oop_disjoint_arraycopy+4 0x0x7f230ca1e8a4
                              0x00007f230ca1e97a: mov    %rdx,%rcx
                              0x00007f230ca1e97d: shr    $0x1,%rdx
                              0x00007f230ca1e981: test   $0x1,%ecx
                              0x00007f230ca1e987: je     Stub::oop_arraycopy+118 0x0x7f230ca1e9d6
                              0x00007f230ca1e98d: mov    -0x4(%rdi,%rcx,4),%eax
                              0x00007f230ca1e991: mov    %eax,-0x4(%rsi,%rcx,4)
                              0x00007f230ca1e995: jmpq   Stub::oop_arraycopy+118 0x0x7f230ca1e9d6
                              0x00007f230ca1e99a: mov    -0x8(%rdi,%rdx,8),%rax
....................................................................................................
 92.57%   91.44%  <total for region 1>

....[Hottest Regions]...............................................................................
 92.57%   91.44%  [0x7f230ca1e877:0x7f230ca1e99a] in StubRoutines::oop_disjoint_arraycopy; StubRoutines::oop_arraycopy
  1.46%    1.45%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  1.18%    2.32%  [0x7f230cbc8fdf:0x7f230cbc90f5] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.23%    0.16%  [0xffffffff811aa504:0xffffffff811aa518] in [unknown] ([unknown])
  0.18%    0.07%  [0xffffffff810dd2ab:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.12%    0.04%  [0xffffffff817efbcd:0xffffffff817efbd0] in [unknown] ([unknown])
  0.12%    0.16%  [0x7f230cbc5972:0x7f230cbc5a82] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.11%    0.32%  [0x7f230cbcaf32:0x7f230cbcb005] in net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.09%    0.02%  [0xffffffff817f1c10:0xffffffff817f1c1c] in [unknown] ([unknown])
  0.07%    0.04%  [0xffffffff817efb36:0xffffffff817efb49] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff817f16b5:0xffffffff817f16b5] in [unknown] ([unknown])
  0.07%    0.09%  [0x7f23216b7230:0x7f23216b723e] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.05%    0.05%  [0xffffffff810a3c64:0xffffffff810a3c64] in [unknown] ([unknown])
  0.05%           [0xffffffff810bd044:0xffffffff810bd05b] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff8116eb11:0xffffffff8116eb11] in [unknown] ([unknown])
  0.05%           [0xffffffff811ffe78:0xffffffff811ffe78] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff811ffef0:0xffffffff811fff2a] in [unknown] ([unknown])
  0.05%    0.11%  [0xffffffff813d3035:0xffffffff813d3037] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff817ed632:0xffffffff817ed632] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff817f1a0b:0xffffffff817f1a26] in [unknown] ([unknown])
  3.25%    3.53%  <...other 263 warm regions...>
....................................................................................................
 99.95%   99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 92.57%   91.44%  StubRoutines::oop_disjoint_arraycopy; StubRoutines::oop_arraycopy
  4.18%    3.53%  [unknown] ([unknown])
  1.46%    2.94%  net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.19%    0.07%  <unresolved>
  0.09%    0.05%  _IO_fwrite (libc-2.21.so)
  0.07%    0.05%  _IO_default_xsputn (libc-2.21.so)
  0.07%    0.11%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.02%  __strchr_sse2 (libc-2.21.so)
  0.07%    0.21%  vfprintf (libc-2.21.so)
  0.05%    0.05%  strlen (libc-2.21.so)
  0.05%    0.12%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.04%    0.04%  _IO_fflush (libc-2.21.so)
  0.04%    0.02%  _IO_vsnprintf (libc-2.21.so)
  0.04%    0.04%  _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.04%           [unknown] (perf-15883.map)
  0.04%           _ZN11SymbolTable11lookup_onlyEPKciRj (libjvm.so)
  0.02%    0.04%  _ZN12stringStream5writeEPKcm (libjvm.so)
  0.02%    0.05%  jio_print (libjvm.so)
  0.02%           _ZN11vframeArray8allocateEP10JavaThreadiP13GrowableArrayIP14compiledVFrameEP11RegisterMap5frameS9_S9_b (libjvm.so)
  0.02%           fwrite@plt (libjvm.so)
  0.81%    0.34%  <...other 46 warm methods...>
....................................................................................................
 99.95%   99.11%  <totals>

....[Distribution by Area]..........................................................................
 94.34%   94.50%  <generated code>
  4.18%    3.53%  <native code in ([unknown])>
  0.83%    1.17%  <native code in (libjvm.so)>
  0.51%    0.66%  <native code in (libc-2.21.so)>
  0.04%    0.11%  <native code in (libpthread-2.21.so)>
  0.04%           <native code in (perf-15883.map)>
  0.02%           <native code in (libzip.so)>
....................................................................................................
 99.95%   99.96%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkObjectArrayCopy.benchmarkArrayUnsafeCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 76.67% complete, ETA 00:01:07
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException
	at sun.misc.Unsafe.copyMemory(Native Method)
	at net.greypanther.AbstractBenchmark.benchmarkArrayUnsafeCopy(AbstractBenchmark.java:64)
	at net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayUnsafeCopy_jmhTest.benchmarkArrayUnsafeCopy_thrpt_jmhStub(BenchmarkObjectArrayCopy_benchmarkArrayUnsafeCopy_jmhTest.java:104)
	at net.greypanther.generated.BenchmarkObjectArrayCopy_benchmarkArrayUnsafeCopy_jmhTest.benchmarkArrayUnsafeCopy_Throughput(BenchmarkObjectArrayCopy_benchmarkArrayUnsafeCopy_jmhTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:430)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:412)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)




# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkShortArrayCopy.benchmarkArrayManualCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 80.00% complete, ETA 00:00:56
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4246682.569 ops/s
# Warmup Iteration   2: 4057411.596 ops/s
# Warmup Iteration   3: 4376467.950 ops/s
Iteration   1: 4491885.431 ops/s
Iteration   2: 3999073.887 ops/s
Iteration   3: 3790505.254 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy":
  4093821.524 ±(99.9%) 6570688.250 ops/s [Average]
  (min, avg, max) = (3790505.254, 4093821.524, 4491885.431), stdev = 360161.595
  CI (99.9%): [≈ 0, 10664509.774] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 133779 total address lines.
Perf output processed (skipped 3.115 seconds):
 Column 1: cycles (5761 events)
 Column 2: instructions (5743 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f660d1f7c69:0x7f660d1f7d7b] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

                               0x00007f660d1f7c69: mov    %r12,0x20(%rbx)    ;*putfield realTime
                                                                             ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@40 (line 108)
                               0x00007f660d1f7c6d: add    $0x30,%rsp
                               0x00007f660d1f7c71: pop    %rbp
                               0x00007f660d1f7c72: test   %eax,0x16097388(%rip)        # 0x00007f662328f000
                                                                             ;   {poll_return}
                               0x00007f660d1f7c78: retq   
                               0x00007f660d1f7c79: xchg   %ax,%ax            ;*aload_0
                                                                             ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                                                                             ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.26%    0.38%  ↗        ↗   0x00007f660d1f7c7c: movswl 0x10(%rsi,%r11,2),%r8d
  0.87%    0.71%  │        │   0x00007f660d1f7c82: mov    %r8w,0x10(%r9,%r11,2)  ;*sastore
                  │        │                                                 ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.57%    0.56%  │        │   0x00007f660d1f7c88: inc    %r11d              ;*iinc
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  │        │   0x00007f660d1f7c8b: cmp    %r10d,%r11d
                  ╰        │   0x00007f660d1f7c8e: jl     0x00007f660d1f7c7c  ;*invokevirtual benchmarkArrayManualCopy
                           │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   ↗       │↗  0x00007f660d1f7c90: movzbl 0x94(%rdx),%r10d   ;*getfield isDone
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@24 (line 106)
  0.14%    0.03%   │       ││  0x00007f660d1f7c98: add    $0x1,%rbp          ; OopMap{rbx=Oop rdi=Oop rdx=Oop off=380}
                   │       ││                                                ;*ifeq
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@27 (line 106)
  0.03%    0.05%   │       ││  0x00007f660d1f7c9c: test   %eax,0x1609735e(%rip)        # 0x00007f662328f000
                   │       ││                                                ;   {poll}
  0.09%            │       ││  0x00007f660d1f7ca2: test   %r10d,%r10d
                   │       ││  0x00007f660d1f7ca5: jne    0x00007f660d1f7c54  ;*aload_3
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@13 (line 104)
  0.02%            │       ││  0x00007f660d1f7ca7: mov    0x20(%rdi),%r10d   ;*getfield itemCount
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@4 (line 69)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   │       ││  0x00007f660d1f7cab: test   %r10d,%r10d
                   ╰       ││  0x00007f660d1f7cae: jle    0x00007f660d1f7c90  ;*if_icmpge
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                           ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.02%                    ││  0x00007f660d1f7cb0: mov    0x28(%rdi),%r8d    ;*getfield shortSource
                           ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@6 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                           ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.12%                    ││  0x00007f660d1f7cb4: mov    0xc(%r12,%r8,8),%ecx  ;*saload
                           ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@10 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                           ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                           ││                                                ; implicit exception: dispatches to 0x00007f660d1f7d65
  0.16%    0.05%           ││  0x00007f660d1f7cb9: test   %ecx,%ecx
                    ╭      ││  0x00007f660d1f7cbb: jbe    0x00007f660d1f7d65
  0.09%             │      ││  0x00007f660d1f7cc1: mov    %r10d,%r11d
                    │      ││  0x00007f660d1f7cc4: dec    %r11d
                    │      ││  0x00007f660d1f7cc7: cmp    %ecx,%r11d
                    │╭     ││  0x00007f660d1f7cca: jae    0x00007f660d1f7d65  ;*aload_0
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.10%             ││     ││  0x00007f660d1f7cd0: mov    0x2c(%rdi),%r9d    ;*getfield shortTarget
                    ││     ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@1 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││     ││  0x00007f660d1f7cd4: mov    0xc(%r12,%r9,8),%ecx  ;*sastore
                    ││     ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││     ││                                                ; implicit exception: dispatches to 0x00007f660d1f7d65
                    ││     ││  0x00007f660d1f7cd9: test   %ecx,%ecx
                    ││╭    ││  0x00007f660d1f7cdb: jbe    0x00007f660d1f7d65
  0.14%    0.03%    │││    ││  0x00007f660d1f7ce1: cmp    %ecx,%r11d
                    │││╭   ││  0x00007f660d1f7ce4: jae    0x00007f660d1f7d65
  0.09%    0.05%    ││││   ││  0x00007f660d1f7cea: lea    (%r12,%r8,8),%rsi
                    ││││   ││  0x00007f660d1f7cee: shl    $0x3,%r9
                    ││││   ││  0x00007f660d1f7cf2: mov    %r9d,%r11d
           0.02%    ││││   ││  0x00007f660d1f7cf5: shr    %r11d
  0.05%             ││││   ││  0x00007f660d1f7cf8: and    $0x7,%r11d
                    ││││   ││  0x00007f660d1f7cfc: mov    $0xffffffff,%r8d
                    ││││   ││  0x00007f660d1f7d02: sub    %r11d,%r8d
                    ││││   ││  0x00007f660d1f7d05: and    $0x7,%r8d
  0.02%    0.02%    ││││   ││  0x00007f660d1f7d09: inc    %r8d
  0.02%             ││││   ││  0x00007f660d1f7d0c: cmp    %r10d,%r8d
           0.02%    ││││   ││  0x00007f660d1f7d0f: cmovg  %r10d,%r8d
  0.07%    0.07%    ││││   ││  0x00007f660d1f7d13: xor    %r11d,%r11d        ;*aload_0
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││││↗  ││  0x00007f660d1f7d16: movswl 0x10(%rsi,%r11,2),%ecx
  0.02%             │││││  ││  0x00007f660d1f7d1c: mov    %cx,0x10(%r9,%r11,2)  ;*sastore
                    │││││  ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%    │││││  ││  0x00007f660d1f7d22: inc    %r11d              ;*iinc
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.31%    0.14%    │││││  ││  0x00007f660d1f7d25: cmp    %r8d,%r11d
                    ││││╰  ││  0x00007f660d1f7d28: jl     0x00007f660d1f7d16  ;*if_icmpge
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                    ││││   ││  0x00007f660d1f7d2a: mov    %r10d,%r8d
                    ││││   ││  0x00007f660d1f7d2d: add    $0xfffffffffffffff9,%r8d
  0.03%    0.05%    ││││   ││  0x00007f660d1f7d31: cmp    %r8d,%r10d
  0.03%    0.07%    ││││   ││  0x00007f660d1f7d34: cmovl  %r13d,%r8d
                    ││││   ││  0x00007f660d1f7d38: cmp    %r8d,%r11d
                    ││││ ╭ ││  0x00007f660d1f7d3b: jge    0x00007f660d1f7d57
           0.02%    ││││ │ ││  0x00007f660d1f7d3d: xchg   %ax,%ax            ;*aload_0
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.17%    0.17%    ││││ │↗││  0x00007f660d1f7d40: vmovdqu 0x10(%rsi,%r11,2),%xmm0
  1.28%    0.85%    ││││ ││││  0x00007f660d1f7d47: vmovdqu %xmm0,0x10(%r9,%r11,2)  ;*sastore
                    ││││ ││││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 64.02%   65.82%    ││││ ││││  0x00007f660d1f7d4e: add    $0x8,%r11d         ;*iinc
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.23%    0.12%    ││││ ││││  0x00007f660d1f7d52: cmp    %r8d,%r11d
                    ││││ │╰││  0x00007f660d1f7d55: jl     0x00007f660d1f7d40  ;*if_icmpge
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.02%    0.03%    ││││ ↘ ││  0x00007f660d1f7d57: cmp    %r10d,%r11d
                    ││││   ╰│  0x00007f660d1f7d5a: jl     0x00007f660d1f7c7c
                    ││││    ╰  0x00007f660d1f7d60: jmpq   0x00007f660d1f7c90
                    ↘↘↘↘       0x00007f660d1f7d65: mov    $0xffffff86,%esi
                               0x00007f660d1f7d6a: mov    %rdx,(%rsp)
                               0x00007f660d1f7d6e: mov    %rbx,0x8(%rsp)
                               0x00007f660d1f7d73: mov    %rdi,0x18(%rsp)
                               0x00007f660d1f7d78: xchg   %ax,%ax
                               0x00007f660d1f7d7b: callq  0x00007f660d0051a0  ; OopMap{[0]=Oop [8]=Oop [24]=Oop off=608}
....................................................................................................
 69.02%   69.30%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f660d1f3c29:0x7f660d1f3cbf] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub

                       0x00007f660d1f3c29: jbe    0x00007f660d1f3cdf
                       0x00007f660d1f3c2f: cmp    %r8d,%r11d
                       0x00007f660d1f3c32: jae    0x00007f660d1f3cdf
                       0x00007f660d1f3c38: lea    (%r12,%r9,8),%rdx
                       0x00007f660d1f3c3c: lea    (%r12,%rdi,8),%rsi
                       0x00007f660d1f3c40: mov    %edx,%edi
                       0x00007f660d1f3c42: shr    %edi
                       0x00007f660d1f3c44: and    $0x7,%edi
                       0x00007f660d1f3c47: mov    $0xffffffff,%r11d
                       0x00007f660d1f3c4d: sub    %edi,%r11d
  0.02%                0x00007f660d1f3c50: and    $0x7,%r11d
                       0x00007f660d1f3c54: inc    %r11d
                       0x00007f660d1f3c57: cmp    %r10d,%r11d
                       0x00007f660d1f3c5a: cmovg  %r10d,%r11d
           0.02%       0x00007f660d1f3c5e: xor    %r9d,%r9d          ;*aload_0
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                                                                     ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                  ↗    0x00007f660d1f3c61: movswl 0x10(%rsi,%r9,2),%r8d
                  │    0x00007f660d1f3c67: mov    %r8w,0x10(%rdx,%r9,2)  ;*sastore
                  │                                                  ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                  │                                                  ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.03%    0.02%  │    0x00007f660d1f3c6d: inc    %r9d               ;*iinc
                  │                                                  ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                  │                                                  ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.07%           │    0x00007f660d1f3c70: cmp    %r11d,%r9d
                  ╰    0x00007f660d1f3c73: jl     0x00007f660d1f3c61  ;*if_icmpge
                                                                     ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                                                                     ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                       0x00007f660d1f3c75: mov    %r10d,%edi
                       0x00007f660d1f3c78: add    $0xfffffffffffffff9,%edi
           0.03%       0x00007f660d1f3c7b: cmp    %edi,%r10d
                       0x00007f660d1f3c7e: cmovl  %ebp,%edi
                       0x00007f660d1f3c81: cmp    %edi,%r9d
                   ╭   0x00007f660d1f3c84: jge    0x00007f660d1f3ca7
  0.02%    0.02%   │   0x00007f660d1f3c86: nopw   0x0(%rax,%rax,1)   ;*aload_0
                   │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@10 (line 70)
                   │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.05%    0.03%   │↗  0x00007f660d1f3c90: vmovdqu 0x10(%rsi,%r9,2),%xmm0
  0.47%    0.35%   ││  0x00007f660d1f3c97: vmovdqu %xmm0,0x10(%rdx,%r9,2)  ;*sastore
                   ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@12 (line 70)
                   ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
 15.64%   16.02%   ││  0x00007f660d1f3c9e: add    $0x8,%r9d          ;*iinc
                   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@15 (line 69)
                   ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
  0.10%            ││  0x00007f660d1f3ca2: cmp    %edi,%r9d
                   │╰  0x00007f660d1f3ca5: jl     0x00007f660d1f3c90  ;*if_icmpge
                   │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy@7 (line 69)
                   │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub@14 (line 104)
                   ↘   0x00007f660d1f3ca7: cmp    %r10d,%r9d
                       0x00007f660d1f3caa: jl     0x00007f660d1f3bc4
                       0x00007f660d1f3cb0: jmpq   0x00007f660d1f3bd8
                       0x00007f660d1f3cb5: mov    $0x7f6621fa3e10,%r10
                       0x00007f660d1f3cbf: callq  *%r10              ;*invokestatic nanoTime
....................................................................................................
 16.40%   16.49%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.02%   69.30%  [0x7f660d1f7c69:0x7f660d1f7d7b] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
 16.40%   16.49%  [0x7f660d1f3c29:0x7f660d1f3cbf] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  7.79%    8.10%  [0x7f660d1ecc6b:0x7f660d1eccfa] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  0.62%    0.70%  [0xffffffff811aa504:0xffffffff811aa52f] in [unknown] ([unknown])
  0.61%    0.57%  [0xffffffff810603fa:0xffffffff810603fd] in [unknown] ([unknown])
  0.45%    0.37%  [0x7f660d1efe07:0x7f660d1efe63] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.36%    0.42%  [0x7f660d1f3ba5:0x7f660d1f3bf7] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  0.35%    0.12%  [0x7f660d1ecbe8:0x7f660d1ecc5a] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  0.16%    0.03%  [0xffffffff810dd298:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.14%    0.17%  [0x7f6621fb6230:0x7f6621fb6268] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.12%    0.05%  [0xffffffff813d3037:0xffffffff813d3037] in [unknown] ([unknown])
  0.10%           [0x7f662216a0c0:0x7f662216a0da] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.09%    0.02%  [0xffffffff8121abd8:0xffffffff8121ac06] in [unknown] ([unknown])
  0.09%    0.03%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.09%    0.02%  [0x7f660d1f3bfc:0x7f660d1f3c21] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  0.07%    0.02%  [0xffffffff817f1c10:0xffffffff817f1c27] in [unknown] ([unknown])
  0.05%    0.03%  [0xffffffff811aa63e:0xffffffff811aa642] in [unknown] ([unknown])
  0.05%    0.02%  [0x7f662216a106:0x7f662216a12f] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%           [0x7f6622e60ac0:0x7f6622e60ad2] in __pthread_disable_asynccancel (libpthread-2.21.so)
  0.03%           [0xffffffff810c4048:0xffffffff810c4048] in [unknown] ([unknown])
  3.33%    3.48%  <...other 297 warm regions...>
....................................................................................................
 99.98%   99.95%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 94.03%   94.45%  net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_jmhTest::benchmarkArrayManualCopy_thrpt_jmhStub
  3.26%    3.10%  [unknown] ([unknown])
  0.45%    0.37%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy
  0.21%    0.02%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.16%    0.17%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.12%    0.09%  vfprintf (libc-2.21.so)
  0.09%    0.09%  _IO_fwrite (libc-2.21.so)
  0.09%    0.07%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.09%    0.07%  print_insn (hsdis-amd64.so)
  0.05%           __pthread_disable_asynccancel (libpthread-2.21.so)
  0.03%           OP_E_memory (hsdis-amd64.so)
  0.03%    0.07%  _IO_default_xsputn (libc-2.21.so)
  0.03%    0.03%  _ZN7Monitor5ILockEP6Thread (libjvm.so)
  0.03%           _itoa_word (libc-2.21.so)
  0.03%           _ZN13xmlTextStream5flushEv (libjvm.so)
  0.03%    0.03%  _IO_fflush (libc-2.21.so)
  0.03%           strlen (libc-2.21.so)
  0.03%    0.02%  _IO_vsnprintf (libc-2.21.so)
  0.03%           _ZN7nmethod21print_code_comment_onEP12outputStreamiPhS2_ (libjvm.so)
  0.03%    0.07%  _ZN13defaultStream5writeEPKcm (libjvm.so)
  1.09%    0.35%  <...other 59 warm methods...>
....................................................................................................
 99.98%   98.99%  <totals>

....[Distribution by Area]..........................................................................
 94.58%   94.85%  <generated code>
  3.26%    3.10%  <native code in ([unknown])>
  1.30%    1.34%  <native code in (libjvm.so)>
  0.59%    0.49%  <native code in (libc-2.21.so)>
  0.12%    0.10%  <native code in (hsdis-amd64.so)>
  0.09%    0.07%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libzip.so)>
  0.02%           <native code in (perf-15999.map)>
....................................................................................................
 99.98%   99.95%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkShortArrayCopy.benchmarkArrayManualCopy_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 83.33% complete, ETA 00:00:47
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4063078.149 ops/s
# Warmup Iteration   2: 4272042.411 ops/s
# Warmup Iteration   3: 4546772.497 ops/s
Iteration   1: 4122277.294 ops/s
Iteration   2: 4113543.508 ops/s
Iteration   3: 4156296.379 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Dec":
  4130705.727 ±(99.9%) 412094.502 ops/s [Average]
  (min, avg, max) = (4113543.508, 4130705.727, 4156296.379), stdev = 22588.290
  CI (99.9%): [3718611.225, 4542800.229] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 134992 total address lines.
Perf output processed (skipped 3.146 seconds):
 Column 1: cycles (5791 events)
 Column 2: instructions (5756 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f95f51f725f:0x7f95f51f735a] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                               0x00007f95f51f725f: mov    %r12,0x20(%rbx)    ;*putfield realTime
                                                                             ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@40 (line 108)
                               0x00007f95f51f7263: add    $0x40,%rsp
                               0x00007f95f51f7267: pop    %rbp
                               0x00007f95f51f7268: test   %eax,0x17268d92(%rip)        # 0x00007f960c460000
                                                                             ;   {poll_return}
                               0x00007f95f51f726e: retq   
                               0x00007f95f51f726f: nop                       ;*aload_0
                                                                             ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                             ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.33%    0.42%  ↗        ↗   0x00007f95f51f7270: movswl 0x10(%rax,%rdi,2),%r10d
  0.76%    0.82%  │        │   0x00007f95f51f7276: mov    %r10w,0x10(%r9,%rdi,2)  ;*sastore
                  │        │                                                 ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.69%    0.42%  │        │   0x00007f95f51f727c: dec    %edi               ;*iinc
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                  │        │   0x00007f95f51f727e: cmp    $0xffffffffffffffff,%edi
                  ╰        │   0x00007f95f51f7281: jg     0x00007f95f51f7270  ;*invokevirtual benchmarkArrayManualCopy_Dec
                           │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%            ↗       │↗  0x00007f95f51f7283: movzbl 0x94(%rdx),%r11d   ;*getfield isDone
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@24 (line 106)
  0.12%            │       ││  0x00007f95f51f728b: add    $0x1,%rbp          ; OopMap{rcx=Oop rbx=Oop rdx=Oop off=367}
                   │       ││                                                ;*ifeq
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@27 (line 106)
  0.03%            │       ││  0x00007f95f51f728f: test   %eax,0x17268d6b(%rip)        # 0x00007f960c460000
                   │       ││                                                ;   {poll}
  0.03%    0.02%   │       ││  0x00007f95f51f7295: test   %r11d,%r11d
                   │       ││  0x00007f95f51f7298: jne    0x00007f95f51f724a  ;*aload_3
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@13 (line 104)
                   │       ││  0x00007f95f51f729a: mov    0x20(%rcx),%esi    ;*getfield itemCount
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@1 (line 76)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   │       ││  0x00007f95f51f729d: mov    %esi,%edi
  0.07%            │       ││  0x00007f95f51f729f: dec    %edi               ;*isub
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@5 (line 76)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.03%            │       ││  0x00007f95f51f72a1: test   %edi,%edi
                   ╰       ││  0x00007f95f51f72a3: jl     0x00007f95f51f7283  ;*iflt
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                           ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%                    ││  0x00007f95f51f72a5: mov    0x28(%rcx),%r10d   ;*getfield shortSource
                           ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@6 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                           ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007f95f51f72a9: mov    0xc(%r12,%r10,8),%r11d  ;*saload
                           ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@10 (line 31)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                           ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                           ││                                                ; implicit exception: dispatches to 0x00007f95f51f7343
  0.31%    0.02%           ││  0x00007f95f51f72ae: test   %r11d,%r11d
                    ╭      ││  0x00007f95f51f72b1: jbe    0x00007f95f51f7343
  0.19%             │      ││  0x00007f95f51f72b7: cmp    %r11d,%edi
                    │╭     ││  0x00007f95f51f72ba: jae    0x00007f95f51f7343  ;*aload_0
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.09%             ││     ││  0x00007f95f51f72c0: mov    0x2c(%rcx),%r9d    ;*getfield shortTarget
                    ││     ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@1 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││     ││  0x00007f95f51f72c4: mov    0xc(%r12,%r9,8),%r11d  ;*sastore
                    ││     ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                    ││     ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││     ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││     ││                                                ; implicit exception: dispatches to 0x00007f95f51f7343
                    ││     ││  0x00007f95f51f72c9: test   %r11d,%r11d
                    ││╭    ││  0x00007f95f51f72cc: jbe    0x00007f95f51f7343
  0.09%             │││    ││  0x00007f95f51f72ce: cmp    %r11d,%edi
                    │││╭   ││  0x00007f95f51f72d1: jae    0x00007f95f51f7343
  0.05%    0.02%    ││││   ││  0x00007f95f51f72d3: lea    (%r12,%r10,8),%rax
                    ││││   ││  0x00007f95f51f72d7: shl    $0x3,%r9
                    ││││   ││  0x00007f95f51f72db: mov    %r9d,%r11d
                    ││││   ││  0x00007f95f51f72de: shr    %r11d
  0.09%    0.03%    ││││   ││  0x00007f95f51f72e1: and    $0x7,%r11d
                    ││││   ││  0x00007f95f51f72e5: add    %esi,%r11d
                    ││││   ││  0x00007f95f51f72e8: dec    %r11d
                    ││││   ││  0x00007f95f51f72eb: and    $0x7,%r11d
  0.17%    0.03%    ││││   ││  0x00007f95f51f72ef: sub    %r11d,%esi
                    ││││   ││  0x00007f95f51f72f2: add    $0xfffffffffffffffe,%esi
                    ││││   ││  0x00007f95f51f72f5: cmp    %r8d,%esi
                    ││││   ││  0x00007f95f51f72f8: cmovl  %r8d,%esi          ;*aload_0
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.09%    0.07%    ││││↗  ││  0x00007f95f51f72fc: movswl 0x10(%rax,%rdi,2),%r10d
  0.02%    0.02%    │││││  ││  0x00007f95f51f7302: mov    %r10w,0x10(%r9,%rdi,2)  ;*sastore
                    │││││  ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%    │││││  ││  0x00007f95f51f7308: dec    %edi               ;*iinc
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.28%    0.12%    │││││  ││  0x00007f95f51f730a: cmp    %esi,%edi
                    ││││╰  ││  0x00007f95f51f730c: jg     0x00007f95f51f72fc  ;*iflt
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                    ││││   ││  0x00007f95f51f730e: cmp    $0x6,%edi
                    ││││ ╭ ││  0x00007f95f51f7311: jle    0x00007f95f51f7335
           0.02%    ││││ │ ││  0x00007f95f51f7313: nopw   0x0(%rax,%rax,1)
  0.09%    0.03%    ││││ │ ││  0x00007f95f51f731c: xchg   %ax,%ax            ;*aload_0
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  1.49%    1.72%    ││││ │↗││  0x00007f95f51f7320: vmovdqu 0x2(%rax,%rdi,2),%xmm0
  1.19%    1.08%    ││││ ││││  0x00007f95f51f7326: vmovdqu %xmm0,0x2(%r9,%rdi,2)  ;*sastore
                    ││││ ││││                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
 62.13%   64.07%    ││││ ││││  0x00007f95f51f732d: add    $0xfffffffffffffff8,%edi  ;*iinc
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.24%    0.16%    ││││ ││││  0x00007f95f51f7330: cmp    $0x6,%edi
                    ││││ │╰││  0x00007f95f51f7333: jg     0x00007f95f51f7320  ;*iflt
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.03%    ││││ ↘ ││  0x00007f95f51f7335: cmp    $0xffffffffffffffff,%edi
                    ││││   ╰│  0x00007f95f51f7338: jg     0x00007f95f51f7270
                    ││││    ╰  0x00007f95f51f733e: jmpq   0x00007f95f51f7283
                    ↘↘↘↘       0x00007f95f51f7343: mov    $0xffffff86,%esi
                               0x00007f95f51f7348: mov    %rdx,(%rsp)
                               0x00007f95f51f734c: mov    %rbx,0x8(%rsp)
                               0x00007f95f51f7351: mov    %rcx,0x18(%rsp)
                               0x00007f95f51f7356: mov    %edi,0x20(%rsp)
                               0x00007f95f51f735a: nop    
....................................................................................................
 68.71%   69.11%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7f95f51f99e1:0x7f95f51f9a54] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub

                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                                                                    ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                                                                    ; implicit exception: dispatches to 0x00007f95f51f9a8c
                      0x00007f95f51f99e1: test   %r9d,%r9d
                      0x00007f95f51f99e4: jbe    0x00007f95f51f9a8c
                      0x00007f95f51f99ea: cmp    %r9d,%edx
                      0x00007f95f51f99ed: jae    0x00007f95f51f9a8c
                      0x00007f95f51f99f3: shl    $0x3,%rcx
                      0x00007f95f51f99f7: lea    (%r12,%r11,8),%rsi
                      0x00007f95f51f99fb: mov    %ecx,%r9d
  0.02%               0x00007f95f51f99fe: shr    %r9d
  0.02%               0x00007f95f51f9a01: and    $0x7,%r9d
                      0x00007f95f51f9a05: add    %r8d,%r9d
                      0x00007f95f51f9a08: dec    %r9d
  0.02%    0.02%      0x00007f95f51f9a0b: and    $0x7,%r9d
  0.02%               0x00007f95f51f9a0f: sub    %r9d,%r8d
                      0x00007f95f51f9a12: add    $0xfffffffffffffffe,%r8d
                      0x00007f95f51f9a16: cmp    %r10d,%r8d
  0.02%               0x00007f95f51f9a19: cmovl  %r10d,%r8d         ;*aload_0
                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                    ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.02%           ↗   0x00007f95f51f9a1d: movswl 0x10(%rsi,%rdx,2),%r11d
                  │   0x00007f95f51f9a23: mov    %r11w,0x10(%rcx,%rdx,2)  ;*sastore
                  │                                                 ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                  │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                  │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.10%    0.02%  │   0x00007f95f51f9a29: dec    %edx               ;*iinc
                  │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                  │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.07%           │   0x00007f95f51f9a2b: cmp    %r8d,%edx
                  ╰   0x00007f95f51f9a2e: jg     0x00007f95f51f9a1d  ;*iflt
                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                                                                    ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                      0x00007f95f51f9a30: cmp    $0x6,%edx
                      0x00007f95f51f9a33: jle    0x00007f95f51f9a54
                      0x00007f95f51f9a35: nopw   0x0(%rax,%rax,1)   ;*aload_0
                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@11 (line 77)
                                                                    ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
  0.03%    0.02%   ↗  0x00007f95f51f9a40: vmovdqu 0x2(%rsi,%rdx,2),%xmm0
  0.17%    0.21%   │  0x00007f95f51f9a46: vmovdqu %xmm0,0x2(%rcx,%rdx,2)  ;*sastore
                   │                                                ; - net.greypanther.BenchmarkShortArrayCopy::copy@11 (line 31)
                   │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@13 (line 77)
                   │                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
 15.44%   15.72%   │  0x00007f95f51f9a4c: add    $0xfffffffffffffff8,%edx  ;*iinc
                   │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@16 (line 76)
                   │                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                   │  0x00007f95f51f9a4f: cmp    $0x6,%edx
                   ╰  0x00007f95f51f9a52: jg     0x00007f95f51f9a40  ;*iflt
                                                                    ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec@8 (line 76)
                                                                    ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub@14 (line 104)
                      0x00007f95f51f9a54: cmp    $0xffffffffffffffff,%edx
....................................................................................................
 15.92%   15.98%  <total for region 2>

....[Hottest Regions]...............................................................................
 68.71%   69.11%  [0x7f95f51f725f:0x7f95f51f735a] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
 15.92%   15.98%  [0x7f95f51f99e1:0x7f95f51f9a54] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  8.70%    8.74%  [0x7f95f51f0d2a:0x7f95f51f0d79] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  0.76%    0.80%  [0x7f95f51f3f0f:0x7f95f51f3f67] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.60%    0.59%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.50%    0.49%  [0x7f95f51f9965:0x7f95f51f99dc] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  0.38%    0.28%  [0x7f95f51f0c68:0x7f95f51f0d0b] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  0.14%    0.14%  [0xffffffff810dd295:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.12%    0.07%  [0xffffffff811ffee7:0xffffffff811fff18] in [unknown] ([unknown])
  0.07%    0.09%  [0xffffffff8121abe2:0xffffffff8121ac06] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff817efb39:0xffffffff817efb49] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff817f1a0b:0xffffffff817f1a26] in [unknown] ([unknown])
  0.07%           [0xffffffff817f1c10:0xffffffff817f1c10] in [unknown] ([unknown])
  0.07%    0.02%  [0x7f95f51f0cf3:0x7f95f51f0d2c] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  0.05%    0.05%  [0xffffffff810a3c73:0xffffffff810a3c73] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff811ffe75:0xffffffff811ffe7f] in [unknown] ([unknown])
  0.05%    0.07%  [0xffffffff813eebc4:0xffffffff813eebe8] in [unknown] ([unknown])
  0.05%    0.12%  [0x7f960b184571:0x7f960b1845b4] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.05%  [0x7f960b33b102:0x7f960b33b116] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.07%  [0x7f960b8d46ef:0x7f960b8d46fa] in __strchrnul (libc-2.21.so)
  3.49%    3.23%  <...other 280 warm regions...>
....................................................................................................
 99.98%   99.98%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 94.28%   94.61%  net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Dec_jmhTest::benchmarkArrayManualCopy_Dec_thrpt_jmhStub
  2.69%    2.24%  [unknown] ([unknown])
  0.76%    0.80%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Dec
  0.14%    0.02%  print_insn (hsdis-amd64.so)
  0.10%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.10%    0.26%  vfprintf (libc-2.21.so)
  0.09%           <stub: method entry point (kind = zerolocals)>
  0.07%    0.05%  _IO_fwrite (libc-2.21.so)
  0.05%    0.05%  _IO_fflush (libc-2.21.so)
  0.05%    0.09%  strlen (libc-2.21.so)
  0.05%    0.12%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.07%  __strchrnul (libc-2.21.so)
  0.05%    0.02%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.05%    0.12%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.03%    0.02%  _IO_default_xsputn (libc-2.21.so)
  0.03%    0.23%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.03%    0.03%  _ZN7Monitor6unlockEv (libjvm.so)
  0.03%           _ZN15SignatureStream18next_non_primitiveEi (libjvm.so)
  0.03%           hsdis_read_memory_func (hsdis-amd64.so)
  0.03%           _ZNK8CodeHeap10find_startEPv (libjvm.so)
  1.23%    0.45%  <...other 63 warm methods...>
....................................................................................................
 99.98%   99.18%  <totals>

....[Distribution by Area]..........................................................................
 95.18%   95.43%  <generated code>
  2.69%    2.24%  <native code in ([unknown])>
  1.26%    1.39%  <native code in (libjvm.so)>
  0.55%    0.78%  <native code in (libc-2.21.so)>
  0.21%    0.09%  <native code in (hsdis-amd64.so)>
  0.07%    0.05%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libzip.so)>
....................................................................................................
 99.98%   99.98%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkShortArrayCopy.benchmarkArrayManualCopy_Overlap_Dec
# Parameters: (arraySizeInKb = 10)

# Run progress: 86.67% complete, ETA 00:00:38
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 559834.964 ops/s
# Warmup Iteration   2: 593082.827 ops/s
# Warmup Iteration   3: 506571.878 ops/s
Iteration   1: 594166.669 ops/s
Iteration   2: 595579.609 ops/s
Iteration   3: 553832.159 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayManualCopy_Overlap_Dec":
  581192.812 ±(99.9%) 432477.487 ops/s [Average]
  (min, avg, max) = (553832.159, 581192.812, 595579.609), stdev = 23705.550
  CI (99.9%): [148715.325, 1013670.299] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 132839 total address lines.
Perf output processed (skipped 3.125 seconds):
 Column 1: cycles (5749 events)
 Column 2: instructions (5733 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7ff32c79c0b6:0x7ff32c79c1c4] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                               0x00007ff32c79c0b6: mov    %r12,0x20(%rbx)    ;*putfield realTime
                                                                             ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@40 (line 108)
                               0x00007ff32c79c0ba: add    $0x40,%rsp
                               0x00007ff32c79c0be: pop    %rbp
                               0x00007ff32c79c0bf: test   %eax,0x15e36f3b(%rip)        # 0x00007ff3425d3000
                                                                             ;   {poll_return}
                               0x00007ff32c79c0c5: retq   
                               0x00007ff32c79c0c6: xchg   %ax,%ax            ;*aload_0
                                                                             ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                                                                             ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.02%  ↗        ↗   0x00007ff32c79c0c8: movswl 0xe(%r11,%r9,2),%r10d
  0.02%           │        │   0x00007ff32c79c0ce: mov    %r10w,0x10(%r11,%r9,2)  ;*sastore
                  │        │                                                 ; - net.greypanther.BenchmarkShortArrayCopy::selfCopy@11 (line 36)
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.09%    0.10%  │        │   0x00007ff32c79c0d4: dec    %r9d               ;*isub
                  │        │                                                 ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  │        │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │        │   0x00007ff32c79c0d7: test   %r9d,%r9d
                  ╰        │   0x00007ff32c79c0da: jg     0x00007ff32c79c0c8  ;*invokevirtual benchmarkArrayManualCopy_Overlap_Dec
                           │                                                 ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                   ↗       │↗  0x00007ff32c79c0dc: movzbl 0x94(%rcx),%r11d   ;*getfield isDone
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@24 (line 106)
  0.02%    0.02%   │       ││  0x00007ff32c79c0e4: add    $0x1,%rbp          ; OopMap{r8=Oop rcx=Oop rbx=Oop off=392}
                   │       ││                                                ;*ifeq
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@27 (line 106)
                   │       ││  0x00007ff32c79c0e8: test   %eax,0x15e36f12(%rip)        # 0x00007ff3425d3000
                   │       ││                                                ;   {poll}
                   │       ││  0x00007ff32c79c0ee: test   %r11d,%r11d
                   │       ││  0x00007ff32c79c0f1: jne    0x00007ff32c79c0a1  ;*aload_3
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@13 (line 104)
                   │       ││  0x00007ff32c79c0f3: mov    0x20(%r8),%edx     ;*getfield itemCount
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@1 (line 88)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                   │       ││  0x00007ff32c79c0f7: mov    %edx,%r9d
                   │       ││  0x00007ff32c79c0fa: dec    %r9d               ;*isub
                   │       ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@5 (line 88)
                   │       ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.02%            │       ││  0x00007ff32c79c0fd: test   %r9d,%r9d
                   ╰       ││  0x00007ff32c79c100: jle    0x00007ff32c79c0dc  ;*ifle
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                           ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.02%                    ││  0x00007ff32c79c102: mov    0x28(%r8),%r10d    ;*getfield shortSource
                           ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::selfCopy@1 (line 36)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                           ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                           ││  0x00007ff32c79c106: mov    0xc(%r12,%r10,8),%r11d  ;*saload
                           ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::selfCopy@10 (line 36)
                           ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                           ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                           ││                                                ; implicit exception: dispatches to 0x00007ff32c79c1bf
  0.05%    0.02%           ││  0x00007ff32c79c10b: test   %r11d,%r11d
                    ╭      ││  0x00007ff32c79c10e: jbe    0x00007ff32c79c1bf
  0.03%    0.02%    │      ││  0x00007ff32c79c114: add    $0xfffffffffffffffe,%edx
                    │      ││  0x00007ff32c79c117: cmp    %r11d,%edx
                    │╭     ││  0x00007ff32c79c11a: jae    0x00007ff32c79c1bf
  0.02%    0.05%    ││     ││  0x00007ff32c79c120: cmp    $0x1,%r11d
                    ││╭    ││  0x00007ff32c79c124: jbe    0x00007ff32c79c1bf
                    │││    ││  0x00007ff32c79c12a: cmp    %r11d,%r9d
                    │││╭   ││  0x00007ff32c79c12d: jae    0x00007ff32c79c1bf
  0.02%    0.03%    ││││   ││  0x00007ff32c79c133: lea    (%r12,%r10,8),%r11  ;*aload_0
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    ││││↗  ││  0x00007ff32c79c137: movswl 0xe(%r11,%r9,2),%edi
                    │││││  ││  0x00007ff32c79c13d: mov    %di,0x10(%r11,%r9,2)  ;*sastore
                    │││││  ││                                                ; - net.greypanther.BenchmarkShortArrayCopy::selfCopy@11 (line 36)
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    │││││  ││  0x00007ff32c79c143: dec    %r9d               ;*isub
                    │││││  ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                    │││││  ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.05%    0.02%    │││││  ││  0x00007ff32c79c146: cmp    %edx,%r9d
                    ││││╰  ││  0x00007ff32c79c149: jg     0x00007ff32c79c137  ;*ifle
                    ││││   ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                    ││││   ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    ││││   ││  0x00007ff32c79c14b: cmp    $0x7,%r9d
                    ││││ ╭ ││  0x00007ff32c79c14f: jle    0x00007ff32c79c1b1  ;*aload_0
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.28%    0.31%    ││││ │↗││  0x00007ff32c79c151: movslq %r9d,%r10
  0.10%    0.07%    ││││ ││││  0x00007ff32c79c154: lea    (%r11,%r10,2),%rdi
  8.05%    6.98%    ││││ ││││  0x00007ff32c79c158: movswl 0xe(%rdi),%r10d
  0.35%    0.21%    ││││ ││││  0x00007ff32c79c15d: mov    %r10w,0x10(%rdi)
  1.10%    1.01%    ││││ ││││  0x00007ff32c79c162: movswl 0xc(%rdi),%r10d
  0.14%    0.23%    ││││ ││││  0x00007ff32c79c167: mov    %r10w,0xe(%rdi)
  9.01%   16.47%    ││││ ││││  0x00007ff32c79c16c: movswl 0xa(%rdi),%r10d
  0.47%    0.21%    ││││ ││││  0x00007ff32c79c171: mov    %r10w,0xc(%rdi)
  7.55%   10.94%    ││││ ││││  0x00007ff32c79c176: movswl 0x8(%rdi),%r10d
  0.30%    0.14%    ││││ ││││  0x00007ff32c79c17b: mov    %r10w,0xa(%rdi)
  9.15%    6.66%    ││││ ││││  0x00007ff32c79c180: movswl 0x6(%rdi),%r10d
  0.30%    0.16%    ││││ ││││  0x00007ff32c79c185: mov    %r10w,0x8(%rdi)
  6.73%    6.38%    ││││ ││││  0x00007ff32c79c18a: movswl 0x4(%rdi),%r10d
  0.14%    0.10%    ││││ ││││  0x00007ff32c79c18f: mov    %r10w,0x6(%rdi)
  9.46%    7.29%    ││││ ││││  0x00007ff32c79c194: movswl 0x2(%rdi),%r10d
  0.33%    0.16%    ││││ ││││  0x00007ff32c79c199: mov    %r10w,0x4(%rdi)
  7.60%    5.91%    ││││ ││││  0x00007ff32c79c19e: movswl (%rdi),%r10d
  0.09%    0.09%    ││││ ││││  0x00007ff32c79c1a2: mov    %r10w,0x2(%rdi)    ;*sastore
                    ││││ ││││                                                ; - net.greypanther.BenchmarkShortArrayCopy::selfCopy@11 (line 36)
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  7.76%    5.67%    ││││ ││││  0x00007ff32c79c1a7: add    $0xfffffffffffffff8,%r9d  ;*isub
                    ││││ ││││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                    ││││ ││││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.10%    0.02%    ││││ ││││  0x00007ff32c79c1ab: cmp    $0x7,%r9d
                    ││││ │╰││  0x00007ff32c79c1af: jg     0x00007ff32c79c151  ;*ifle
                    ││││ │ ││                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                    ││││ │ ││                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                    ││││ ↘ ││  0x00007ff32c79c1b1: test   %r9d,%r9d
                    ││││   ╰│  0x00007ff32c79c1b4: jg     0x00007ff32c79c0c8
                    ││││    ╰  0x00007ff32c79c1ba: jmpq   0x00007ff32c79c0dc
                    ↘↘↘↘       0x00007ff32c79c1bf: mov    $0xffffff86,%esi
                               0x00007ff32c79c1c4: mov    %rcx,(%rsp)
....................................................................................................
 69.35%   69.28%  <total for region 1>

....[Hottest Region 2]..............................................................................
 [0x7ff32c79df01:0x7ff32c79df70] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub

                                                                   ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                     0x00007ff32c79df01: cmp    %r9d,%r8d
                     0x00007ff32c79df04: jg     0x00007ff32c79def2  ;*ifle
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                   ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                     0x00007ff32c79df06: cmp    $0x7,%r8d
                     0x00007ff32c79df0a: jle    0x00007ff32c79df70
                     0x00007ff32c79df0c: nopl   0x0(%rax)          ;*aload_0
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@11 (line 89)
                                                                   ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  0.02%    0.03%  ↗  0x00007ff32c79df10: movslq %r8d,%r10
                  │  0x00007ff32c79df13: lea    (%r11,%r10,2),%r9
  1.93%    1.59%  │  0x00007ff32c79df17: movswl 0xe(%r9),%r10d
                  │  0x00007ff32c79df1c: mov    %r10w,0x10(%r9)
  0.09%    0.02%  │  0x00007ff32c79df21: movswl 0xc(%r9),%r10d
  0.02%    0.02%  │  0x00007ff32c79df26: mov    %r10w,0xe(%r9)
  2.45%    3.91%  │  0x00007ff32c79df2b: movswl 0xa(%r9),%r10d
           0.02%  │  0x00007ff32c79df30: mov    %r10w,0xc(%r9)
  1.72%    2.37%  │  0x00007ff32c79df35: movswl 0x8(%r9),%r10d
  0.02%           │  0x00007ff32c79df3a: mov    %r10w,0xa(%r9)
  2.26%    1.47%  │  0x00007ff32c79df3f: movswl 0x6(%r9),%r10d
  0.05%           │  0x00007ff32c79df44: mov    %r10w,0x8(%r9)
  1.64%    1.60%  │  0x00007ff32c79df49: movswl 0x4(%r9),%r10d
                  │  0x00007ff32c79df4e: mov    %r10w,0x6(%r9)
  1.98%    1.64%  │  0x00007ff32c79df53: movswl 0x2(%r9),%r10d
  0.02%    0.02%  │  0x00007ff32c79df58: mov    %r10w,0x4(%r9)
  1.51%    1.71%  │  0x00007ff32c79df5d: movswl (%r9),%r10d
                  │  0x00007ff32c79df61: mov    %r10w,0x2(%r9)     ;*sastore
                  │                                                ; - net.greypanther.BenchmarkShortArrayCopy::selfCopy@11 (line 36)
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@16 (line 89)
                  │                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
  1.70%    1.15%  │  0x00007ff32c79df66: add    $0xfffffffffffffff8,%r8d  ;*isub
                  │                                                ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@14 (line 89)
                  │                                                ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                  │  0x00007ff32c79df6a: cmp    $0x7,%r8d
                  ╰  0x00007ff32c79df6e: jg     0x00007ff32c79df10  ;*ifle
                                                                   ; - net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec@8 (line 88)
                                                                   ; - net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub@14 (line 104)
                     0x00007ff32c79df70: test   %r8d,%r8d
....................................................................................................
 15.41%   15.54%  <total for region 2>

....[Hottest Regions]...............................................................................
 69.35%   69.28%  [0x7ff32c79c0b6:0x7ff32c79c1c4] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
 15.41%   15.54%  [0x7ff32c79df01:0x7ff32c79df70] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  7.90%    7.95%  [0x7ff32c792153:0x7ff32c7921f0] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  1.51%    1.50%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  1.44%    1.74%  [0x7ff32c795322:0x7ff32c795392] in net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  0.12%    0.14%  [0xffffffff810dd290:0xffffffff810dd2d3] in [unknown] ([unknown])
  0.12%    0.03%  [0xffffffff811ffe70:0xffffffff811ffe7f] in [unknown] ([unknown])
  0.12%    0.19%  [0x7ff3412fa221:0x7ff3412fa23e] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.10%    0.05%  [0xffffffff811fff08:0xffffffff811fff3d] in [unknown] ([unknown])
  0.10%    0.02%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.10%    0.09%  [0x7ff3412f7585:0x7ff3412f7598] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.09%    0.05%  [0xffffffff817efb49:0xffffffff817efb5c] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff813d3035:0xffffffff813d3037] in [unknown] ([unknown])
  0.07%    0.02%  [0x7ff3414ae0ae:0x7ff3414ae0dd] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%           [0x7ff341a2d7fc:0x7ff341a2d806] in _IO_no_init (libc-2.21.so)
  0.05%    0.02%  [0xffffffff8121b110:0xffffffff8121b127] in [unknown] ([unknown])
  0.05%    0.03%  [0xffffffff8136859e:0xffffffff813685b5] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff817f19e4:0xffffffff817f19e9] in [unknown] ([unknown])
  0.05%    0.02%  [0x7ff341a20b74:0x7ff341a20b74] in _IO_fwrite (libc-2.21.so)
  0.05%    0.03%  [0x7ff341a3c69f:0x7ff341a3c6b0] in strlen (libc-2.21.so)
  3.11%    3.24%  <...other 267 warm regions...>
....................................................................................................
 99.97%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 92.75%   92.81%  net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayManualCopy_Overlap_Dec_jmhTest::benchmarkArrayManualCopy_Overlap_Dec_thrpt_jmhStub
  3.41%    3.05%  [unknown] ([unknown])
  1.44%    1.76%  net.greypanther.AbstractBenchmark::benchmarkArrayManualCopy_Overlap_Dec
  0.16%    0.23%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.16%    0.10%  vfprintf (libc-2.21.so)
  0.12%    0.07%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.10%    0.09%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.10%    0.05%  print_insn (hsdis-amd64.so)
  0.07%    0.03%  __strcpy_sse2_unaligned (libc-2.21.so)
  0.07%    0.02%  _IO_no_init (libc-2.21.so)
  0.05%    0.07%  _IO_default_xsputn (libc-2.21.so)
  0.05%    0.03%  strlen (libc-2.21.so)
  0.05%    0.07%  _IO_fwrite (libc-2.21.so)
  0.05%    0.02%  _IO_file_sync@@GLIBC_2.2.5 (libc-2.21.so)
  0.03%    0.03%  jio_print (libjvm.so)
  0.03%    0.03%  _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.03%    0.02%  _ZN16LIR_OpVisitState5visitEP6LIR_Op (libjvm.so)
  0.03%    0.02%  _IO_str_init_static_internal (libc-2.21.so)
  0.03%           __pthread_disable_asynccancel (libpthread-2.21.so)
  0.03%    0.03%  _IO_file_xsputn@@GLIBC_2.2.5 (libc-2.21.so)
  1.17%    0.45%  <...other 63 warm methods...>
....................................................................................................
 99.97%   99.01%  <totals>

....[Distribution by Area]..........................................................................
 94.24%   94.65%  <generated code>
  3.41%    3.05%  <native code in ([unknown])>
  1.32%    1.27%  <native code in (libjvm.so)>
  0.80%    0.87%  <native code in (libc-2.21.so)>
  0.14%    0.09%  <native code in (hsdis-amd64.so)>
  0.05%    0.07%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.97%  100.00%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkShortArrayCopy.benchmarkArraySystemArraycopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 90.00% complete, ETA 00:00:28
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4520082.315 ops/s
# Warmup Iteration   2: 4791185.936 ops/s
# Warmup Iteration   3: 4448239.192 ops/s
Iteration   1: 4150757.994 ops/s
Iteration   2: 5003271.106 ops/s
Iteration   3: 4626294.486 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy":
  4593441.195 ±(99.9%) 7793810.469 ops/s [Average]
  (min, avg, max) = (4150757.994, 4593441.195, 5003271.106), stdev = 427205.051
  CI (99.9%): [≈ 0, 12387251.664] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 130528 total address lines.
Perf output processed (skipped 3.152 seconds):
 Column 1: cycles (5507 events)
 Column 2: instructions (5473 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f5ca1052490:0x7f5ca105259d] in StubRoutines::jshort_disjoint_arraycopy

                              0x00007f5ca1052490: (bad)  
                              0x00007f5ca1052493: rol    $0xf5,%ch
                              0x00007f5ca1052496: out    %eax,(%dx)
                              0x00007f5ca1052497: leaveq 
                              0x00007f5ca1052498: add    $0x4,%rdx
                              0x00007f5ca105249c: jg     Stub::jbyte_arraycopy+101 0x0x7f5ca1052445
                              0x00007f5ca105249e: xor    %rax,%rax
                              0x00007f5ca10524a1: leaveq 
                              0x00007f5ca10524a2: retq   
                            StubRoutines::jshort_disjoint_arraycopy [0x00007f5ca10524c0, 0x00007f5ca1052568[ (168 bytes)
  0.07%    0.26%              0x00007f5ca10524c0: push   %rbp
           0.02%              0x00007f5ca10524c1: mov    %rsp,%rbp
  0.07%    0.07%          ↗↗  0x00007f5ca10524c4: mov    %rdx,%rcx
  0.07%    0.07%          ││  0x00007f5ca10524c7: shr    $0x2,%rdx
                          ││  0x00007f5ca10524cb: lea    -0x8(%rdi,%rdx,8),%rdi
  0.02%                   ││  0x00007f5ca10524d0: lea    -0x8(%rsi,%rdx,8),%rsi
  0.09%    0.16%          ││  0x00007f5ca10524d5: neg    %rdx
  0.04%    0.04%  ╭       ││  0x00007f5ca10524d8: jmpq   Stub::jshort_disjoint_arraycopy+120 0x0x7f5ca1052538
                  │↗    ↗ ││  0x00007f5ca10524dd: mov    0x8(%rdi,%rdx,8),%rax
                  ││    │ ││  0x00007f5ca10524e2: mov    %rax,0x8(%rsi,%rdx,8)
                  ││    │ ││  0x00007f5ca10524e7: inc    %rdx
                  │╰    │ ││  0x00007f5ca10524ea: jne    Stub::jshort_disjoint_arraycopy+29 0x0x7f5ca10524dd
  0.11%    0.07%  │     │↗││  0x00007f5ca10524ec: test   $0x2,%ecx
                  │ ╭   ││││  0x00007f5ca10524f2: je     Stub::jshort_disjoint_arraycopy+66 0x0x7f5ca1052502
                  │ │   ││││  0x00007f5ca10524f4: mov    0x8(%rdi),%eax
                  │ │   ││││  0x00007f5ca10524f7: mov    %eax,0x8(%rsi)
                  │ │   ││││  0x00007f5ca10524fa: add    $0x4,%rdi
                  │ │   ││││  0x00007f5ca10524fe: add    $0x4,%rsi
  0.11%    0.02%  │ ↘   ││││  0x00007f5ca1052502: test   $0x1,%ecx
                  │  ╭  ││││  0x00007f5ca1052508: je     Stub::jshort_disjoint_arraycopy+82 0x0x7f5ca1052512
                  │  │  ││││  0x00007f5ca105250a: mov    0x8(%rdi),%ax
                  │  │  ││││  0x00007f5ca105250e: mov    %ax,0x8(%rsi)
  0.29%    0.05%  │  ↘  ││││  0x00007f5ca1052512: xor    %rax,%rax
                  │     ││││  0x00007f5ca1052515: leaveq 
  0.22%    0.13%  │     ││││  0x00007f5ca1052516: retq   
                  │     ││││  0x00007f5ca1052517: nopw   0x0(%rax,%rax,1)
  2.03%    1.61%  │   ↗ ││││  0x00007f5ca1052520: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 19.19%    5.90%  │   │ ││││  0x00007f5ca1052526: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
 64.75%   79.99%  │   │ ││││  0x00007f5ca105252c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  2.61%    1.04%  │   │ ││││  0x00007f5ca1052532: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
  1.80%    1.96%  ↘   │ ││││  0x00007f5ca1052538: add    $0x8,%rdx
                      ╰ ││││  0x00007f5ca105253c: jle    Stub::jshort_disjoint_arraycopy+96 0x0x7f5ca1052520
  0.05%    0.07%        ││││  0x00007f5ca105253e: sub    $0x4,%rdx
                       ╭││││  0x00007f5ca1052542: jg     Stub::jshort_disjoint_arraycopy+148 0x0x7f5ca1052554
                       │││││  0x00007f5ca1052544: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                       │││││  0x00007f5ca105254a: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
                       │││││  0x00007f5ca1052550: add    $0x4,%rdx
  0.35%    0.07%       ↘││││  0x00007f5ca1052554: (bad)  
                        ││││  0x00007f5ca1052557: rol    $0xf5,%ch
                        ││││  0x00007f5ca105255a: out    %eax,(%dx)
                        ││││  0x00007f5ca105255b: leaveq 
                        ││││  0x00007f5ca105255c: sub    $0x4,%rdx
                        ╰│││  0x00007f5ca1052560: jl     Stub::jshort_disjoint_arraycopy+29 0x0x7f5ca10524dd
  0.02%    0.05%         ╰││  0x00007f5ca1052566: jmp    Stub::jshort_disjoint_arraycopy+44 0x0x7f5ca10524ec
                          ││StubRoutines::jshort_arraycopy [0x00007f5ca1052580, 0x00007f5ca1052623[ (163 bytes)
                          ││  0x00007f5ca1052580: push   %rbp
                          ││  0x00007f5ca1052581: mov    %rsp,%rbp
                          ││  0x00007f5ca1052584: cmp    %rdi,%rsi
                          ││  0x00007f5ca1052587: lea    (%rdi,%rdx,2),%rax
                          ╰│  0x00007f5ca105258b: jbe    Stub::jshort_disjoint_arraycopy+4 0x0x7f5ca10524c4
                           │  0x00007f5ca1052591: cmp    %rax,%rsi
                           ╰  0x00007f5ca1052594: jae    Stub::jshort_disjoint_arraycopy+4 0x0x7f5ca10524c4
                              0x00007f5ca105259a: mov    %rdx,%rcx
                              0x00007f5ca105259d: shr    $0x2,%rdx
....................................................................................................
 91.92%   91.60%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.92%   91.60%  [0x7f5ca1052490:0x7f5ca105259d] in StubRoutines::jshort_disjoint_arraycopy
  1.42%    2.16%  [0x7f5ca11ee135:0x7f5ca11ee1c7] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.58%    0.53%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.49%    0.51%  [0x7f5ca11efe46:0x7f5ca11efee9] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.20%    0.05%  [0xffffffff810dd298:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.13%    0.11%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.11%           [0xffffffff817f1a0c:0xffffffff817f1a26] in [unknown] ([unknown])
  0.11%    0.18%  [0x7f5cb8416230:0x7f5cb8416254] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.09%    0.04%  [0xffffffff813d3035:0xffffffff813d3037] in [unknown] ([unknown])
  0.09%    0.13%  [0x7f5ca11e6d70:0x7f5ca11e6deb] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.09%    0.18%  [0x7f5cb848bb0f:0x7f5cb848bb64] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.09%    0.04%  [0x7f5cb8b3cb68:0x7f5cb8b3cb74] in _IO_fwrite (libc-2.21.so)
  0.09%    0.02%  [0x7f5cb8b56a0d:0x7f5cb8b56a42] in __strchr_sse2 (libc-2.21.so)
  0.07%    0.13%  [0xffffffff811ffee1:0xffffffff811fff2a] in [unknown] ([unknown])
  0.07%    0.02%  [0xffffffff817f16a9:0xffffffff817f16bb] in [unknown] ([unknown])
  0.07%           [0x7f5cb804e2bf:0x7f5cb804e2d7] in _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.07%    0.11%  [0x7f5cb85ca0a0:0x7f5cb85ca106] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.02%  [0xffffffff817efb36:0xffffffff817efb49] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff817f1c10:0xffffffff817f1c49] in [unknown] ([unknown])
  0.05%           [0x7f5cb8414d20:0x7f5cb8414d37] in _ZN12outputStream12do_vsnprintfEPcmPKcP13__va_list_tagbRm (libjvm.so)
  4.12%    4.15%  <...other 321 warm regions...>
....................................................................................................
 99.98%  100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.92%   91.60%  StubRoutines::jshort_disjoint_arraycopy
  3.18%    2.87%  [unknown] ([unknown])
  2.05%    2.83%  net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArraySystemArraycopy_jmhTest::benchmarkArraySystemArraycopy_thrpt_jmhStub
  0.20%    0.05%  print_insn (hsdis-amd64.so)
  0.18%    0.18%  vfprintf (libc-2.21.so)
  0.16%    0.18%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.13%    0.13%  _IO_fwrite (libc-2.21.so)
  0.11%    0.20%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.09%    0.04%  __strchr_sse2 (libc-2.21.so)
  0.09%    0.13%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%           _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.07%    0.04%  _ZN12outputStream12do_vsnprintfEPcmPKcP13__va_list_tagbRm (libjvm.so)
  0.05%    0.02%  [unknown] (libpthread-2.21.so)
  0.05%    0.09%  _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.04%    0.11%  _IO_default_xsputn (libc-2.21.so)
  0.04%    0.07%  _ZN7Monitor6unlockEv (libjvm.so)
  0.04%    0.02%  _ZN13defaultStream4holdEl (libjvm.so)
  0.04%    0.02%  __pthread_disable_asynccancel (libpthread-2.21.so)
  0.04%    0.05%  _IO_file_xsputn@@GLIBC_2.2.5 (libc-2.21.so)
  0.04%           _ZN7Monitor28lock_without_safepoint_checkEv (libjvm.so)
  1.40%    0.68%  <...other 74 warm methods...>
....................................................................................................
 99.98%   99.31%  <totals>

....[Distribution by Area]..........................................................................
 94.13%   94.54%  <generated code>
  3.18%    2.87%  <native code in ([unknown])>
  1.51%    1.43%  <native code in (libjvm.so)>
  0.73%    0.91%  <native code in (libc-2.21.so)>
  0.31%    0.18%  <native code in (hsdis-amd64.so)>
  0.13%    0.07%  <native code in (libpthread-2.21.so)>
....................................................................................................
 99.98%  100.00%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkShortArrayCopy.benchmarkArraySystemArraycopy_Overlap
# Parameters: (arraySizeInKb = 10)

# Run progress: 93.33% complete, ETA 00:00:19
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4691737.805 ops/s
# Warmup Iteration   2: 4524321.128 ops/s
# Warmup Iteration   3: 4573070.911 ops/s
Iteration   1: 4677837.160 ops/s
Iteration   2: 4407056.156 ops/s
Iteration   3: 4695027.186 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArraySystemArraycopy_Overlap":
  4593306.834 ±(99.9%) 2946847.507 ops/s [Average]
  (min, avg, max) = (4407056.156, 4593306.834, 4695027.186), stdev = 161526.656
  CI (99.9%): [1646459.326, 7540154.341] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 129791 total address lines.
Perf output processed (skipped 3.125 seconds):
 Column 1: cycles (5680 events)
 Column 2: instructions (5667 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f18ed052497:0x7f18ed052581] in StubRoutines::jshort_disjoint_arraycopy

                            0x00007f18ed052497: leaveq 
                            0x00007f18ed052498: add    $0x4,%rdx
                            0x00007f18ed05249c: jg     Stub::jbyte_arraycopy+101 0x0x7f18ed052445
                            0x00007f18ed05249e: xor    %rax,%rax
                            0x00007f18ed0524a1: leaveq 
                            0x00007f18ed0524a2: retq   
                          StubRoutines::jshort_disjoint_arraycopy [0x00007f18ed0524c0, 0x00007f18ed052568[ (168 bytes)
                            0x00007f18ed0524c0: push   %rbp
                            0x00007f18ed0524c1: mov    %rsp,%rbp
                            0x00007f18ed0524c4: mov    %rdx,%rcx
  0.21%    0.26%            0x00007f18ed0524c7: shr    $0x2,%rdx
  0.02%                     0x00007f18ed0524cb: lea    -0x8(%rdi,%rdx,8),%rdi
                            0x00007f18ed0524d0: lea    -0x8(%rsi,%rdx,8),%rsi
  0.02%                     0x00007f18ed0524d5: neg    %rdx
  0.11%    0.28%  ╭         0x00007f18ed0524d8: jmpq   Stub::jshort_disjoint_arraycopy+120 0x0x7f18ed052538
  0.19%    0.97%  │↗    ↗   0x00007f18ed0524dd: mov    0x8(%rdi,%rdx,8),%rax
                  ││    │   0x00007f18ed0524e2: mov    %rax,0x8(%rsi,%rdx,8)
  0.65%    1.68%  ││    │   0x00007f18ed0524e7: inc    %rdx
                  │╰    │   0x00007f18ed0524ea: jne    Stub::jshort_disjoint_arraycopy+29 0x0x7f18ed0524dd
  0.02%           │     │↗  0x00007f18ed0524ec: test   $0x2,%ecx
                  │ ╭   ││  0x00007f18ed0524f2: je     Stub::jshort_disjoint_arraycopy+66 0x0x7f18ed052502
  0.02%    0.07%  │ │   ││  0x00007f18ed0524f4: mov    0x8(%rdi),%eax
                  │ │   ││  0x00007f18ed0524f7: mov    %eax,0x8(%rsi)
  0.12%    0.44%  │ │   ││  0x00007f18ed0524fa: add    $0x4,%rdi
                  │ │   ││  0x00007f18ed0524fe: add    $0x4,%rsi
  0.07%    0.12%  │ ↘   ││  0x00007f18ed052502: test   $0x1,%ecx
                  │  ╭  ││  0x00007f18ed052508: je     Stub::jshort_disjoint_arraycopy+82 0x0x7f18ed052512
                  │  │  ││  0x00007f18ed05250a: mov    0x8(%rdi),%ax
  0.12%    0.34%  │  │  ││  0x00007f18ed05250e: mov    %ax,0x8(%rsi)
                  │  ↘  ││  0x00007f18ed052512: xor    %rax,%rax
  0.07%    0.05%  │     ││  0x00007f18ed052515: leaveq 
  0.07%    0.34%  │     ││  0x00007f18ed052516: retq   
                  │     ││  0x00007f18ed052517: nopw   0x0(%rax,%rax,1)
  3.24%    2.52%  │   ↗ ││  0x00007f18ed052520: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
 30.58%   20.36%  │   │ ││  0x00007f18ed052526: vmovdqu %ymm0,-0x38(%rsi,%rdx,8)
  6.51%    6.11%  │   │ ││  0x00007f18ed05252c: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
  9.47%    7.62%  │   │ ││  0x00007f18ed052532: vmovdqu %ymm1,-0x18(%rsi,%rdx,8)
 39.91%   48.26%  ↘   │ ││  0x00007f18ed052538: add    $0x8,%rdx
                      ╰ ││  0x00007f18ed05253c: jle    Stub::jshort_disjoint_arraycopy+96 0x0x7f18ed052520
  0.02%                 ││  0x00007f18ed05253e: sub    $0x4,%rdx
                       ╭││  0x00007f18ed052542: jg     Stub::jshort_disjoint_arraycopy+148 0x0x7f18ed052554
  0.07%                │││  0x00007f18ed052544: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
  0.11%    0.07%       │││  0x00007f18ed05254a: vmovdqu %ymm0,-0x18(%rsi,%rdx,8)
  0.14%    0.28%       │││  0x00007f18ed052550: add    $0x4,%rdx
                       ↘││  0x00007f18ed052554: (bad)  
                        ││  0x00007f18ed052557: rol    $0xf5,%ch
                        ││  0x00007f18ed05255a: out    %eax,(%dx)
                        ││  0x00007f18ed05255b: leaveq 
                        ││  0x00007f18ed05255c: sub    $0x4,%rdx
                        ╰│  0x00007f18ed052560: jl     Stub::jshort_disjoint_arraycopy+29 0x0x7f18ed0524dd
                         ╰  0x00007f18ed052566: jmp    Stub::jshort_disjoint_arraycopy+44 0x0x7f18ed0524ec
                          StubRoutines::jshort_arraycopy [0x00007f18ed052580, 0x00007f18ed052623[ (163 bytes)
  0.23%    0.32%            0x00007f18ed052580: push   %rbp
           0.07%            0x00007f18ed052581: mov    %rsp,%rbp
....................................................................................................
 91.74%   89.78%  <total for region 1>

....[Hottest Regions]...............................................................................
 91.74%   89.78%  [0x7f18ed052497:0x7f18ed052581] in StubRoutines::jshort_disjoint_arraycopy
  2.64%    2.63%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.51%    1.82%  [0x7f18ed1ebae8:0x7f18ed1ebb70] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.40%    0.62%  [0x7f18ed05254a:0x7f18ed0525b9] in StubRoutines::jshort_arraycopy
  0.35%    0.46%  [0xffffffff811aa500:0xffffffff811aa518] in [unknown] ([unknown])
  0.18%    0.62%  [0x7f18ed1ed894:0x7f18ed1ed92f] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.14%    0.12%  [0xffffffff810dd298:0xffffffff810dd2d8] in [unknown] ([unknown])
  0.14%    0.05%  [0xffffffff817efb49:0xffffffff817efb49] in [unknown] ([unknown])
  0.11%    0.14%  [0x7f1902ee6230:0x7f1902ee6242] in _ZN10fileStream5writeEPKcm (libjvm.so)
  0.07%    0.04%  [0xffffffff817efbd0:0xffffffff817efbd0] in [unknown] ([unknown])
  0.07%           [0xffffffff817f1c10:0xffffffff817f1c1c] in [unknown] ([unknown])
  0.07%    0.02%  [0x7f1902f5bb5f:0x7f1902f5bb69] in _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.07%    0.05%  [0x7f190309a0ae:0x7f190309a0d3] in _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.05%    0.05%  [0xffffffff8102c3bc:0xffffffff8102c3bc] in [unknown] ([unknown])
  0.05%           [0xffffffff810ed82f:0xffffffff810ed84f] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff811754a6:0xffffffff811754a6] in [unknown] ([unknown])
  0.05%    0.05%  [0xffffffff811aa642:0xffffffff811aa64c] in [unknown] ([unknown])
  0.05%    0.02%  [0xffffffff811fda53:0xffffffff811fda7d] in [unknown] ([unknown])
  0.05%           [0xffffffff813d2dea:0xffffffff813d2dea] in [unknown] ([unknown])
  0.04%    0.04%  [0xffffffff811fcfcd:0xffffffff811fcff3] in [unknown] ([unknown])
  3.13%    3.41%  <...other 273 warm regions...>
....................................................................................................
 99.98%   99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 91.74%   89.78%  StubRoutines::jshort_disjoint_arraycopy
  5.26%    4.92%  [unknown] ([unknown])
  0.72%    2.61%  net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArraySystemArraycopy_Overlap_jmhTest::benchmarkArraySystemArraycopy_Overlap_thrpt_jmhStub
  0.40%    0.62%  StubRoutines::jshort_arraycopy
  0.12%    0.14%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.11%    0.37%  vfprintf (libc-2.21.so)
  0.09%    0.11%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  0.07%    0.02%  __strchr_sse2 (libc-2.21.so)
  0.07%    0.07%  _IO_fwrite (libc-2.21.so)
  0.07%    0.11%  _ZN13RelocIterator10initializeEP7nmethodPhS2_ (libjvm.so)
  0.05%    0.02%  print_insn (hsdis-amd64.so)
  0.04%    0.02%  _ZN12stringStream5writeEPKcm (libjvm.so)
  0.04%    0.05%  _IO_default_xsputn (libc-2.21.so)
  0.04%           _ZN7Monitor6unlockEv (libjvm.so)
  0.04%           oappend (hsdis-amd64.so)
  0.04%    0.02%  _IO_file_xsputn@@GLIBC_2.2.5 (libc-2.21.so)
  0.04%    0.04%  __pthread_enable_asynccancel (libpthread-2.21.so)
  0.04%           _IO_no_init (libc-2.21.so)
  0.04%           <stub: method entry point (kind = zerolocals)>
  0.04%    0.07%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.95%    0.30%  <...other 53 warm methods...>
....................................................................................................
 99.98%   99.26%  <totals>

....[Distribution by Area]..........................................................................
 92.96%   93.01%  <generated code>
  5.26%    4.92%  <native code in ([unknown])>
  1.06%    1.16%  <native code in (libjvm.so)>
  0.51%    0.76%  <native code in (libc-2.21.so)>
  0.12%    0.04%  <native code in (hsdis-amd64.so)>
  0.05%    0.07%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libzip.so)>
....................................................................................................
 99.98%   99.96%  <totals>



# JMH 1.11.3 (released 41 days ago)
# VM version: JDK 1.8.0_72, VM 25.72-b15
# VM invoker: /home/balazsa/ingenuity/jdk1.8.0_72/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: net.greypanther.BenchmarkShortArrayCopy.benchmarkArrayUnsafeCopy
# Parameters: (arraySizeInKb = 10)

# Run progress: 96.67% complete, ETA 00:00:09
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4498811.321 ops/s
# Warmup Iteration   2: 4751340.742 ops/s
# Warmup Iteration   3: 4878846.962 ops/s
Iteration   1: 4545922.023 ops/s
Iteration   2: 4674925.547 ops/s
Iteration   3: 4780935.708 ops/s
# Processing profiler results: LinuxPerfAsmProfiler 


Result "benchmarkArrayUnsafeCopy":
  4667261.093 ±(99.9%) 2147179.658 ops/s [Average]
  (min, avg, max) = (4545922.023, 4667261.093, 4780935.708), stdev = 117694.162
  CI (99.9%): [2520081.435, 6814440.751] (assumes normal distribution)

Secondary result "·asm":
PrintAssembly processed: 135052 total address lines.
Perf output processed (skipped 3.152 seconds):
 Column 1: cycles (5461 events)
 Column 2: instructions (5453 events)

Hottest code regions (>10.00% "cycles" events):
....[Hottest Region 1]..............................................................................
 [0x7f912880478e:0x7f9128804833] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy

                          0x00007f912880478e: neg    %rdx
                  ╭       0x00007f9128804791: jmpq   Stub::jlong_disjoint_arraycopy+72 0x0x7f91288047c8
                  │↗  ↗   0x00007f9128804796: mov    0x8(%rdi,%rdx,8),%rax
                  ││  │   0x00007f912880479b: mov    %rax,0x8(%rcx,%rdx,8)
                  ││  │   0x00007f91288047a0: inc    %rdx
                  │╰  │   0x00007f91288047a3: jne    Stub::jlong_disjoint_arraycopy+22 0x0x7f9128804796
                  │   │   0x00007f91288047a5: xor    %rax,%rax
                  │   │   0x00007f91288047a8: leaveq 
                  │   │   0x00007f91288047a9: retq   
                  │   │   0x00007f91288047aa: nopw   0x0(%rax,%rax,1)
  3.48%    3.85%  │ ↗ │   0x00007f91288047b0: vmovdqu -0x38(%rdi,%rdx,8),%ymm0
  4.34%    4.66%  │ │ │   0x00007f91288047b6: vmovdqu %ymm0,-0x38(%rcx,%rdx,8)
  4.58%    2.93%  │ │ │   0x00007f91288047bc: vmovdqu -0x18(%rdi,%rdx,8),%ymm1
 35.34%   23.27%  │ │ │   0x00007f91288047c2: vmovdqu %ymm1,-0x18(%rcx,%rdx,8)
 42.08%   52.70%  ↘ │ │   0x00007f91288047c8: add    $0x8,%rdx
                    ╰ │   0x00007f91288047cc: jle    Stub::jlong_disjoint_arraycopy+48 0x0x7f91288047b0
  0.02%    0.06%      │   0x00007f91288047ce: sub    $0x4,%rdx
                     ╭│   0x00007f91288047d2: jg     Stub::jlong_disjoint_arraycopy+100 0x0x7f91288047e4
                     ││   0x00007f91288047d4: vmovdqu -0x18(%rdi,%rdx,8),%ymm0
                     ││   0x00007f91288047da: vmovdqu %ymm0,-0x18(%rcx,%rdx,8)
                     ││   0x00007f91288047e0: add    $0x4,%rdx
           0.06%     ↘│   0x00007f91288047e4: (bad)  
                      │   0x00007f91288047e7: rol    $0xf5,%ch
                      │   0x00007f91288047ea: out    %eax,(%dx)
                      │   0x00007f91288047eb: leaveq 
  0.07%    0.29%      │   0x00007f91288047ec: sub    $0x4,%rdx
                      ╰   0x00007f91288047f0: jl     Stub::jlong_disjoint_arraycopy+22 0x0x7f9128804796
           0.13%          0x00007f91288047f2: xor    %rax,%rax
                          0x00007f91288047f5: leaveq 
  0.35%    0.66%          0x00007f91288047f6: retq   
                        StubRoutines::jlong_arraycopy [0x00007f9128804800, 0x00007f9128804883[ (131 bytes)
                          0x00007f9128804800: push   %rbp
                          0x00007f9128804801: mov    %rsp,%rbp
  0.16%    0.04%          0x00007f9128804804: cmp    %rdi,%rsi
                          0x00007f9128804807: lea    (%rdi,%rdx,8),%rax
                          0x00007f912880480b: jbe    Stub::jlong_disjoint_arraycopy+4 0x0x7f9128804784
           0.02%          0x00007f9128804811: cmp    %rax,%rsi
                          0x00007f9128804814: jae    Stub::jlong_disjoint_arraycopy+4 0x0x7f9128804784
                          0x00007f912880481a: jmpq   Stub::jlong_arraycopy+86 0x0x7f9128804856
                       ↗  0x00007f912880481f: mov    -0x8(%rdi,%rdx,8),%rax
                       │  0x00007f9128804824: mov    %rax,-0x8(%rsi,%rdx,8)
                       │  0x00007f9128804829: dec    %rdx
                       ╰  0x00007f912880482c: jne    Stub::jlong_arraycopy+31 0x0x7f912880481f
                          0x00007f912880482e: xor    %rax,%rax
                          0x00007f9128804831: leaveq 
                          0x00007f9128804832: retq   
                          0x00007f9128804833: nopw   0x0(%rax,%rax,1)
....................................................................................................
 90.42%   88.67%  <total for region 1>

....[Hottest Regions]...............................................................................
 90.42%   88.67%  [0x7f912880478e:0x7f9128804833] in StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  3.11%    4.73%  [0x7f91289ac565:0x7f91289ac5de] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.90%    0.86%  [0xffffffff810603fa:0xffffffff810603fa] in [unknown] ([unknown])
  0.60%    0.62%  [0x7f913d416cd0:0x7f913d416cf6] in acl_CopyRight (libjvm.so)
  0.27%           [0xffffffff813d2dea:0xffffffff813d2dea] in [unknown] ([unknown])
  0.22%    0.07%  [0xffffffff817efb98:0xffffffff817efbd0] in [unknown] ([unknown])
  0.16%    0.04%  [0x7f9128804766:0x7f91288047a9] in StubRoutines::jlong_disjoint_arraycopy
  0.16%    0.29%  [0x7f9128804d71:0x7f9128804dcd] in StubRoutines::unsafe_arraycopy
  0.09%           [0xffffffff810c3b55:0xffffffff810c3b87] in [unknown] ([unknown])
  0.09%    0.02%  [0xffffffff813d3037:0xffffffff813d3037] in [unknown] ([unknown])
  0.09%    0.06%  [0xffffffff817efb39:0xffffffff817efb49] in [unknown] ([unknown])
  0.09%    0.29%  [0x7f91289a6680:0x7f91289a66e7] in net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.07%           [0xffffffff817f1c10:0xffffffff817f1c1c] in [unknown] ([unknown])
  0.07%    0.02%  [0x7f913dc6eb74:0x7f913dc6eb74] in _IO_fwrite (libc-2.21.so)
  0.05%           [0xffffffff811ffe78:0xffffffff811ffe78] in [unknown] ([unknown])
  0.05%           [0xffffffff817f195e:0xffffffff817f195e] in [unknown] ([unknown])
  0.05%    0.04%  [0xffffffff817f1a26:0xffffffff817f1a26] in [unknown] ([unknown])
  0.05%    0.02%  [0x7f913d4f6fec:0x7f913d4f7005] in _ZN7Monitor6unlockEv (libjvm.so)
  0.05%    0.11%  [0x7f913d545571:0x7f913d545598] in _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.07%  [0x7f913d548230:0x7f913d54823e] in _ZN10fileStream5writeEPKcm (libjvm.so)
  3.26%    4.05%  <...other 282 warm regions...>
....................................................................................................
 99.96%   99.96%  <totals>

....[Hottest Methods (after inlining)]..............................................................
 90.42%   88.67%  StubRoutines::jlong_disjoint_arraycopy; StubRoutines::jlong_arraycopy
  3.37%    3.23%  [unknown] ([unknown])
  3.24%    5.06%  net.greypanther.generated.BenchmarkShortArrayCopy_benchmarkArrayUnsafeCopy_jmhTest::benchmarkArrayUnsafeCopy_thrpt_jmhStub
  0.60%    0.62%  acl_CopyRight (libjvm.so)
  0.16%    0.35%  StubRoutines::unsafe_arraycopy
  0.16%    0.04%  StubRoutines::jlong_disjoint_arraycopy
  0.16%    0.07%  vfprintf (libc-2.21.so)
  0.09%    0.17%  _IO_fwrite (libc-2.21.so)
  0.07%    0.02%  _ZN7Monitor6unlockEv (libjvm.so)
  0.05%    0.06%  _IO_default_xsputn (libc-2.21.so)
  0.05%    0.09%  _ZN10fileStream5writeEPKcm (libjvm.so)
  0.05%           __pthread_disable_asynccancel (libpthread-2.21.so)
  0.05%           _ZN13defaultStream5writeEPKcm (libjvm.so)
  0.05%           <stub: method entry point (kind = zerolocals)>
  0.05%    0.11%  _ZN12outputStream15update_positionEPKcm (libjvm.so)
  0.05%    0.06%  print_insn (hsdis-amd64.so)
  0.04%    0.02%  _ZN10decode_env12handle_eventEPKcPh (libjvm.so)
  0.04%    0.06%  __strchr_sse2 (libc-2.21.so)
  0.04%    0.02%  oappend (hsdis-amd64.so)
  0.04%    0.07%  _ZN13xmlTextStream5writeEPKcm (libjvm.so)
  1.14%    0.50%  <...other 59 warm methods...>
....................................................................................................
 99.96%   99.19%  <totals>

....[Distribution by Area]..........................................................................
 94.21%   94.21%  <generated code>
  3.37%    3.23%  <native code in ([unknown])>
  1.65%    1.63%  <native code in (libjvm.so)>
  0.46%    0.61%  <native code in (libc-2.21.so)>
  0.13%    0.22%  <native code in (hsdis-amd64.so)>
  0.11%    0.07%  <native code in (libpthread-2.21.so)>
  0.02%           <native code in (libjava.so)>
  0.02%           <native code in (libzip.so)>
....................................................................................................
 99.96%   99.96%  <totals>



# Run complete. Total time: 00:04:46

Benchmark                                                            (arraySizeInKb)   Mode  Cnt        Score         Error  Units
BenchmarkByteArrayCopy.benchmarkArrayManualCopy                                   10  thrpt    3  1766213.952 ± 1196843.297  ops/s
BenchmarkByteArrayCopy.benchmarkArrayManualCopy:·asm                              10  thrpt               NaN                  ---
BenchmarkByteArrayCopy.benchmarkArrayManualCopy_Dec                               10  thrpt    3  1772363.911 ± 1202927.940  ops/s
BenchmarkByteArrayCopy.benchmarkArrayManualCopy_Dec:·asm                          10  thrpt               NaN                  ---
BenchmarkByteArrayCopy.benchmarkArrayManualCopy_Overlap_Dec                       10  thrpt    3   281208.028 ±  160170.015  ops/s
BenchmarkByteArrayCopy.benchmarkArrayManualCopy_Overlap_Dec:·asm                  10  thrpt               NaN                  ---
BenchmarkByteArrayCopy.benchmarkArraySystemArraycopy                              10  thrpt    3  4648439.974 ± 2476866.427  ops/s
BenchmarkByteArrayCopy.benchmarkArraySystemArraycopy:·asm                         10  thrpt               NaN                  ---
BenchmarkByteArrayCopy.benchmarkArraySystemArraycopy_Overlap                      10  thrpt    3  3602947.747 ± 8304035.769  ops/s
BenchmarkByteArrayCopy.benchmarkArraySystemArraycopy_Overlap:·asm                 10  thrpt               NaN                  ---
BenchmarkByteArrayCopy.benchmarkArrayUnsafeCopy                                   10  thrpt    3  4566237.459 ± 2178589.645  ops/s
BenchmarkByteArrayCopy.benchmarkArrayUnsafeCopy:·asm                              10  thrpt               NaN                  ---
BenchmarkIntArrayCopy.benchmarkArrayManualCopy                                    10  thrpt    3  6520001.172 ± 3239702.370  ops/s
BenchmarkIntArrayCopy.benchmarkArrayManualCopy:·asm                               10  thrpt               NaN                  ---
BenchmarkIntArrayCopy.benchmarkArrayManualCopy_Dec                                10  thrpt    3  6400586.857 ± 3431335.275  ops/s
BenchmarkIntArrayCopy.benchmarkArrayManualCopy_Dec:·asm                           10  thrpt               NaN                  ---
BenchmarkIntArrayCopy.benchmarkArrayManualCopy_Overlap_Dec                        10  thrpt    3  1212889.959 ±  862126.057  ops/s
BenchmarkIntArrayCopy.benchmarkArrayManualCopy_Overlap_Dec:·asm                   10  thrpt               NaN                  ---
BenchmarkIntArrayCopy.benchmarkArraySystemArraycopy                               10  thrpt    3  6992136.789 ± 3722844.977  ops/s
BenchmarkIntArrayCopy.benchmarkArraySystemArraycopy:·asm                          10  thrpt               NaN                  ---
BenchmarkIntArrayCopy.benchmarkArraySystemArraycopy_Overlap                       10  thrpt    3  4890986.372 ± 2072737.266  ops/s
BenchmarkIntArrayCopy.benchmarkArraySystemArraycopy_Overlap:·asm                  10  thrpt               NaN                  ---
BenchmarkIntArrayCopy.benchmarkArrayUnsafeCopy                                    10  thrpt    3  4827123.223 ± 2324623.813  ops/s
BenchmarkIntArrayCopy.benchmarkArrayUnsafeCopy:·asm                               10  thrpt               NaN                  ---
BenchmarkLongArrayCopy.benchmarkArrayManualCopy                                   10  thrpt    3  6886873.125 ± 3279003.376  ops/s
BenchmarkLongArrayCopy.benchmarkArrayManualCopy:·asm                              10  thrpt               NaN                  ---
BenchmarkLongArrayCopy.benchmarkArrayManualCopy_Dec                               10  thrpt    3  6959391.419 ± 4021416.651  ops/s
BenchmarkLongArrayCopy.benchmarkArrayManualCopy_Dec:·asm                          10  thrpt               NaN                  ---
BenchmarkLongArrayCopy.benchmarkArrayManualCopy_Overlap_Dec                       10  thrpt    3  2194011.465 ± 2985720.105  ops/s
BenchmarkLongArrayCopy.benchmarkArrayManualCopy_Overlap_Dec:·asm                  10  thrpt               NaN                  ---
BenchmarkLongArrayCopy.benchmarkArraySystemArraycopy                              10  thrpt    3  4544048.473 ± 1974966.751  ops/s
BenchmarkLongArrayCopy.benchmarkArraySystemArraycopy:·asm                         10  thrpt               NaN                  ---
BenchmarkLongArrayCopy.benchmarkArraySystemArraycopy_Overlap                      10  thrpt    3  4860095.145 ± 1871863.303  ops/s
BenchmarkLongArrayCopy.benchmarkArraySystemArraycopy_Overlap:·asm                 10  thrpt               NaN                  ---
BenchmarkLongArrayCopy.benchmarkArrayUnsafeCopy                                   10  thrpt    3  4773841.118 ± 2139939.997  ops/s
BenchmarkLongArrayCopy.benchmarkArrayUnsafeCopy:·asm                              10  thrpt               NaN                  ---
BenchmarkObjectArrayCopy.benchmarkArrayManualCopy                                 10  thrpt    3   459928.012 ±  288701.383  ops/s
BenchmarkObjectArrayCopy.benchmarkArrayManualCopy:·asm                            10  thrpt               NaN                  ---
BenchmarkObjectArrayCopy.benchmarkArrayManualCopy_Dec                             10  thrpt    3   474091.037 ±  370892.333  ops/s
BenchmarkObjectArrayCopy.benchmarkArrayManualCopy_Dec:·asm                        10  thrpt               NaN                  ---
BenchmarkObjectArrayCopy.benchmarkArrayManualCopy_Overlap_Dec                     10  thrpt    3   551604.377 ± 1236196.026  ops/s
BenchmarkObjectArrayCopy.benchmarkArrayManualCopy_Overlap_Dec:·asm                10  thrpt               NaN                  ---
BenchmarkObjectArrayCopy.benchmarkArraySystemArraycopy                            10  thrpt    3  4542765.687 ± 2151393.984  ops/s
BenchmarkObjectArrayCopy.benchmarkArraySystemArraycopy:·asm                       10  thrpt               NaN                  ---
BenchmarkObjectArrayCopy.benchmarkArraySystemArraycopy_Overlap                    10  thrpt    3  4388186.376 ± 3886062.562  ops/s
BenchmarkObjectArrayCopy.benchmarkArraySystemArraycopy_Overlap:·asm               10  thrpt               NaN                  ---
BenchmarkShortArrayCopy.benchmarkArrayManualCopy                                  10  thrpt    3  4093821.524 ± 6570688.250  ops/s
BenchmarkShortArrayCopy.benchmarkArrayManualCopy:·asm                             10  thrpt               NaN                  ---
BenchmarkShortArrayCopy.benchmarkArrayManualCopy_Dec                              10  thrpt    3  4130705.727 ±  412094.502  ops/s
BenchmarkShortArrayCopy.benchmarkArrayManualCopy_Dec:·asm                         10  thrpt               NaN                  ---
BenchmarkShortArrayCopy.benchmarkArrayManualCopy_Overlap_Dec                      10  thrpt    3   581192.812 ±  432477.487  ops/s
BenchmarkShortArrayCopy.benchmarkArrayManualCopy_Overlap_Dec:·asm                 10  thrpt               NaN                  ---
BenchmarkShortArrayCopy.benchmarkArraySystemArraycopy                             10  thrpt    3  4593441.195 ± 7793810.469  ops/s
BenchmarkShortArrayCopy.benchmarkArraySystemArraycopy:·asm                        10  thrpt               NaN                  ---
BenchmarkShortArrayCopy.benchmarkArraySystemArraycopy_Overlap                     10  thrpt    3  4593306.834 ± 2946847.507  ops/s
BenchmarkShortArrayCopy.benchmarkArraySystemArraycopy_Overlap:·asm                10  thrpt               NaN                  ---
BenchmarkShortArrayCopy.benchmarkArrayUnsafeCopy                                  10  thrpt    3  4667261.093 ± 2147179.658  ops/s
BenchmarkShortArrayCopy.benchmarkArrayUnsafeCopy:·asm                             10  thrpt               NaN                  ---
